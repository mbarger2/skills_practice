<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.22.1117.1841                               -->
<workbook original-version='18.1' source-build='2022.4.0 (20224.22.1117.1841)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='regression_data1 (regression_data)' inline='true' name='federated.0ibg9u21a1zdsg17cetup0v5alcd' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='regression_data' name='excel-direct.01ljpp91bfys5z19oljxb0lazwx7'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Owner/DA/Classwork/0 Activities/Projects/midproject/MB_House_Pricing_Regression/regression_data(labeled).xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.01ljpp91bfys5z19oljxb0lazwx7' name='regression_data1' table='[regression_data1$]' type='table'>
          <columns gridOrigin='A1:U21598:no:A1:U21598:0' header='yes' outcome='6'>
            <column datatype='string' name='id' ordinal='0' />
            <column datatype='date' name='date' ordinal='1' />
            <column datatype='integer' name='bedrooms' ordinal='2' />
            <column datatype='real' name='bathrooms' ordinal='3' />
            <column datatype='integer' name='sqft_living' ordinal='4' />
            <column datatype='integer' name='sqft_lot' ordinal='5' />
            <column datatype='real' name='floors' ordinal='6' />
            <column datatype='integer' name='waterfront' ordinal='7' />
            <column datatype='integer' name='view' ordinal='8' />
            <column datatype='integer' name='condition' ordinal='9' />
            <column datatype='integer' name='grade' ordinal='10' />
            <column datatype='integer' name='sqft_above' ordinal='11' />
            <column datatype='integer' name='sqft_basement' ordinal='12' />
            <column datatype='integer' name='yr_built' ordinal='13' />
            <column datatype='integer' name='yr_renovated' ordinal='14' />
            <column datatype='integer' name='zipcode' ordinal='15' />
            <column datatype='real' name='lat' ordinal='16' />
            <column datatype='real' name='long' ordinal='17' />
            <column datatype='integer' name='sqft_living15' ordinal='18' />
            <column datatype='integer' name='sqft_lot15' ordinal='19' />
            <column datatype='integer' name='price' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.01ljpp91bfys5z19oljxb0lazwx7' name='regression_data1' table='[regression_data1$]' type='table'>
          <columns gridOrigin='A1:U21598:no:A1:U21598:0' header='yes' outcome='6'>
            <column datatype='string' name='id' ordinal='0' />
            <column datatype='date' name='date' ordinal='1' />
            <column datatype='integer' name='bedrooms' ordinal='2' />
            <column datatype='real' name='bathrooms' ordinal='3' />
            <column datatype='integer' name='sqft_living' ordinal='4' />
            <column datatype='integer' name='sqft_lot' ordinal='5' />
            <column datatype='real' name='floors' ordinal='6' />
            <column datatype='integer' name='waterfront' ordinal='7' />
            <column datatype='integer' name='view' ordinal='8' />
            <column datatype='integer' name='condition' ordinal='9' />
            <column datatype='integer' name='grade' ordinal='10' />
            <column datatype='integer' name='sqft_above' ordinal='11' />
            <column datatype='integer' name='sqft_basement' ordinal='12' />
            <column datatype='integer' name='yr_built' ordinal='13' />
            <column datatype='integer' name='yr_renovated' ordinal='14' />
            <column datatype='integer' name='zipcode' ordinal='15' />
            <column datatype='real' name='lat' ordinal='16' />
            <column datatype='real' name='long' ordinal='17' />
            <column datatype='integer' name='sqft_living15' ordinal='18' />
            <column datatype='integer' name='sqft_lot15' ordinal='19' />
            <column datatype='integer' name='price' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U21598:no:A1:U21598:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bedrooms</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bedrooms]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>bedrooms</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bathrooms</remote-name>
            <remote-type>5</remote-type>
            <local-name>[bathrooms]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>bathrooms</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sqft_living</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sqft_living]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>sqft_living</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sqft_lot</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sqft_lot]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>sqft_lot</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>floors</remote-name>
            <remote-type>5</remote-type>
            <local-name>[floors]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>floors</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>waterfront</remote-name>
            <remote-type>20</remote-type>
            <local-name>[waterfront]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>waterfront</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>view</remote-name>
            <remote-type>20</remote-type>
            <local-name>[view]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>view</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>condition</remote-name>
            <remote-type>20</remote-type>
            <local-name>[condition]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>condition</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>grade</remote-name>
            <remote-type>20</remote-type>
            <local-name>[grade]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>grade</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sqft_above</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sqft_above]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>sqft_above</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sqft_basement</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sqft_basement]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>sqft_basement</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>yr_built</remote-name>
            <remote-type>20</remote-type>
            <local-name>[yr_built]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>yr_built</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>yr_renovated</remote-name>
            <remote-type>20</remote-type>
            <local-name>[yr_renovated]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>yr_renovated</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zipcode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[zipcode]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>zipcode</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>long</remote-name>
            <remote-type>5</remote-type>
            <local-name>[long]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>long</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sqft_living15</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sqft_living15]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>sqft_living15</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sqft_lot15</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sqft_lot15]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>sqft_lot15</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>20</remote-type>
            <local-name>[price]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>price</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='None' caption='Bathrooms (bin)' datatype='integer' name='[Bathrooms (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[bathrooms]' peg='0' size='1' />
      </column>
      <column aggregation='None' datatype='integer' name='[Bedrooms (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[bedrooms]' peg='0' size='1' />
      </column>
      <column caption='Price Trends by Periods' datatype='string' name='[Calculation_1312799340457521152]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [yr_built]&lt;2000 THEN &quot;1900-1999&quot;&#13;&#10;ELSEIF [yr_built]&lt;2010 THEN &quot;2000-2009&quot;&#13;&#10;ELSE &quot;2010 - Present&quot;&#13;&#10;END' />
      </column>
      <column caption='Price Trends by Periods of Time' datatype='string' name='[Calculation_1312799340667265028]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [yr_built]&lt;2000 THEN &quot;1900-1999&quot;&#13;&#10;ELSEIF [yr_built]&lt;2010 THEN &quot;2000-2009&quot;&#13;&#10;ELSE &quot;2010 - Present&quot;&#13;&#10;END' />
      </column>
      <column aggregation='None' caption='Price (bin)' datatype='integer' name='[Price (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='4' formula='[price]' peg='0' size='50000' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='regression_data1' datatype='table' name='[__tableau_internal_object_id__].[regression!data1_26A14A7984284464BBB8B91BDC9375F8]' role='measure' type='quantitative' />
      <column caption='Bathrooms' datatype='real' name='[bathrooms]' role='measure' type='quantitative' />
      <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
      <column caption='Condition' datatype='integer' name='[condition]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Floors' datatype='real' name='[floors]' role='measure' type='quantitative' />
      <column caption='Grade' datatype='integer' name='[grade]' role='measure' type='quantitative' />
      <column caption='Id' datatype='string' name='[id]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Long' datatype='real' name='[long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
      <column caption='Sqft Above' datatype='integer' name='[sqft_above]' role='measure' type='quantitative' />
      <column caption='Sqft Basement' datatype='integer' name='[sqft_basement]' role='measure' type='quantitative' />
      <column caption='Sqft Living15' datatype='integer' name='[sqft_living15]' role='measure' type='quantitative' />
      <column caption='Sqft Living' datatype='integer' name='[sqft_living]' role='measure' type='quantitative' />
      <column caption='Sqft Lot15' datatype='integer' name='[sqft_lot15]' role='measure' type='quantitative' />
      <column caption='Sqft Lot' datatype='integer' name='[sqft_lot]' role='measure' type='quantitative' />
      <column caption='View' datatype='integer' name='[view]' role='measure' type='quantitative' />
      <column caption='Waterfront' datatype='integer' name='[waterfront]' role='measure' type='quantitative' />
      <column caption='Yr Built' datatype='integer' name='[yr_built]' role='dimension' type='ordinal' />
      <column caption='Yr Renovated' datatype='integer' name='[yr_renovated]' role='dimension' type='quantitative' />
      <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column-instance column='[bathrooms]' derivation='Count' name='[cnt:bathrooms:qk]' pivot='key' type='quantitative' />
      <column-instance column='[bedrooms]' derivation='Count' name='[cnt:bedrooms:qk]' pivot='key' type='quantitative' />
      <column-instance column='[bathrooms]' derivation='CountD' name='[ctd:bathrooms:qk]' pivot='key' type='quantitative' />
      <column-instance column='[bedrooms]' derivation='CountD' name='[ctd:bedrooms:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Yr Renovated Set 2]' derivation='InOut' name='[io:Yr Renovated Set 2:nk]' pivot='key' type='nominal' />
      <column-instance column='[Bathrooms (bin)]' derivation='None' name='[none:Bathrooms (bin):ok]' pivot='key' type='ordinal' />
      <column-instance column='[Bedrooms (bin)]' derivation='None' name='[none:Bedrooms (bin):ok]' pivot='key' type='ordinal' />
      <column-instance column='[bathrooms]' derivation='Sum' name='[sum:bathrooms:qk]' pivot='key' type='quantitative' />
      <column-instance column='[bedrooms]' derivation='Sum' name='[sum:bedrooms:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Bathrooms (bin),Bedrooms (bin))' hidden='true' name='[Action (Bathrooms (bin),Bedrooms (bin))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Bathrooms (bin)]' />
          <groupfilter function='level-members' level='[none:Bedrooms (bin):ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Price Trends by Periods of Time)' hidden='true' name='[Action (Price Trends by Periods of Time)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1312799340667265028]' />
        </groupfilter>
      </group>
      <group caption='Action (Yr Built)' hidden='true' name='[Action (Yr Built)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr_built]' />
        </groupfilter>
      </group>
      <group caption='Action (Zipcode)' hidden='true' name='[Action (Zipcode)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[zipcode]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Bathrooms (bin),Bedrooms (bin))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Bathrooms (bin):ok]' />
          <groupfilter function='level-members' level='[none:Bedrooms (bin):ok]' />
        </groupfilter>
      </group>
      <group caption='Yr Renovated Set 2' name='[Yr Renovated Set 2]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter from='1934' function='range' level='[yr_renovated]' to='2015' />
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:bathrooms:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ibg9u21a1zdsg17cetup0v5alcd].[ctd:bathrooms:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ibg9u21a1zdsg17cetup0v5alcd].[sum:bathrooms:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:bedrooms:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ibg9u21a1zdsg17cetup0v5alcd].[ctd:bedrooms:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ibg9u21a1zdsg17cetup0v5alcd].[sum:bedrooms:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Yr Renovated Set 2:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Bedrooms (bin):ok]' type='palette'>
            <map to='#2a5783'>
              <bucket>11</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>33</bucket>
            </map>
            <map to='#376491'>
              <bucket>10</bucket>
            </map>
            <map to='#42709e'>
              <bucket>9</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>8</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>7</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>6</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>5</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>4</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>3</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>2</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>1</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='regression_data1' id='regression!data1_26A14A7984284464BBB8B91BDC9375F8'>
            <properties context=''>
              <relation connection='excel-direct.01ljpp91bfys5z19oljxb0lazwx7' name='regression_data1' table='[regression_data1$]' type='table'>
                <columns gridOrigin='A1:U21598:no:A1:U21598:0' header='yes' outcome='6'>
                  <column datatype='string' name='id' ordinal='0' />
                  <column datatype='date' name='date' ordinal='1' />
                  <column datatype='integer' name='bedrooms' ordinal='2' />
                  <column datatype='real' name='bathrooms' ordinal='3' />
                  <column datatype='integer' name='sqft_living' ordinal='4' />
                  <column datatype='integer' name='sqft_lot' ordinal='5' />
                  <column datatype='real' name='floors' ordinal='6' />
                  <column datatype='integer' name='waterfront' ordinal='7' />
                  <column datatype='integer' name='view' ordinal='8' />
                  <column datatype='integer' name='condition' ordinal='9' />
                  <column datatype='integer' name='grade' ordinal='10' />
                  <column datatype='integer' name='sqft_above' ordinal='11' />
                  <column datatype='integer' name='sqft_basement' ordinal='12' />
                  <column datatype='integer' name='yr_built' ordinal='13' />
                  <column datatype='integer' name='yr_renovated' ordinal='14' />
                  <column datatype='integer' name='zipcode' ordinal='15' />
                  <column datatype='real' name='lat' ordinal='16' />
                  <column datatype='real' name='long' ordinal='17' />
                  <column datatype='integer' name='sqft_living15' ordinal='18' />
                  <column datatype='integer' name='sqft_lot15' ordinal='19' />
                  <column datatype='integer' name='price' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='period bar 1' name='[Action10_DC7E930F97754AF49A8D48E1DE0820CE]'>
      <activation type='on-select' />
      <source dashboard='seattle metrics float' type='sheet' worksheet='Period pricing' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Period pricing' />
        <param name='special-fields' value='all' />
        <param name='target' value='seattle metrics float' />
      </command>
    </action>
    <action caption='raw/reno 1' name='[Action11_0CFD91BF7FC14B738FDC32518B65B359]'>
      <activation type='on-select' />
      <source dashboard='seattle metrics float' type='sheet' worksheet='raw/reno sales' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='raw/reno sales' />
        <param name='special-fields' value='all' />
        <param name='target' value='seattle metrics float' />
      </command>
    </action>
    <action caption='bedbath bar 1' name='[Action12_F1053121CF924D4AB4F17812C6AE36AD]'>
      <activation type='on-select' />
      <source dashboard='seattle metrics float' type='sheet' worksheet='bedbathbar' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='bedbathbar,bed pi (2)' />
        <param name='special-fields' value='all' />
        <param name='target' value='seattle metrics float' />
      </command>
    </action>
    <action caption='Price map filter' name='[Action1_2D9A7A6655F24FBBB52D8DE981D7434D]'>
      <activation type='on-select' />
      <source dashboard='seattle metrics tiled' type='sheet' worksheet='price map' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='price map' />
        <param name='special-fields' value='all' />
        <param name='target' value='seattle metrics tiled' />
      </command>
    </action>
    <action caption='zip sales map' name='[Action2_11E2714E74D74FC3A3DF01F673020DB2]'>
      <activation type='on-select' />
      <source dashboard='seattle metrics tiled' type='sheet' worksheet='Sales since 2000' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Sales since 2000' />
        <param name='special-fields' value='all' />
        <param name='target' value='seattle metrics tiled' />
      </command>
    </action>
    <action caption='bed pi' name='[Action3_7287A40A2C214F4B8DB8E86A28196BCB]'>
      <activation type='on-select' />
      <source dashboard='seattle metrics tiled' type='sheet' worksheet='bed pi (2)' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='bed pi (2)' />
        <param name='special-fields' value='all' />
        <param name='target' value='seattle metrics tiled' />
      </command>
    </action>
    <action caption='period bar' name='[Action4_26524BA88C0545D6A0977D59FF566067]'>
      <activation type='on-select' />
      <source dashboard='seattle metrics tiled' type='sheet' worksheet='Period pricing' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Period pricing' />
        <param name='special-fields' value='all' />
        <param name='target' value='seattle metrics tiled' />
      </command>
    </action>
    <action caption='raw/reno' name='[Action5_3198AA653B064FE7BEE20B73DA80061A]'>
      <activation type='on-select' />
      <source dashboard='seattle metrics tiled' type='sheet' worksheet='raw/reno sales' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='raw/reno sales' />
        <param name='special-fields' value='all' />
        <param name='target' value='seattle metrics tiled' />
      </command>
    </action>
    <action caption='bedbath bar' name='[Action6_A2582F5EA88441C2A6C330F3EEF5B522]'>
      <activation type='on-select' />
      <source dashboard='seattle metrics tiled' type='sheet' worksheet='bedbathbar' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='bedbathbar,bed pi (2)' />
        <param name='special-fields' value='all' />
        <param name='target' value='seattle metrics tiled' />
      </command>
    </action>
    <action caption='Price map filter 1' name='[Action7_7FD4D46B9A9A400FB81B01004E2D0185]'>
      <activation type='on-select' />
      <source dashboard='seattle metrics float' type='sheet' worksheet='price map' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='price map' />
        <param name='special-fields' value='all' />
        <param name='target' value='seattle metrics float' />
      </command>
    </action>
    <action caption='bed pi 1' name='[Action8_CDFC2A5397064A48830A0BC98133F11B]'>
      <activation type='on-select' />
      <source dashboard='seattle metrics float' type='sheet' worksheet='bed pi (2)' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='bed pi (2)' />
        <param name='special-fields' value='all' />
        <param name='target' value='seattle metrics float' />
      </command>
    </action>
    <action caption='zip sales map 1' name='[Action9_E0E36AB65CCA41648445F412AC762D29]'>
      <activation type='on-select' />
      <source dashboard='seattle metrics float' type='sheet' worksheet='Sales since 2000' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Sales since 2000' />
        <param name='special-fields' value='all' />
        <param name='target' value='seattle metrics float' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Bath'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Bath Counts</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='regression_data1 (regression_data)' name='federated.0ibg9u21a1zdsg17cetup0v5alcd' />
          </datasources>
          <datasource-dependencies datasource='federated.0ibg9u21a1zdsg17cetup0v5alcd'>
            <column aggregation='None' caption='Bathrooms (bin)' datatype='integer' name='[Bathrooms (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[bathrooms]' peg='0' size='1' />
            </column>
            <column caption='Bathrooms' datatype='real' name='[bathrooms]' role='measure' type='quantitative' />
            <column-instance column='[bathrooms]' derivation='Count' name='[cnt:bathrooms:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Bathrooms (bin)]' derivation='None' name='[none:Bathrooms (bin):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='fill-color' id='annotation_2' value='#fafafa00' />
            <format attr='fill-color' id='annotation_3' value='#fafafa00' />
            <format attr='fill-color' id='annotation_4' value='#fafafa00' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bathrooms (bin):ok]' />
              <wedge-size column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:bathrooms:qk]' />
              <size column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:bathrooms:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols />
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:bathrooms:qk]</field>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bathrooms (bin):ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>2228</value>
                <value>3</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:bathrooms:qk]</field>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bathrooms (bin):ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>10539</value>
                <value>2</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:bathrooms:qk]</field>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bathrooms (bin):ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>8353</value>
                <value>1</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
        <annotations>
          <annotation class='area' id='2' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run>1</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.538557'>
                  <node-reference />
                </x-coord>
                <y-coord cell-offset='0.415011'>
                  <node-reference />
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.585821'>
                  <node-reference />
                </x-coord>
                <y-coord cell-offset='0.496689'>
                  <node-reference />
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='area' id='3' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run>2</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.419154'>
                  <node-reference />
                </x-coord>
                <y-coord cell-offset='0.540839'>
                  <node-reference />
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.470149'>
                  <node-reference />
                </x-coord>
                <y-coord cell-offset='0.629139'>
                  <node-reference />
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='area' id='4' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run>3</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.439055'>
                  <node-reference />
                </x-coord>
                <y-coord cell-offset='0.306843'>
                  <node-reference />
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.473881'>
                  <node-reference />
                </x-coord>
                <y-coord cell-offset='0.377483'>
                  <node-reference />
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{D86DC646-8153-4946-B1F1-078B4D28D8EA}' />
    </worksheet>
    <worksheet name='Period pricing'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#203cbc' fontsize='14'>Price Trends by Year Built</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='regression_data1 (regression_data)' name='federated.0ibg9u21a1zdsg17cetup0v5alcd' />
          </datasources>
          <datasource-dependencies datasource='federated.0ibg9u21a1zdsg17cetup0v5alcd'>
            <column aggregation='None' caption='Bathrooms (bin)' datatype='integer' name='[Bathrooms (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[bathrooms]' peg='0' size='1' />
            </column>
            <column aggregation='None' datatype='integer' name='[Bedrooms (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[bedrooms]' peg='0' size='1' />
            </column>
            <column caption='Price Trends by Periods of Time' datatype='string' name='[Calculation_1312799340667265028]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [yr_built]&lt;2000 THEN &quot;1900-1999&quot;&#13;&#10;ELSEIF [yr_built]&lt;2010 THEN &quot;2000-2009&quot;&#13;&#10;ELSE &quot;2010 - Present&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column caption='Bathrooms' datatype='real' name='[bathrooms]' role='measure' type='quantitative' />
            <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
            <column-instance column='[id]' derivation='CountD' name='[ctd:id:qk]' pivot='key' type='quantitative' />
            <column caption='Id' datatype='string' name='[id]' role='dimension' type='nominal' />
            <column-instance column='[sqft_living]' derivation='Median' name='[med:sqft_living:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Bedrooms (bin)]' derivation='None' name='[none:Bedrooms (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1312799340667265028]' derivation='None' name='[none:Calculation_1312799340667265028:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column caption='Sqft Living' datatype='integer' name='[sqft_living]' role='measure' type='quantitative' />
            <column caption='Yr Built' datatype='integer' name='[yr_built]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Bathrooms (bin),Bedrooms (bin))]'>
            <groupfilter function='reorder-dimensionality' user:ui-action-filter='[Action6_A2582F5EA88441C2A6C330F3EEF5B522]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='1' />
                  <groupfilter function='member' level='[Bathrooms (bin)]' member='1' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='2' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='1' />
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='2' />
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='3' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='3' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='1' />
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='2' />
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='3' />
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='4' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='4' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='2' />
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='3' />
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='4' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='5' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='1' />
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='2' />
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='3' />
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='4' />
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='5' />
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='6' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[Bathrooms (bin)]' />
                <hierarchy name='[none:Bedrooms (bin):ok]' />
              </order>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Zipcode)]'>
            <groupfilter function='union' user:ui-action-filter='[Action1_2D9A7A6655F24FBBB52D8DE981D7434D]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[zipcode]' member='98001' />
              <groupfilter function='member' level='[zipcode]' member='98002' />
              <groupfilter function='member' level='[zipcode]' member='98003' />
              <groupfilter function='member' level='[zipcode]' member='98004' />
              <groupfilter function='member' level='[zipcode]' member='98005' />
              <groupfilter function='member' level='[zipcode]' member='98006' />
              <groupfilter function='member' level='[zipcode]' member='98007' />
              <groupfilter function='member' level='[zipcode]' member='98008' />
              <groupfilter function='member' level='[zipcode]' member='98010' />
              <groupfilter function='member' level='[zipcode]' member='98011' />
              <groupfilter function='member' level='[zipcode]' member='98014' />
              <groupfilter function='member' level='[zipcode]' member='98019' />
              <groupfilter function='member' level='[zipcode]' member='98022' />
              <groupfilter function='member' level='[zipcode]' member='98023' />
              <groupfilter function='member' level='[zipcode]' member='98024' />
              <groupfilter function='member' level='[zipcode]' member='98027' />
              <groupfilter function='member' level='[zipcode]' member='98028' />
              <groupfilter function='member' level='[zipcode]' member='98029' />
              <groupfilter function='member' level='[zipcode]' member='98030' />
              <groupfilter function='member' level='[zipcode]' member='98031' />
              <groupfilter function='member' level='[zipcode]' member='98032' />
              <groupfilter function='member' level='[zipcode]' member='98033' />
              <groupfilter function='member' level='[zipcode]' member='98034' />
              <groupfilter function='member' level='[zipcode]' member='98038' />
              <groupfilter function='member' level='[zipcode]' member='98039' />
              <groupfilter function='member' level='[zipcode]' member='98040' />
              <groupfilter function='member' level='[zipcode]' member='98042' />
              <groupfilter function='member' level='[zipcode]' member='98045' />
              <groupfilter function='member' level='[zipcode]' member='98052' />
              <groupfilter function='member' level='[zipcode]' member='98053' />
              <groupfilter function='member' level='[zipcode]' member='98055' />
              <groupfilter function='member' level='[zipcode]' member='98056' />
              <groupfilter function='member' level='[zipcode]' member='98058' />
              <groupfilter function='member' level='[zipcode]' member='98059' />
              <groupfilter function='member' level='[zipcode]' member='98065' />
              <groupfilter function='member' level='[zipcode]' member='98070' />
              <groupfilter function='member' level='[zipcode]' member='98072' />
              <groupfilter function='member' level='[zipcode]' member='98074' />
              <groupfilter function='member' level='[zipcode]' member='98075' />
              <groupfilter function='member' level='[zipcode]' member='98077' />
              <groupfilter function='member' level='[zipcode]' member='98092' />
              <groupfilter function='member' level='[zipcode]' member='98102' />
              <groupfilter function='member' level='[zipcode]' member='98103' />
              <groupfilter function='member' level='[zipcode]' member='98105' />
              <groupfilter function='member' level='[zipcode]' member='98106' />
              <groupfilter function='member' level='[zipcode]' member='98107' />
              <groupfilter function='member' level='[zipcode]' member='98108' />
              <groupfilter function='member' level='[zipcode]' member='98109' />
              <groupfilter function='member' level='[zipcode]' member='98112' />
              <groupfilter function='member' level='[zipcode]' member='98115' />
              <groupfilter function='member' level='[zipcode]' member='98116' />
              <groupfilter function='member' level='[zipcode]' member='98117' />
              <groupfilter function='member' level='[zipcode]' member='98118' />
              <groupfilter function='member' level='[zipcode]' member='98119' />
              <groupfilter function='member' level='[zipcode]' member='98122' />
              <groupfilter function='member' level='[zipcode]' member='98125' />
              <groupfilter function='member' level='[zipcode]' member='98126' />
              <groupfilter function='member' level='[zipcode]' member='98133' />
              <groupfilter function='member' level='[zipcode]' member='98136' />
              <groupfilter function='member' level='[zipcode]' member='98144' />
              <groupfilter function='member' level='[zipcode]' member='98146' />
              <groupfilter function='member' level='[zipcode]' member='98148' />
              <groupfilter function='member' level='[zipcode]' member='98155' />
              <groupfilter function='member' level='[zipcode]' member='98166' />
              <groupfilter function='member' level='[zipcode]' member='98168' />
              <groupfilter function='member' level='[zipcode]' member='98177' />
              <groupfilter function='member' level='[zipcode]' member='98178' />
              <groupfilter function='member' level='[zipcode]' member='98188' />
              <groupfilter function='member' level='[zipcode]' member='98198' />
              <groupfilter function='member' level='[zipcode]' member='98199' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Zipcode)]</column>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Bathrooms (bin),Bedrooms (bin))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:price:qk]' scope='rows' value='Average Price' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:sqft_living:qk]' value='Median GLA' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:sqft_living:qk]' />
              <size column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[ctd:id:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#898989' fontsize='12'>Of </run>
                <run bold='true' fontcolor='#f17b79' fontsize='12'><![CDATA[<[federated.0ibg9u21a1zdsg17cetup0v5alcd].[ctd:id:qk]>]]></run>
                <run bold='true' fontcolor='#898989' fontsize='12'> sales of houses built in this time span, the median square foot of living space was </run>
                <run bold='true' fontcolor='#f17b79' fontsize='12'><![CDATA[<[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:sqft_living:qk]>]]></run>
                <run bold='true' fontcolor='#898989' fontsize='12'> and the </run>
                <run fontcolor='#898989' fontsize='12'> average price  was $</run>
                <run bold='true' fontcolor='#f17b79' fontsize='12'><![CDATA[<[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:price:qk]>]]></run>
                <run bold='true' fontcolor='#898989' fontsize='12'>.</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:price:qk]</rows>
        <cols>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Calculation_1312799340667265028:nk]</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Calculation_1312799340667265028:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:price:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:price:qk]</field>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[ctd:id:qk]</field>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:sqft_living:qk]</field>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Calculation_1312799340667265028:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>634066.16357775987</value>
                <value>750</value>
                <value>2450.0</value>
                <value>&quot;2010 - Present&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Calculation_1312799340667265028:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:price:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:price:qk]</field>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[ctd:id:qk]</field>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:sqft_living:qk]</field>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Calculation_1312799340667265028:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>613263.97467994306</value>
                <value>1855</value>
                <value>2310.0</value>
                <value>&quot;2000-2009&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Calculation_1312799340667265028:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:price:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:price:qk]</field>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[ctd:id:qk]</field>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:sqft_living:qk]</field>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Calculation_1312799340667265028:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>518157.24232527759</value>
                <value>8731</value>
                <value>1830.0</value>
                <value>&quot;1900-1999&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{B2E9C79B-D092-498B-A6AB-ACF422A0707B}' />
    </worksheet>
    <worksheet name='Sales since 2000'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#203cbc' fontsize='14'>Sales Since 2000 </run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#203cbc' fontsize='14'>(by Zip Code)</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='regression_data1 (regression_data)' name='federated.0ibg9u21a1zdsg17cetup0v5alcd' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ibg9u21a1zdsg17cetup0v5alcd'>
            <column aggregation='None' caption='Bathrooms (bin)' datatype='integer' name='[Bathrooms (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[bathrooms]' peg='0' size='1' />
            </column>
            <column aggregation='None' datatype='integer' name='[Bedrooms (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[bedrooms]' peg='0' size='1' />
            </column>
            <column caption='Price Trends by Periods of Time' datatype='string' name='[Calculation_1312799340667265028]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [yr_built]&lt;2000 THEN &quot;1900-1999&quot;&#13;&#10;ELSEIF [yr_built]&lt;2010 THEN &quot;2000-2009&quot;&#13;&#10;ELSE &quot;2010 - Present&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[lat]' derivation='Avg' name='[avg:lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[long]' derivation='Avg' name='[avg:long:qk]' pivot='key' type='quantitative' />
            <column caption='Bathrooms' datatype='real' name='[bathrooms]' role='measure' type='quantitative' />
            <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
            <column-instance column='[id]' derivation='Count' name='[cnt:id:qk]' pivot='key' type='quantitative' />
            <column caption='Id' datatype='string' name='[id]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Long' datatype='real' name='[long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[Bedrooms (bin)]' derivation='None' name='[none:Bedrooms (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[yr_built]' derivation='None' name='[none:yr_built:ok]' pivot='key' type='ordinal' />
            <column-instance column='[zipcode]' derivation='None' name='[none:zipcode:ok]' pivot='key' type='ordinal' />
            <column caption='Yr Built' datatype='integer' name='[yr_built]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Bathrooms (bin),Bedrooms (bin))]'>
            <groupfilter function='reorder-dimensionality' user:ui-action-filter='[Action6_A2582F5EA88441C2A6C330F3EEF5B522]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='1' />
                  <groupfilter function='member' level='[Bathrooms (bin)]' member='1' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='2' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='1' />
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='2' />
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='3' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='3' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='1' />
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='2' />
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='3' />
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='4' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='4' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='2' />
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='3' />
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='4' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='5' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='1' />
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='2' />
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='3' />
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='4' />
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='5' />
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='6' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[Bathrooms (bin)]' />
                <hierarchy name='[none:Bedrooms (bin):ok]' />
              </order>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Price Trends by Periods of Time)]'>
            <groupfilter function='union' user:ui-action-filter='[Action4_26524BA88C0545D6A0977D59FF566067]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_1312799340667265028]' member='&quot;1900-1999&quot;' />
              <groupfilter function='member' level='[Calculation_1312799340667265028]' member='&quot;2000-2009&quot;' />
              <groupfilter function='member' level='[Calculation_1312799340667265028]' member='&quot;2010 - Present&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Zipcode)]'>
            <groupfilter function='union' user:ui-action-filter='[Action1_2D9A7A6655F24FBBB52D8DE981D7434D]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[zipcode]' member='98001' />
              <groupfilter function='member' level='[zipcode]' member='98002' />
              <groupfilter function='member' level='[zipcode]' member='98003' />
              <groupfilter function='member' level='[zipcode]' member='98004' />
              <groupfilter function='member' level='[zipcode]' member='98005' />
              <groupfilter function='member' level='[zipcode]' member='98006' />
              <groupfilter function='member' level='[zipcode]' member='98007' />
              <groupfilter function='member' level='[zipcode]' member='98008' />
              <groupfilter function='member' level='[zipcode]' member='98010' />
              <groupfilter function='member' level='[zipcode]' member='98011' />
              <groupfilter function='member' level='[zipcode]' member='98014' />
              <groupfilter function='member' level='[zipcode]' member='98019' />
              <groupfilter function='member' level='[zipcode]' member='98022' />
              <groupfilter function='member' level='[zipcode]' member='98023' />
              <groupfilter function='member' level='[zipcode]' member='98024' />
              <groupfilter function='member' level='[zipcode]' member='98027' />
              <groupfilter function='member' level='[zipcode]' member='98028' />
              <groupfilter function='member' level='[zipcode]' member='98029' />
              <groupfilter function='member' level='[zipcode]' member='98030' />
              <groupfilter function='member' level='[zipcode]' member='98031' />
              <groupfilter function='member' level='[zipcode]' member='98032' />
              <groupfilter function='member' level='[zipcode]' member='98033' />
              <groupfilter function='member' level='[zipcode]' member='98034' />
              <groupfilter function='member' level='[zipcode]' member='98038' />
              <groupfilter function='member' level='[zipcode]' member='98039' />
              <groupfilter function='member' level='[zipcode]' member='98040' />
              <groupfilter function='member' level='[zipcode]' member='98042' />
              <groupfilter function='member' level='[zipcode]' member='98045' />
              <groupfilter function='member' level='[zipcode]' member='98052' />
              <groupfilter function='member' level='[zipcode]' member='98053' />
              <groupfilter function='member' level='[zipcode]' member='98055' />
              <groupfilter function='member' level='[zipcode]' member='98056' />
              <groupfilter function='member' level='[zipcode]' member='98058' />
              <groupfilter function='member' level='[zipcode]' member='98059' />
              <groupfilter function='member' level='[zipcode]' member='98065' />
              <groupfilter function='member' level='[zipcode]' member='98070' />
              <groupfilter function='member' level='[zipcode]' member='98072' />
              <groupfilter function='member' level='[zipcode]' member='98074' />
              <groupfilter function='member' level='[zipcode]' member='98075' />
              <groupfilter function='member' level='[zipcode]' member='98077' />
              <groupfilter function='member' level='[zipcode]' member='98092' />
              <groupfilter function='member' level='[zipcode]' member='98102' />
              <groupfilter function='member' level='[zipcode]' member='98103' />
              <groupfilter function='member' level='[zipcode]' member='98105' />
              <groupfilter function='member' level='[zipcode]' member='98106' />
              <groupfilter function='member' level='[zipcode]' member='98107' />
              <groupfilter function='member' level='[zipcode]' member='98108' />
              <groupfilter function='member' level='[zipcode]' member='98109' />
              <groupfilter function='member' level='[zipcode]' member='98112' />
              <groupfilter function='member' level='[zipcode]' member='98115' />
              <groupfilter function='member' level='[zipcode]' member='98116' />
              <groupfilter function='member' level='[zipcode]' member='98117' />
              <groupfilter function='member' level='[zipcode]' member='98118' />
              <groupfilter function='member' level='[zipcode]' member='98119' />
              <groupfilter function='member' level='[zipcode]' member='98122' />
              <groupfilter function='member' level='[zipcode]' member='98125' />
              <groupfilter function='member' level='[zipcode]' member='98126' />
              <groupfilter function='member' level='[zipcode]' member='98133' />
              <groupfilter function='member' level='[zipcode]' member='98136' />
              <groupfilter function='member' level='[zipcode]' member='98144' />
              <groupfilter function='member' level='[zipcode]' member='98146' />
              <groupfilter function='member' level='[zipcode]' member='98148' />
              <groupfilter function='member' level='[zipcode]' member='98155' />
              <groupfilter function='member' level='[zipcode]' member='98166' />
              <groupfilter function='member' level='[zipcode]' member='98168' />
              <groupfilter function='member' level='[zipcode]' member='98177' />
              <groupfilter function='member' level='[zipcode]' member='98178' />
              <groupfilter function='member' level='[zipcode]' member='98188' />
              <groupfilter function='member' level='[zipcode]' member='98198' />
              <groupfilter function='member' level='[zipcode]' member='98199' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:yr_built:ok]'>
            <groupfilter function='level-members' level='[none:yr_built:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:yr_built:ok]</column>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Zipcode)]</column>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Bathrooms (bin),Bedrooms (bin))]</column>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Price Trends by Periods of Time)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:long:qk]' field-type='quantitative' max='-13435334.11403127' min='-13738378.701626696' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:lat:qk]' field-type='quantitative' max='6085467.7994630132' min='5905560.0565205179' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:id:qk]' value='Sales Count'>
              <formatted-text>
                <run>Sales Count</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:id:qk]' />
              <lod column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:zipcode:ok]' />
              <geometry column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='12'>There were </run>
                <run bold='true' fontcolor='#f17b79' fontsize='12'><![CDATA[<[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:id:qk]>]]></run>
                <run fontcolor='#787878' fontsize='12'> sales in </run>
                <run fontcolor='#898989' fontsize='12'>zip cod</run>
                <run fontcolor='#787878' fontsize='12'>e </run>
                <run bold='true' fontcolor='#f17b79' fontsize='12'><![CDATA[<[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:zipcode:ok]> ]]></run>
                <run bold='true' fontcolor='#b6bfa9' fontsize='12'>.</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:lat:qk]</rows>
        <cols>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:long:qk]</cols>
      </table>
      <simple-id uuid='{6EE36E2C-DCD5-418F-BF21-00CEDDEC39A1}' />
    </worksheet>
    <worksheet name='bed pi'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Bed Counts</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='regression_data1 (regression_data)' name='federated.0ibg9u21a1zdsg17cetup0v5alcd' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ibg9u21a1zdsg17cetup0v5alcd'>
            <column aggregation='None' datatype='integer' name='[Bedrooms (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[bedrooms]' peg='0' size='1' />
            </column>
            <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
            <column-instance column='[bedrooms]' derivation='Count' name='[cnt:bedrooms:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Bedrooms (bin)]' derivation='None' name='[none:Bedrooms (bin):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Bedrooms (bin):ok]' />
              <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='33' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]' value='' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]' value='' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='fill-color' id='annotation_9' value='#00000000' />
            <format attr='fill-color' id='annotation_10' value='#00000000' />
            <format attr='fill-color' id='annotation_11' value='#00000000' />
            <format attr='fill-color' id='annotation_12' value='#00000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:bedrooms:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]</rows>
        <cols />
        <annotations>
          <annotation class='area' id='9' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run>4</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.39801'>
                  <node-reference />
                </x-coord>
                <y-coord cell-offset='0.463576'>
                  <node-reference />
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.437811'>
                  <node-reference />
                </x-coord>
                <y-coord cell-offset='0.534216'>
                  <node-reference />
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='area' id='10' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run>3</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.503731'>
                  <node-reference />
                </x-coord>
                <y-coord cell-offset='0.452539'>
                  <node-reference />
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.628109'>
                  <node-reference />
                </x-coord>
                <y-coord cell-offset='0.673289'>
                  <node-reference />
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='area' id='11' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run>2</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.527363'>
                  <node-reference />
                </x-coord>
                <y-coord cell-offset='0.335541'>
                  <node-reference />
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.564677'>
                  <node-reference />
                </x-coord>
                <y-coord cell-offset='0.397351'>
                  <node-reference />
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='area' id='12' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run>5</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.447761'>
                  <node-reference />
                </x-coord>
                <y-coord cell-offset='0.300221'>
                  <node-reference />
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.482587'>
                  <node-reference />
                </x-coord>
                <y-coord cell-offset='0.364238'>
                  <node-reference />
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='point' id='13' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Bedrooms: </run>
              <run bold='true'><![CDATA[<[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Count of Bedrooms: </run>
              <run bold='true'><![CDATA[<[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:bedrooms:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields />
                      <y-fields />
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:bedrooms:qk]</field>
                      <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>272</value>
                    <value>6</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-144' y='-50' />
          </annotation>
          <annotation class='point' id='15' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Bedrooms: </run>
              <run bold='true'><![CDATA[<[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Count of Bedrooms: </run>
              <run bold='true'><![CDATA[<[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:bedrooms:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields />
                      <y-fields />
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:bedrooms:qk]</field>
                      <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>38</value>
                    <value>7</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='62' y='-48' />
          </annotation>
          <annotation class='point' id='16' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Bedrooms: </run>
              <run bold='true'><![CDATA[<[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Count of Bedrooms: </run>
              <run bold='true'><![CDATA[<[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:bedrooms:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields />
                      <y-fields />
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:bedrooms:qk]</field>
                      <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>196</value>
                    <value>1</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='197' y='19' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{F4CFDB05-E621-4941-832E-4E935C537390}' />
    </worksheet>
    <worksheet name='bed pi (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#203cbc' fontsize='14'>Bed Count Availability</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='regression_data1 (regression_data)' name='federated.0ibg9u21a1zdsg17cetup0v5alcd' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ibg9u21a1zdsg17cetup0v5alcd'>
            <column aggregation='None' datatype='integer' name='[Bedrooms (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[bedrooms]' peg='0' size='1' />
            </column>
            <column caption='Price Trends by Periods of Time' datatype='string' name='[Calculation_1312799340667265028]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [yr_built]&lt;2000 THEN &quot;1900-1999&quot;&#13;&#10;ELSEIF [yr_built]&lt;2010 THEN &quot;2000-2009&quot;&#13;&#10;ELSE &quot;2010 - Present&quot;&#13;&#10;END' />
            </column>
            <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
            <column-instance column='[bedrooms]' derivation='Count' name='[cnt:bedrooms:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Bedrooms (bin)]' derivation='None' name='[none:Bedrooms (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[bedrooms]' derivation='Sum' name='[sum:bedrooms:qk]' pivot='key' type='quantitative' />
            <column caption='Yr Built' datatype='integer' name='[yr_built]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Price Trends by Periods of Time)]'>
            <groupfilter function='union' user:ui-action-filter='[Action4_26524BA88C0545D6A0977D59FF566067]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_1312799340667265028]' member='&quot;1900-1999&quot;' />
              <groupfilter function='member' level='[Calculation_1312799340667265028]' member='&quot;2000-2009&quot;' />
              <groupfilter function='member' level='[Calculation_1312799340667265028]' member='&quot;2010 - Present&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Zipcode)]'>
            <groupfilter function='union' user:ui-action-filter='[Action1_2D9A7A6655F24FBBB52D8DE981D7434D]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[zipcode]' member='98001' />
              <groupfilter function='member' level='[zipcode]' member='98002' />
              <groupfilter function='member' level='[zipcode]' member='98003' />
              <groupfilter function='member' level='[zipcode]' member='98004' />
              <groupfilter function='member' level='[zipcode]' member='98005' />
              <groupfilter function='member' level='[zipcode]' member='98006' />
              <groupfilter function='member' level='[zipcode]' member='98007' />
              <groupfilter function='member' level='[zipcode]' member='98008' />
              <groupfilter function='member' level='[zipcode]' member='98010' />
              <groupfilter function='member' level='[zipcode]' member='98011' />
              <groupfilter function='member' level='[zipcode]' member='98014' />
              <groupfilter function='member' level='[zipcode]' member='98019' />
              <groupfilter function='member' level='[zipcode]' member='98022' />
              <groupfilter function='member' level='[zipcode]' member='98023' />
              <groupfilter function='member' level='[zipcode]' member='98024' />
              <groupfilter function='member' level='[zipcode]' member='98027' />
              <groupfilter function='member' level='[zipcode]' member='98028' />
              <groupfilter function='member' level='[zipcode]' member='98029' />
              <groupfilter function='member' level='[zipcode]' member='98030' />
              <groupfilter function='member' level='[zipcode]' member='98031' />
              <groupfilter function='member' level='[zipcode]' member='98032' />
              <groupfilter function='member' level='[zipcode]' member='98033' />
              <groupfilter function='member' level='[zipcode]' member='98034' />
              <groupfilter function='member' level='[zipcode]' member='98038' />
              <groupfilter function='member' level='[zipcode]' member='98039' />
              <groupfilter function='member' level='[zipcode]' member='98040' />
              <groupfilter function='member' level='[zipcode]' member='98042' />
              <groupfilter function='member' level='[zipcode]' member='98045' />
              <groupfilter function='member' level='[zipcode]' member='98052' />
              <groupfilter function='member' level='[zipcode]' member='98053' />
              <groupfilter function='member' level='[zipcode]' member='98055' />
              <groupfilter function='member' level='[zipcode]' member='98056' />
              <groupfilter function='member' level='[zipcode]' member='98058' />
              <groupfilter function='member' level='[zipcode]' member='98059' />
              <groupfilter function='member' level='[zipcode]' member='98065' />
              <groupfilter function='member' level='[zipcode]' member='98070' />
              <groupfilter function='member' level='[zipcode]' member='98072' />
              <groupfilter function='member' level='[zipcode]' member='98074' />
              <groupfilter function='member' level='[zipcode]' member='98075' />
              <groupfilter function='member' level='[zipcode]' member='98077' />
              <groupfilter function='member' level='[zipcode]' member='98092' />
              <groupfilter function='member' level='[zipcode]' member='98102' />
              <groupfilter function='member' level='[zipcode]' member='98103' />
              <groupfilter function='member' level='[zipcode]' member='98105' />
              <groupfilter function='member' level='[zipcode]' member='98106' />
              <groupfilter function='member' level='[zipcode]' member='98107' />
              <groupfilter function='member' level='[zipcode]' member='98108' />
              <groupfilter function='member' level='[zipcode]' member='98109' />
              <groupfilter function='member' level='[zipcode]' member='98112' />
              <groupfilter function='member' level='[zipcode]' member='98115' />
              <groupfilter function='member' level='[zipcode]' member='98116' />
              <groupfilter function='member' level='[zipcode]' member='98117' />
              <groupfilter function='member' level='[zipcode]' member='98118' />
              <groupfilter function='member' level='[zipcode]' member='98119' />
              <groupfilter function='member' level='[zipcode]' member='98122' />
              <groupfilter function='member' level='[zipcode]' member='98125' />
              <groupfilter function='member' level='[zipcode]' member='98126' />
              <groupfilter function='member' level='[zipcode]' member='98133' />
              <groupfilter function='member' level='[zipcode]' member='98136' />
              <groupfilter function='member' level='[zipcode]' member='98144' />
              <groupfilter function='member' level='[zipcode]' member='98146' />
              <groupfilter function='member' level='[zipcode]' member='98148' />
              <groupfilter function='member' level='[zipcode]' member='98155' />
              <groupfilter function='member' level='[zipcode]' member='98166' />
              <groupfilter function='member' level='[zipcode]' member='98168' />
              <groupfilter function='member' level='[zipcode]' member='98177' />
              <groupfilter function='member' level='[zipcode]' member='98178' />
              <groupfilter function='member' level='[zipcode]' member='98188' />
              <groupfilter function='member' level='[zipcode]' member='98198' />
              <groupfilter function='member' level='[zipcode]' member='98199' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Bedrooms (bin):ok]' />
              <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='33' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]</column>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Zipcode)]</column>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Price Trends by Periods of Time)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]' value='' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]' value='' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]' value='Beds'>
              <formatted-text>
                <run>Beds</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]' />
              <wedge-size column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:bedrooms:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#898989' fontsize='12'>Of 21,598 house sales, </run>
                <run bold='true' fontcolor='#f17b79' fontsize='12'><![CDATA[<[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:bedrooms:qk]>]]></run>
                <run bold='true' fontcolor='#898989' fontsize='12'> of them contained </run>
                <run bold='true' fontcolor='#f17b79' fontsize='12'><![CDATA[<[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]>]]></run>
                <run bold='true' fontcolor='#898989' fontsize='12'> bedrooms.</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows />
        <cols />
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]</field>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[sum:bedrooms:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>4</value>
                <value>27528</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]</field>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[sum:bedrooms:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>5</value>
                <value>8005</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]</field>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[sum:bedrooms:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>2</value>
                <value>5520</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='3' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]</field>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[sum:bedrooms:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>3</value>
                <value>29472</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='4' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]</field>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[sum:bedrooms:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>6</value>
                <value>1632</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{4CC2F3B8-16F2-44D3-90FE-7764BE004A5C}' />
    </worksheet>
    <worksheet name='bedbathbar'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#203cbc' fontsize='14'>Bath Availability by Bed Count</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='regression_data1 (regression_data)' name='federated.0ibg9u21a1zdsg17cetup0v5alcd' />
          </datasources>
          <datasource-dependencies datasource='federated.0ibg9u21a1zdsg17cetup0v5alcd'>
            <column aggregation='None' caption='Bathrooms (bin)' datatype='integer' name='[Bathrooms (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[bathrooms]' peg='0' size='1' />
            </column>
            <column aggregation='None' datatype='integer' name='[Bedrooms (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[bedrooms]' peg='0' size='1' />
            </column>
            <column caption='Price Trends by Periods of Time' datatype='string' name='[Calculation_1312799340667265028]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [yr_built]&lt;2000 THEN &quot;1900-1999&quot;&#13;&#10;ELSEIF [yr_built]&lt;2010 THEN &quot;2000-2009&quot;&#13;&#10;ELSE &quot;2010 - Present&quot;&#13;&#10;END' />
            </column>
            <column caption='Bathrooms' datatype='real' name='[bathrooms]' role='measure' type='quantitative' />
            <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
            <column-instance column='[bathrooms]' derivation='Count' name='[cnt:bathrooms:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Bathrooms (bin)]' derivation='None' name='[none:Bathrooms (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Bedrooms (bin)]' derivation='None' name='[none:Bedrooms (bin):ok]' pivot='key' type='ordinal' />
            <column caption='Yr Built' datatype='integer' name='[yr_built]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Price Trends by Periods of Time)]'>
            <groupfilter function='union' user:ui-action-filter='[Action4_26524BA88C0545D6A0977D59FF566067]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_1312799340667265028]' member='&quot;1900-1999&quot;' />
              <groupfilter function='member' level='[Calculation_1312799340667265028]' member='&quot;2000-2009&quot;' />
              <groupfilter function='member' level='[Calculation_1312799340667265028]' member='&quot;2010 - Present&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Zipcode)]'>
            <groupfilter function='union' user:ui-action-filter='[Action1_2D9A7A6655F24FBBB52D8DE981D7434D]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[zipcode]' member='98001' />
              <groupfilter function='member' level='[zipcode]' member='98002' />
              <groupfilter function='member' level='[zipcode]' member='98003' />
              <groupfilter function='member' level='[zipcode]' member='98004' />
              <groupfilter function='member' level='[zipcode]' member='98005' />
              <groupfilter function='member' level='[zipcode]' member='98006' />
              <groupfilter function='member' level='[zipcode]' member='98007' />
              <groupfilter function='member' level='[zipcode]' member='98008' />
              <groupfilter function='member' level='[zipcode]' member='98010' />
              <groupfilter function='member' level='[zipcode]' member='98011' />
              <groupfilter function='member' level='[zipcode]' member='98014' />
              <groupfilter function='member' level='[zipcode]' member='98019' />
              <groupfilter function='member' level='[zipcode]' member='98022' />
              <groupfilter function='member' level='[zipcode]' member='98023' />
              <groupfilter function='member' level='[zipcode]' member='98024' />
              <groupfilter function='member' level='[zipcode]' member='98027' />
              <groupfilter function='member' level='[zipcode]' member='98028' />
              <groupfilter function='member' level='[zipcode]' member='98029' />
              <groupfilter function='member' level='[zipcode]' member='98030' />
              <groupfilter function='member' level='[zipcode]' member='98031' />
              <groupfilter function='member' level='[zipcode]' member='98032' />
              <groupfilter function='member' level='[zipcode]' member='98033' />
              <groupfilter function='member' level='[zipcode]' member='98034' />
              <groupfilter function='member' level='[zipcode]' member='98038' />
              <groupfilter function='member' level='[zipcode]' member='98039' />
              <groupfilter function='member' level='[zipcode]' member='98040' />
              <groupfilter function='member' level='[zipcode]' member='98042' />
              <groupfilter function='member' level='[zipcode]' member='98045' />
              <groupfilter function='member' level='[zipcode]' member='98052' />
              <groupfilter function='member' level='[zipcode]' member='98053' />
              <groupfilter function='member' level='[zipcode]' member='98055' />
              <groupfilter function='member' level='[zipcode]' member='98056' />
              <groupfilter function='member' level='[zipcode]' member='98058' />
              <groupfilter function='member' level='[zipcode]' member='98059' />
              <groupfilter function='member' level='[zipcode]' member='98065' />
              <groupfilter function='member' level='[zipcode]' member='98070' />
              <groupfilter function='member' level='[zipcode]' member='98072' />
              <groupfilter function='member' level='[zipcode]' member='98074' />
              <groupfilter function='member' level='[zipcode]' member='98075' />
              <groupfilter function='member' level='[zipcode]' member='98077' />
              <groupfilter function='member' level='[zipcode]' member='98092' />
              <groupfilter function='member' level='[zipcode]' member='98102' />
              <groupfilter function='member' level='[zipcode]' member='98103' />
              <groupfilter function='member' level='[zipcode]' member='98105' />
              <groupfilter function='member' level='[zipcode]' member='98106' />
              <groupfilter function='member' level='[zipcode]' member='98107' />
              <groupfilter function='member' level='[zipcode]' member='98108' />
              <groupfilter function='member' level='[zipcode]' member='98109' />
              <groupfilter function='member' level='[zipcode]' member='98112' />
              <groupfilter function='member' level='[zipcode]' member='98115' />
              <groupfilter function='member' level='[zipcode]' member='98116' />
              <groupfilter function='member' level='[zipcode]' member='98117' />
              <groupfilter function='member' level='[zipcode]' member='98118' />
              <groupfilter function='member' level='[zipcode]' member='98119' />
              <groupfilter function='member' level='[zipcode]' member='98122' />
              <groupfilter function='member' level='[zipcode]' member='98125' />
              <groupfilter function='member' level='[zipcode]' member='98126' />
              <groupfilter function='member' level='[zipcode]' member='98133' />
              <groupfilter function='member' level='[zipcode]' member='98136' />
              <groupfilter function='member' level='[zipcode]' member='98144' />
              <groupfilter function='member' level='[zipcode]' member='98146' />
              <groupfilter function='member' level='[zipcode]' member='98148' />
              <groupfilter function='member' level='[zipcode]' member='98155' />
              <groupfilter function='member' level='[zipcode]' member='98166' />
              <groupfilter function='member' level='[zipcode]' member='98168' />
              <groupfilter function='member' level='[zipcode]' member='98177' />
              <groupfilter function='member' level='[zipcode]' member='98178' />
              <groupfilter function='member' level='[zipcode]' member='98188' />
              <groupfilter function='member' level='[zipcode]' member='98198' />
              <groupfilter function='member' level='[zipcode]' member='98199' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Exclusions (Bathrooms (bin),Bedrooms (bin))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Bathrooms (bin):ok]' />
                <groupfilter function='level-members' level='[none:Bedrooms (bin):ok]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='6' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='1' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='2' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='3' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='4' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='5' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='6' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='7' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='8' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='7' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='1' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='2' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='3' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='4' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='5' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='6' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='8' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='8' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='2' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='3' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='4' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='5' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='6' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='9' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='3' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='4' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='7' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='10' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='2' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='3' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='5' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='11' />
                    <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='3' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='33' />
                    <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='1' />
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:Bathrooms (bin):ok]' />
                  <hierarchy name='[none:Bedrooms (bin):ok]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Exclusions (Bathrooms (bin),Bedrooms (bin))]</column>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Zipcode)]</column>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Price Trends by Periods of Time)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:bathrooms:qk]' scope='rows' value='Bathroom Count' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bathrooms (bin):ok]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#898989' fontsize='12'>Houses with </run>
                <run bold='true' fontcolor='#f17b79' fontsize='12'><![CDATA[<[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]>]]></run>
                <run bold='true' fontcolor='#898989' fontsize='12'> bedrooms have </run>
                <run bold='true' fontcolor='#f17b79' fontsize='12'><![CDATA[<[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:bathrooms:qk]>]]></run>
                <run bold='true' fontcolor='#898989' fontsize='12'> sales with </run>
                <run bold='true' fontcolor='#f17b79' fontsize='12'><![CDATA[<[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bathrooms (bin):ok]>]]></run>
                <run bold='true' fontcolor='#898989' fontsize='12'> bathroom(s).</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:bathrooms:qk]</rows>
        <cols>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]</cols>
      </table>
      <simple-id uuid='{EFF8D295-E6FB-4F81-B713-4B4B8214E04F}' />
    </worksheet>
    <worksheet name='price map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#203cbc' fontsize='14'>Median Prices of Homes Sold </run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#203cbc' fontsize='14'>(by Zip Code)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='regression_data1 (regression_data)' name='federated.0ibg9u21a1zdsg17cetup0v5alcd' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ibg9u21a1zdsg17cetup0v5alcd'>
            <column aggregation='None' caption='Bathrooms (bin)' datatype='integer' name='[Bathrooms (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[bathrooms]' peg='0' size='1' />
            </column>
            <column aggregation='None' datatype='integer' name='[Bedrooms (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[bedrooms]' peg='0' size='1' />
            </column>
            <column caption='Price Trends by Periods of Time' datatype='string' name='[Calculation_1312799340667265028]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [yr_built]&lt;2000 THEN &quot;1900-1999&quot;&#13;&#10;ELSEIF [yr_built]&lt;2010 THEN &quot;2000-2009&quot;&#13;&#10;ELSE &quot;2010 - Present&quot;&#13;&#10;END' />
            </column>
            <column caption='Bathrooms' datatype='real' name='[bathrooms]' role='measure' type='quantitative' />
            <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
            <column-instance column='[price]' derivation='Median' name='[med:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Bedrooms (bin)]' derivation='None' name='[none:Bedrooms (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[zipcode]' derivation='None' name='[none:zipcode:ok]' pivot='key' type='ordinal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column caption='Yr Built' datatype='integer' name='[yr_built]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Bathrooms (bin),Bedrooms (bin))]'>
            <groupfilter function='reorder-dimensionality' user:ui-action-filter='[Action6_A2582F5EA88441C2A6C330F3EEF5B522]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='1' />
                  <groupfilter function='member' level='[Bathrooms (bin)]' member='1' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='2' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='1' />
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='2' />
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='3' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='3' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='1' />
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='2' />
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='3' />
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='4' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='4' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='2' />
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='3' />
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='4' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='5' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='1' />
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='2' />
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='3' />
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='4' />
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='5' />
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='6' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[Bathrooms (bin)]' />
                <hierarchy name='[none:Bedrooms (bin):ok]' />
              </order>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Price Trends by Periods of Time)]'>
            <groupfilter function='union' user:ui-action-filter='[Action4_26524BA88C0545D6A0977D59FF566067]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_1312799340667265028]' member='&quot;1900-1999&quot;' />
              <groupfilter function='member' level='[Calculation_1312799340667265028]' member='&quot;2000-2009&quot;' />
              <groupfilter function='member' level='[Calculation_1312799340667265028]' member='&quot;2010 - Present&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Zipcode)]'>
            <groupfilter function='union' user:ui-action-filter='[Action2_11E2714E74D74FC3A3DF01F673020DB2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[zipcode]' member='98001' />
              <groupfilter function='member' level='[zipcode]' member='98002' />
              <groupfilter function='member' level='[zipcode]' member='98003' />
              <groupfilter function='member' level='[zipcode]' member='98004' />
              <groupfilter function='member' level='[zipcode]' member='98005' />
              <groupfilter function='member' level='[zipcode]' member='98006' />
              <groupfilter function='member' level='[zipcode]' member='98007' />
              <groupfilter function='member' level='[zipcode]' member='98008' />
              <groupfilter function='member' level='[zipcode]' member='98010' />
              <groupfilter function='member' level='[zipcode]' member='98011' />
              <groupfilter function='member' level='[zipcode]' member='98014' />
              <groupfilter function='member' level='[zipcode]' member='98019' />
              <groupfilter function='member' level='[zipcode]' member='98022' />
              <groupfilter function='member' level='[zipcode]' member='98023' />
              <groupfilter function='member' level='[zipcode]' member='98024' />
              <groupfilter function='member' level='[zipcode]' member='98027' />
              <groupfilter function='member' level='[zipcode]' member='98028' />
              <groupfilter function='member' level='[zipcode]' member='98029' />
              <groupfilter function='member' level='[zipcode]' member='98030' />
              <groupfilter function='member' level='[zipcode]' member='98031' />
              <groupfilter function='member' level='[zipcode]' member='98032' />
              <groupfilter function='member' level='[zipcode]' member='98033' />
              <groupfilter function='member' level='[zipcode]' member='98034' />
              <groupfilter function='member' level='[zipcode]' member='98038' />
              <groupfilter function='member' level='[zipcode]' member='98039' />
              <groupfilter function='member' level='[zipcode]' member='98040' />
              <groupfilter function='member' level='[zipcode]' member='98042' />
              <groupfilter function='member' level='[zipcode]' member='98045' />
              <groupfilter function='member' level='[zipcode]' member='98052' />
              <groupfilter function='member' level='[zipcode]' member='98053' />
              <groupfilter function='member' level='[zipcode]' member='98055' />
              <groupfilter function='member' level='[zipcode]' member='98056' />
              <groupfilter function='member' level='[zipcode]' member='98058' />
              <groupfilter function='member' level='[zipcode]' member='98059' />
              <groupfilter function='member' level='[zipcode]' member='98065' />
              <groupfilter function='member' level='[zipcode]' member='98070' />
              <groupfilter function='member' level='[zipcode]' member='98072' />
              <groupfilter function='member' level='[zipcode]' member='98074' />
              <groupfilter function='member' level='[zipcode]' member='98075' />
              <groupfilter function='member' level='[zipcode]' member='98077' />
              <groupfilter function='member' level='[zipcode]' member='98092' />
              <groupfilter function='member' level='[zipcode]' member='98102' />
              <groupfilter function='member' level='[zipcode]' member='98103' />
              <groupfilter function='member' level='[zipcode]' member='98105' />
              <groupfilter function='member' level='[zipcode]' member='98106' />
              <groupfilter function='member' level='[zipcode]' member='98107' />
              <groupfilter function='member' level='[zipcode]' member='98108' />
              <groupfilter function='member' level='[zipcode]' member='98109' />
              <groupfilter function='member' level='[zipcode]' member='98112' />
              <groupfilter function='member' level='[zipcode]' member='98115' />
              <groupfilter function='member' level='[zipcode]' member='98116' />
              <groupfilter function='member' level='[zipcode]' member='98117' />
              <groupfilter function='member' level='[zipcode]' member='98118' />
              <groupfilter function='member' level='[zipcode]' member='98119' />
              <groupfilter function='member' level='[zipcode]' member='98122' />
              <groupfilter function='member' level='[zipcode]' member='98125' />
              <groupfilter function='member' level='[zipcode]' member='98126' />
              <groupfilter function='member' level='[zipcode]' member='98133' />
              <groupfilter function='member' level='[zipcode]' member='98136' />
              <groupfilter function='member' level='[zipcode]' member='98144' />
              <groupfilter function='member' level='[zipcode]' member='98146' />
              <groupfilter function='member' level='[zipcode]' member='98148' />
              <groupfilter function='member' level='[zipcode]' member='98155' />
              <groupfilter function='member' level='[zipcode]' member='98166' />
              <groupfilter function='member' level='[zipcode]' member='98168' />
              <groupfilter function='member' level='[zipcode]' member='98177' />
              <groupfilter function='member' level='[zipcode]' member='98178' />
              <groupfilter function='member' level='[zipcode]' member='98188' />
              <groupfilter function='member' level='[zipcode]' member='98198' />
              <groupfilter function='member' level='[zipcode]' member='98199' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Zipcode)]</column>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Bathrooms (bin),Bedrooms (bin))]</column>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Price Trends by Periods of Time)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Longitude (generated)]' field-type='quantitative' max='-13434207.356036885' min='-13709383.822566262' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Latitude (generated)]' field-type='quantitative' max='6087261.8038356369' min='5915873.9804608393' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:price:qk]' palette='blue_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:price:qk]' />
              <lod column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:zipcode:ok]' />
              <geometry column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#898989' fontsize='12'>The median price for zip code </run>
                <run bold='true' fontcolor='#f17b79' fontsize='12'><![CDATA[<[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:zipcode:ok]>]]></run>
                <run bold='true' fontcolor='#898989' fontsize='12'> is $</run>
                <run bold='true' fontcolor='#f17b79' fontsize='12'><![CDATA[<[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:price:qk]>]]></run>
                <run bold='true' fontcolor='#b4b4b4' fontsize='12'>.</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Latitude (generated)]</rows>
        <cols>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{FB8295C7-665D-4D88-9ABA-E9E286CF8F73}' />
    </worksheet>
    <worksheet name='raw/reno sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#203cbc' fontsize='14'>Renovation Sales vs Original Design</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='regression_data1 (regression_data)' name='federated.0ibg9u21a1zdsg17cetup0v5alcd' />
          </datasources>
          <datasource-dependencies datasource='federated.0ibg9u21a1zdsg17cetup0v5alcd'>
            <column aggregation='None' caption='Bathrooms (bin)' datatype='integer' name='[Bathrooms (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[bathrooms]' peg='0' size='1' />
            </column>
            <column aggregation='None' datatype='integer' name='[Bedrooms (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[bedrooms]' peg='0' size='1' />
            </column>
            <column caption='Price Trends by Periods of Time' datatype='string' name='[Calculation_1312799340667265028]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [yr_built]&lt;2000 THEN &quot;1900-1999&quot;&#13;&#10;ELSEIF [yr_built]&lt;2010 THEN &quot;2000-2009&quot;&#13;&#10;ELSE &quot;2010 - Present&quot;&#13;&#10;END' />
            </column>
            <column caption='Bathrooms' datatype='real' name='[bathrooms]' role='measure' type='quantitative' />
            <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
            <column-instance column='[Yr Renovated Set 2]' derivation='InOut' name='[io:Yr Renovated Set 2:nk]' pivot='key' type='nominal' />
            <column-instance column='[Bedrooms (bin)]' derivation='None' name='[none:Bedrooms (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[yr_built]' derivation='None' name='[none:yr_built:qk]' pivot='key' type='quantitative' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column-instance column='[price]' derivation='Median' name='[win:med:price:qk:21]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-5' ordering-type='Field' to='5' type='WindowTotal' window-options='IncludeCurrent'>
                <order field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[io:Yr Renovated Set 2:nk]' />
                <order field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:yr_built:qk]' />
              </table-calc>
            </column-instance>
            <column caption='Yr Built' datatype='integer' name='[yr_built]' role='dimension' type='ordinal' />
            <column caption='Yr Renovated' datatype='integer' name='[yr_renovated]' role='dimension' type='quantitative' />
            <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Bathrooms (bin),Bedrooms (bin))]'>
            <groupfilter function='reorder-dimensionality' user:ui-action-filter='[Action6_A2582F5EA88441C2A6C330F3EEF5B522]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='1' />
                  <groupfilter function='member' level='[Bathrooms (bin)]' member='1' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='2' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='1' />
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='2' />
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='3' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='3' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='1' />
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='2' />
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='3' />
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='4' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='4' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='2' />
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='3' />
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='4' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='5' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='1' />
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='2' />
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='3' />
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='4' />
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='5' />
                    <groupfilter function='member' level='[Bathrooms (bin)]' member='6' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[Bathrooms (bin)]' />
                <hierarchy name='[none:Bedrooms (bin):ok]' />
              </order>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Price Trends by Periods of Time)]'>
            <groupfilter function='union' user:ui-action-filter='[Action4_26524BA88C0545D6A0977D59FF566067]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_1312799340667265028]' member='&quot;1900-1999&quot;' />
              <groupfilter function='member' level='[Calculation_1312799340667265028]' member='&quot;2000-2009&quot;' />
              <groupfilter function='member' level='[Calculation_1312799340667265028]' member='&quot;2010 - Present&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Zipcode)]'>
            <groupfilter function='union' user:ui-action-filter='[Action1_2D9A7A6655F24FBBB52D8DE981D7434D]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[zipcode]' member='98001' />
              <groupfilter function='member' level='[zipcode]' member='98002' />
              <groupfilter function='member' level='[zipcode]' member='98003' />
              <groupfilter function='member' level='[zipcode]' member='98004' />
              <groupfilter function='member' level='[zipcode]' member='98005' />
              <groupfilter function='member' level='[zipcode]' member='98006' />
              <groupfilter function='member' level='[zipcode]' member='98007' />
              <groupfilter function='member' level='[zipcode]' member='98008' />
              <groupfilter function='member' level='[zipcode]' member='98010' />
              <groupfilter function='member' level='[zipcode]' member='98011' />
              <groupfilter function='member' level='[zipcode]' member='98014' />
              <groupfilter function='member' level='[zipcode]' member='98019' />
              <groupfilter function='member' level='[zipcode]' member='98022' />
              <groupfilter function='member' level='[zipcode]' member='98023' />
              <groupfilter function='member' level='[zipcode]' member='98024' />
              <groupfilter function='member' level='[zipcode]' member='98027' />
              <groupfilter function='member' level='[zipcode]' member='98028' />
              <groupfilter function='member' level='[zipcode]' member='98029' />
              <groupfilter function='member' level='[zipcode]' member='98030' />
              <groupfilter function='member' level='[zipcode]' member='98031' />
              <groupfilter function='member' level='[zipcode]' member='98032' />
              <groupfilter function='member' level='[zipcode]' member='98033' />
              <groupfilter function='member' level='[zipcode]' member='98034' />
              <groupfilter function='member' level='[zipcode]' member='98038' />
              <groupfilter function='member' level='[zipcode]' member='98039' />
              <groupfilter function='member' level='[zipcode]' member='98040' />
              <groupfilter function='member' level='[zipcode]' member='98042' />
              <groupfilter function='member' level='[zipcode]' member='98045' />
              <groupfilter function='member' level='[zipcode]' member='98052' />
              <groupfilter function='member' level='[zipcode]' member='98053' />
              <groupfilter function='member' level='[zipcode]' member='98055' />
              <groupfilter function='member' level='[zipcode]' member='98056' />
              <groupfilter function='member' level='[zipcode]' member='98058' />
              <groupfilter function='member' level='[zipcode]' member='98059' />
              <groupfilter function='member' level='[zipcode]' member='98065' />
              <groupfilter function='member' level='[zipcode]' member='98070' />
              <groupfilter function='member' level='[zipcode]' member='98072' />
              <groupfilter function='member' level='[zipcode]' member='98074' />
              <groupfilter function='member' level='[zipcode]' member='98075' />
              <groupfilter function='member' level='[zipcode]' member='98077' />
              <groupfilter function='member' level='[zipcode]' member='98092' />
              <groupfilter function='member' level='[zipcode]' member='98102' />
              <groupfilter function='member' level='[zipcode]' member='98103' />
              <groupfilter function='member' level='[zipcode]' member='98105' />
              <groupfilter function='member' level='[zipcode]' member='98106' />
              <groupfilter function='member' level='[zipcode]' member='98107' />
              <groupfilter function='member' level='[zipcode]' member='98108' />
              <groupfilter function='member' level='[zipcode]' member='98109' />
              <groupfilter function='member' level='[zipcode]' member='98112' />
              <groupfilter function='member' level='[zipcode]' member='98115' />
              <groupfilter function='member' level='[zipcode]' member='98116' />
              <groupfilter function='member' level='[zipcode]' member='98117' />
              <groupfilter function='member' level='[zipcode]' member='98118' />
              <groupfilter function='member' level='[zipcode]' member='98119' />
              <groupfilter function='member' level='[zipcode]' member='98122' />
              <groupfilter function='member' level='[zipcode]' member='98125' />
              <groupfilter function='member' level='[zipcode]' member='98126' />
              <groupfilter function='member' level='[zipcode]' member='98133' />
              <groupfilter function='member' level='[zipcode]' member='98136' />
              <groupfilter function='member' level='[zipcode]' member='98144' />
              <groupfilter function='member' level='[zipcode]' member='98146' />
              <groupfilter function='member' level='[zipcode]' member='98148' />
              <groupfilter function='member' level='[zipcode]' member='98155' />
              <groupfilter function='member' level='[zipcode]' member='98166' />
              <groupfilter function='member' level='[zipcode]' member='98168' />
              <groupfilter function='member' level='[zipcode]' member='98177' />
              <groupfilter function='member' level='[zipcode]' member='98178' />
              <groupfilter function='member' level='[zipcode]' member='98188' />
              <groupfilter function='member' level='[zipcode]' member='98198' />
              <groupfilter function='member' level='[zipcode]' member='98199' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Zipcode)]</column>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Bathrooms (bin),Bedrooms (bin))]</column>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Price Trends by Periods of Time)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[win:med:price:qk:21]' scope='rows' value='Average Median Price' />
            <format attr='title' class='0' field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:yr_built:qk]' scope='cols' value='Year Built' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[io:Yr Renovated Set 2:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#898989' fontsize='12'>Houses built in </run>
                <run fontcolor='#f17b79' fontsize='12'><![CDATA[<[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:yr_built:qk]>]]></run>
                <run fontcolor='#898989' fontsize='12'> sold for a median price of $</run>
                <run bold='true' fontcolor='#f17b79' fontsize='12'><![CDATA[<[federated.0ibg9u21a1zdsg17cetup0v5alcd].[win:med:price:qk:21]>]]></run>
                <run bold='true' fontcolor='#898989' fontsize='12'>.</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[win:med:price:qk:21]</rows>
        <cols>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:yr_built:qk]</cols>
      </table>
      <simple-id uuid='{5A8010EA-274C-40B3-A9CF-58823A6DA932}' />
    </worksheet>
    <worksheet name='sales map (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sales by Zipcode&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='regression_data1 (regression_data)' name='federated.0ibg9u21a1zdsg17cetup0v5alcd' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ibg9u21a1zdsg17cetup0v5alcd'>
            <column-instance column='[lat]' derivation='Avg' name='[avg:lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[long]' derivation='Avg' name='[avg:long:qk]' pivot='key' type='quantitative' />
            <column-instance column='[id]' derivation='Count' name='[cnt:id:qk]' pivot='key' type='quantitative' />
            <column caption='Id' datatype='string' name='[id]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Long' datatype='real' name='[long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[zipcode]' derivation='None' name='[none:zipcode:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:id:qk]' />
              <lod column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:zipcode:ok]' />
              <geometry column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:lat:qk]</rows>
        <cols>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:long:qk]</cols>
      </table>
      <simple-id uuid='{78556E28-78F9-4292-B379-340622214192}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='WA Home Sales'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='98400' x='800' y='1000'>
              <zone h='49000' id='3' name='price map' w='34272' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='9' name='Sales since 2000' w='39528' x='35072' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='11' name='raw/reno sales' w='36900' x='25400' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='13' name='bed pi (2)' w='24600' x='74600' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='15' name='bedbathbar' w='36900' x='62300' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='17' name='Period pricing' w='24600' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1750' minheight='1750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='38' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='37' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='price map' w='34272' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='9' is-fixed='true' name='Sales since 2000' w='39528' x='35072' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='13' is-fixed='true' name='bed pi (2)' w='24600' x='74600' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='17' is-fixed='true' name='Period pricing' w='24600' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='11' is-fixed='true' name='raw/reno sales' w='36900' x='25400' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='15' is-fixed='true' name='bedbathbar' w='36900' x='62300' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{1712469D-2060-40F9-953B-143439C7DBED}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='seattle metrics float'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#203cbc' fontsize='22'>Seattle Area Housing Market Metrics</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run bold='true' fontalignment='1' fontcolor='#47c9d0'>21,598 sales in 2014 - 2015</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f5f5f5' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='background-color' value='#ffffff' />
          <format attr='border-style' value='solid' />
          <format attr='border-width' value='2' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
      </style>
      <size maxheight='700' maxwidth='1300' minheight='700' minwidth='1300' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97714' id='43' param='horz' type-v2='layout-flow' w='98770' x='615' y='1143'>
            <zone h='97714' id='41' param='horz' type-v2='layout-flow' w='98770' x='615' y='1143'>
              <zone h='97714' id='38' param='horz' type-v2='layout-flow' w='98770' x='615' y='1143'>
                <zone h='97714' id='35' param='horz' type-v2='layout-flow' w='98770' x='615' y='1143'>
                  <zone h='97714' id='32' param='horz' type-v2='layout-flow' w='98770' x='615' y='1143'>
                    <zone h='97714' id='19' param='vert' type-v2='layout-flow' w='98770' x='615' y='1143'>
                      <zone fixed-size='87' h='13572' id='20' is-fixed='true' type-v2='title' w='98770' x='615' y='1143'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='84142' id='7' param='horz' type-v2='layout-flow' w='98770' x='615' y='14715'>
                        <zone h='84142' id='5' type-v2='layout-basic' w='98770' x='615' y='14715' />
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='42286' id='3' name='price map' w='31692' x='1231' y='16000' />
        <zone h='42000' id='9' name='Sales since 2000' w='29417' x='34500' y='16143' />
        <zone h='38714' id='13' name='bed pi (2)' w='31667' x='1250' y='61714' />
        <zone h='10857' id='33' name='Sales since 2000' pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:id:qk]' type-v2='color' w='11667' x='34333' y='49143' />
        <zone h='10857' id='36' name='price map' pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:price:qk]' type-v2='color' w='11667' x='1500' y='47571' />
        <zone h='12286' id='44' name='bed pi (2)' pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]' type-v2='color' w='26667' x='4917' y='92286' />
        <zone h='11857' id='45' is-centered='0' is-scaled='1' param='C:/Users/Owner/Pictures/trevipay logo.png' type-v2='bitmap' w='9667' x='1167' y='1857' />
        <zone h='36143' id='17' name='Period pricing' w='33000' x='65833' y='16429' />
        <zone h='8143' id='39' name='Period pricing' pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:sqft_living:qk]' type-v2='color' w='33083' x='65750' y='49857' />
        <zone h='38429' id='15' name='bedbathbar' w='29308' x='35692' y='61571' />
        <zone h='41000' id='11' name='raw/reno sales' w='32250' x='66083' y='61571' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#203cbc' fontsize='22'>Seattle Area Housing Market Metrics</run>
                <run fontalignment='1'>Æ&#10;</run>
                <run bold='true' fontalignment='1' fontcolor='#47c9d0'>21,598 sales in 2014 - 2015</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='2150' minheight='2150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='53' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97714' id='52' param='vert' type-v2='layout-flow' w='98770' x='615' y='1143'>
                <zone fixed-size='87' h='13572' id='20' type-v2='title' w='98770' x='615' y='1143'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='83' h='11857' id='45' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/Owner/Pictures/trevipay logo.png' type-v2='bitmap' w='9667' x='1167' y='1857'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42286' id='3' is-fixed='true' name='price map' w='31692' x='1231' y='16000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10857' id='36' name='price map' pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:price:qk]' type-v2='color' w='11667' x='1500' y='47571'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42000' id='9' is-fixed='true' name='Sales since 2000' w='29417' x='34500' y='16143'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10857' id='33' name='Sales since 2000' pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:id:qk]' type-v2='color' w='11667' x='34333' y='49143'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='253' h='36143' id='17' is-fixed='true' name='Period pricing' w='33000' x='65833' y='16429'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8143' id='39' name='Period pricing' pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:sqft_living:qk]' type-v2='color' w='33083' x='65750' y='49857'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='269' h='38429' id='15' is-fixed='true' name='bedbathbar' w='29308' x='35692' y='61571'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41000' id='11' is-fixed='true' name='raw/reno sales' w='32250' x='66083' y='61571'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='271' h='38714' id='13' is-fixed='true' name='bed pi (2)' w='31667' x='1250' y='61714'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12286' id='44' name='bed pi (2)' pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]' type-v2='color' w='26667' x='4917' y='92286'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{33783D6A-48C3-403E-9393-91B20039F6BB}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='seattle metrics tiled'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#203cbc' fontsize='22'>Seattle Area Housing Market Metrics</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run bold='true' fontalignment='1' fontcolor='#47c9d0'>21,598 sales in 2014 - 2015</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f5f5f5' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='background-color' value='#ffffff' />
          <format attr='border-style' value='solid' />
          <format attr='border-width' value='2' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
      </style>
      <size maxheight='700' maxwidth='1200' minheight='700' minwidth='1200' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97714' id='43' param='horz' type-v2='layout-flow' w='98666' x='667' y='1143'>
            <zone h='97714' id='41' param='horz' type-v2='layout-flow' w='98666' x='667' y='1143'>
              <zone h='97714' id='38' param='horz' type-v2='layout-flow' w='98666' x='667' y='1143'>
                <zone h='97714' id='35' param='horz' type-v2='layout-flow' w='98666' x='667' y='1143'>
                  <zone h='97714' id='32' param='horz' type-v2='layout-flow' w='98666' x='667' y='1143'>
                    <zone h='97714' id='19' param='vert' type-v2='layout-flow' w='98666' x='667' y='1143'>
                      <zone fixed-size='87' h='13572' id='20' is-fixed='true' type-v2='title' w='98666' x='667' y='1143'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='84142' id='7' param='horz' type-v2='layout-flow' w='98666' x='667' y='14715'>
                        <zone h='84142' id='5' type-v2='layout-basic' w='98666' x='667' y='14715'>
                          <zone h='46714' id='3' name='price map' w='34359' x='667' y='14715'>
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                          <zone h='46714' id='9' name='Sales since 2000' w='32148' x='35026' y='14715'>
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                          <zone h='37428' id='11' name='raw/reno sales' w='37000' x='62333' y='61429'>
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                          <zone h='37428' id='13' name='bed pi (2)' w='30583' x='667' y='61429'>
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                          <zone h='37428' id='15' name='bedbathbar' w='31083' x='31250' y='61429'>
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                          <zone h='41140' id='17' name='Period pricing' w='32159' x='67174' y='14715'>
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                          <zone h='5574' id='39' name='Period pricing' pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:sqft_living:qk]' type-v2='color' w='32159' x='67174' y='55855'>
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='10857' id='33' name='Sales since 2000' pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:id:qk]' type-v2='color' w='11667' x='35917' y='50857' />
        <zone h='10857' id='36' name='price map' pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:price:qk]' type-v2='color' w='11667' x='1167' y='49571' />
        <zone h='12286' id='44' name='bed pi (2)' pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]' type-v2='color' w='26667' x='4917' y='92286' />
        <zone h='11857' id='45' is-centered='0' is-scaled='1' param='C:/Users/Owner/Pictures/trevipay logo.png' type-v2='bitmap' w='9667' x='1167' y='1857' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#203cbc' fontsize='22'>Seattle Area Housing Market Metrics</run>
                <run fontalignment='1'>Æ&#10;</run>
                <run bold='true' fontalignment='1' fontcolor='#47c9d0'>21,598 sales in 2014 - 2015</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='2100' minheight='2100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='53' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97714' id='52' param='vert' type-v2='layout-flow' w='98666' x='667' y='1143'>
                <zone fixed-size='87' h='13572' id='20' type-v2='title' w='98666' x='667' y='1143'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='83' h='11857' id='45' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/Owner/Pictures/trevipay logo.png' type-v2='bitmap' w='9667' x='1167' y='1857'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46714' id='3' is-fixed='true' name='price map' w='34359' x='667' y='14715'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10857' id='36' name='price map' pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:price:qk]' type-v2='color' w='11667' x='1167' y='49571'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46714' id='9' is-fixed='true' name='Sales since 2000' w='32148' x='35026' y='14715'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10857' id='33' name='Sales since 2000' pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:id:qk]' type-v2='color' w='11667' x='35917' y='50857'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41140' id='17' is-fixed='true' name='Period pricing' w='32159' x='67174' y='14715'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5574' id='39' name='Period pricing' pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:sqft_living:qk]' type-v2='color' w='32159' x='67174' y='55855'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='254' h='37428' id='13' is-fixed='true' name='bed pi (2)' w='30583' x='667' y='61429'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12286' id='44' name='bed pi (2)' pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]' type-v2='color' w='26667' x='4917' y='92286'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='254' h='37428' id='15' is-fixed='true' name='bedbathbar' w='31083' x='31250' y='61429'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='254' h='37428' id='11' is-fixed='true' name='raw/reno sales' w='37000' x='62333' y='61429'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D6F7B13C-7B88-42ED-A03A-1DFD0BB65069}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='seattle metrics float'>
      <viewpoints>
        <viewpoint name='Period pricing'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Calculation_1312799340667265028:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:price:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:price:qk]</field>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[ctd:id:qk]</field>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:sqft_living:qk]</field>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Calculation_1312799340667265028:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>629969.29315960908</value>
                  <value>743</value>
                  <value>2440.0</value>
                  <value>&quot;2010 - Present&quot;</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Calculation_1312799340667265028:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:price:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:price:qk]</field>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[ctd:id:qk]</field>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:sqft_living:qk]</field>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Calculation_1312799340667265028:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>603839.41498559073</value>
                  <value>1823</value>
                  <value>2290.0</value>
                  <value>&quot;2000-2009&quot;</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Calculation_1312799340667265028:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:price:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:price:qk]</field>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[ctd:id:qk]</field>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:sqft_living:qk]</field>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Calculation_1312799340667265028:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>518612.66409444663</value>
                  <value>8128</value>
                  <value>1820.0</value>
                  <value>&quot;1900-1999&quot;</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
          <highlight field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[ctd:id:qk]' type='size'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Sales since 2000'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='bed pi (2)'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='bedbathbar'>
          <zoom type='fit-height' />
        </viewpoint>
        <viewpoint name='price map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='raw/reno sales'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='15' />
      <simple-id uuid='{9B747C4F-4D4A-450A-B0FF-E31EB8D2E96D}' />
    </window>
    <window class='dashboard' name='seattle metrics tiled'>
      <viewpoints>
        <viewpoint name='Period pricing'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Calculation_1312799340667265028:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:price:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:price:qk]</field>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[ctd:id:qk]</field>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:sqft_living:qk]</field>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Calculation_1312799340667265028:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>629969.29315960908</value>
                  <value>743</value>
                  <value>2440.0</value>
                  <value>&quot;2010 - Present&quot;</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Calculation_1312799340667265028:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:price:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:price:qk]</field>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[ctd:id:qk]</field>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:sqft_living:qk]</field>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Calculation_1312799340667265028:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>603839.41498559073</value>
                  <value>1823</value>
                  <value>2290.0</value>
                  <value>&quot;2000-2009&quot;</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Calculation_1312799340667265028:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:price:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:price:qk]</field>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[ctd:id:qk]</field>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:sqft_living:qk]</field>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Calculation_1312799340667265028:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>518612.66409444663</value>
                  <value>8128</value>
                  <value>1820.0</value>
                  <value>&quot;1900-1999&quot;</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
          <highlight field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[ctd:id:qk]' type='size'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Sales since 2000'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='bed pi (2)'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='bedbathbar'>
          <zoom type='fit-height' />
        </viewpoint>
        <viewpoint name='price map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='raw/reno sales'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{31E37693-E333-400A-9088-97F48BD12DFA}' />
    </window>
    <window class='dashboard' name='WA Home Sales'>
      <viewpoints>
        <viewpoint name='Period pricing'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <axis>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:price:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Sales since 2000'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='bed pi (2)'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='bedbathbar'>
          <zoom type='fit-height' />
        </viewpoint>
        <viewpoint name='price map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='raw/reno sales'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{45A3E749-BF92-4B92-93F4-D02733B1272E}' />
    </window>
    <window class='worksheet' name='raw/reno sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[io:Yr Renovated Set 2:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[io:Yr Renovated Set 2:nk]</field>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:yr_built:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B548D59F-816E-49A2-98F5-02CE317F463F}' />
    </window>
    <window class='worksheet' name='price map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:price:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Latitude (generated)]</field>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:price:qk]</field>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[prc10:zipcode:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{567EEA5F-8952-4372-BC68-6CACC3BFFFCC}' />
    </window>
    <window class='worksheet' name='sales map (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:id:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:id:qk]</field>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:id:ok]</field>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:zipcode:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1F77B633-3A83-4422-9699-DDA0F08B98A5}' />
    </window>
    <window class='worksheet' name='Sales since 2000'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:id:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:id:qk]</field>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:id:ok]</field>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:yr_built:ok]</field>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:zipcode:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{61BC908A-7F71-4BD9-84A0-CACE60CD90D5}' />
    </window>
    <window class='worksheet' name='bed pi (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]</field>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):qk]</field>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:zipcode:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{7D4557D3-8A04-4CF8-BD8B-C248136C179A}' />
    </window>
    <window class='worksheet' name='bed pi'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]</field>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):qk]</field>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:zipcode:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{3216CB63-EBD2-404B-B82F-923CCF2F1B94}' />
    </window>
    <window class='worksheet' name='Bath'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bathrooms (bin):ok]' type='color' />
            <card pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:bathrooms:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[:Measure Names]</field>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bathrooms (bin):ok]</field>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bathrooms (bin):qk]</field>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]</field>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):qk]</field>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[sum:bedrooms:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D7DE3C83-C67F-446D-82F8-A14C24336899}' />
    </window>
    <window class='worksheet' name='Period pricing'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[ctd:id:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:sqft_living:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Calculation_1312799340667265028:nk]</field>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:id:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A4F1BB84-69BB-4E09-8C62-B9970561837A}' />
    </window>
    <window class='worksheet' name='bedbathbar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bathrooms (bin):ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[:Measure Names]</field>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bathrooms (bin):ok]</field>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DE8FD508-696B-4C5D-92E2-4D8E6888B977}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Bath' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Period pricing' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sales since 2000' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='WA Home Sales' width='192'>
      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
      mcn9IYe3AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='bed pi' width='144'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='bed pi (2)' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='bedbathbar' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAQJklEQVR4nO3dW3AUV37H8W93z0WakUZXhJAECAmBQKAL4mauxg62F9thvYmTVKq2UvG+
      5GFf8pY85CV5yUO2ktqqbFVStUn2Yb3r1G5t1q7s+hI7NiwXY0kGyYAQAgRIoNENjTS6zKX7
      5EGy4mR3hdrQrcHn/6mi0KhQn8Np/aa7p8/5t6GUUgihIcMwDHO1OyHEapIACK1JAITWcjYA
      mUxmtbsgNJCzAZBrc+GHnA2AEH6QAAiteRsApUjNTjM+mVx46dg8GL3P8OgkCsXs7BxKKbLz
      SWbTtqddEeI38TQA2bkEV65e4pOL/QAkR65z4WIfvZ+e4cZoiqtXr4Gy6enqZDolARD+M7y/
      EzxDR8cgu3dv4XbnGaymg1Q497nYO4+VHWNNAYyH62itKwfU0sVvNpslEAh42zWhNcuyDF9/
      wxwnQH4QjEwIw5mC+Um6782w/dBOYOGTH9u2F/+tQzab9bN7QkOeBkAph2wmg21nSGdsoiUG
      t/ripJ0+jJIWMOZ58WADp091UnHwKaIhi6BpLv6sIhQKedk9Iby9BsgkH3D+9FnGx+/wq7M9
      FNS2Ep3u5db8WtrqY1RVVYIZYX/bJsYS8152RYjfyIdrgC8nnU7LEUB4yjAMf68BhHtnBqaI
      z6Qf+3YN4JWm8se+3SeNBCDHJWbTjE+lHvt2jce+xSeT3AkWWpMACK1JAITWJABCaxIAoTUJ
      gNCaBEBoTQIgtCYBEFqTAAitSQCE1iQAQmsSAKE1XwOQTU1z6eMzdF29jY1idHQMpRRzE/cZ
      TUolOOE/HwPgcOdyD6GqBkrVEFdvJ7lzZxCcebo+u0l+UA5Gwn++rgewLIfhu7eJWjYzU0PE
      shOc+uAU1S2HiIYsHMfBcRxgYVG81Af1rkSkQuqvgq8BMKlp2k3eyBhzs8PcfhAG8igvtpie
      nkOtiWIYBubiovgvfq0zw6OVKwbI+OLzESCTTDA2mWB8cIzavc2M3UiwvW07Fz++QLxsN5XF
      eZiLe9wwDCzL8rN7Ocq7tVsyvj4HIBDOI2QFqGt9ipriICUN9WAE2dm6k2lb3o2E//wNQH4R
      DVuLll7HYoVL3y/xsyNCLJK3XaE1CYDQmgRAaE0CILQmARBakwAIrUkAhNYkAEJrEgChNQmA
      0JoEQGhNAiC0JgEQWpMACK1JAITWfA1AOjnO6ff+k1++f4bJ+SwDA7dRSjFxp5fBycf/HCwh
      HsbXAIz091Da/AyHdpZx9do9xscf4KQn6bmdpKIw6GdXhAB8XhFWur6WS2feo98K0X7wGPFP
      u3njp9d5+uVXCFkmjuOQzWYBsG2bVEqOCmqxSsZj3y7I+OJrABxGbt+n8fBx1mYH6b4xSDhW
      w0ubDS71D1HZuhHTNJceji0Pyl5geFS5wQDC4bAn236S+HgKZBCJheg5/T4fnr9CfnEMgMKa
      ZqqMu1wfniYnH1kvvtJ8PAIYrKlv48WNO1EYBAMBlCoDoK75KRz5QEqsAl+vAQzDJBgMfeH1
      Ys0bw0Iq1IjVIG+7QmsSAKE1CYDQmgRAaE0CILQmARBakwAIrUkAhNYkAEJrEgChNQmA0JoE
      QGhNAiC0JgEQWpMACK35uiRyfPAmA/EEYFBeU0csBMXFRaSnxpgNllAS8XV5ghD+LonMKyim
      oqKCqJpkeCrLzZsD4KT4tLvXsyeiC7EcX5dERovLiRSm6Bq6T3N9KVfOX6Hz3DmK69spygug
      lMJZrIKglFqqEKEzpbxbKS3juwrXALOTgxCrJn+xZcfJks16U/pDiIfx9aRbOWlu3RynvmUP
      oCAcY8++RjrOdzBWsofywjCWtbA62LZtAgG5JjA8PDdcbnyzjmIu490bU2E4N1aB+/sbpgzW
      1jVQHFrYqXV1G8EM09a6jYmsFEXJJaPJNB/0T3qybcs0+KPWCk+27Za/VSGsIGvKSj5/RUnJ
      wteBaBm5MRzic46jmE15c41gmbnziYfcBxBakwAIrUkAhNYkAEJrEgChNQmA0JoEQGhNAiC0
      JgEQWpMACK1JAITWXAQgTd8n3UwDmbk4lz4b9KxTQvhlhZPhMlw9/yH//qMP2HC3n8hMHHvN
      EVp21HjbOyE8tsIAmJSuq2FzfT01dXUUB7azecsWb3smhA9WGACLtRsb2b2rn7fe/wDTMInP
      h3lu9yZveyeEx1ysB8gwdCPJq9/+czZ8yedXKyfDje4LXB2aYc+RY2QmR6ipqSI5fJOpSA3V
      RfLgZuEvFxfBBmQH+Me//Tu+851/4N2OW64bSwxdZjCzjhMvHKM0z2BkZBTsJB29I5RHg663
      J8SjcnEECHLstb/k2CM0NjE0yuzcBO9/dJ89B/bB9D1+8tMbHDjxu4QsE8dxsG0bAMdxSKVS
      j9DaV4NS3qzLVbDs+Ga8rBihVM7sW1enQJf+6xecvX6PudEBKp7+M755tM5VY6FwmLr6dqrN
      CTo6e4gVrOXp9YrrA3HW7ajBMIylhdpKKYJBOSoYhje3agwgFPrt57KBgIdrtI3l2/aTiwCE
      aD3+dVqPw0y8g5+fSbhurGzTJno/PsdwUFFUvQOVjFNe18x411kGRkvYVBHli6tFvayIIJYf
      X29H3siZfesiAGkuvrdwBFAKdv3Oq64byyuq5uChIlJZKCgsxMmWAQZbWvaQVlICRfjP1RFg
      S/suhqZTzIfK2bqxzHVjhmGSH42Rv7TJhcOgEQiT53prQjw6V1MhOt5+l3BdG5uLErz90TXv
      eiWET1xdYZkGzM+nSKdSGKbMoxNPvhX9Fis7Q2IqTfvXThCdvsdouoSn99d73TchPLeiAEwN
      93P6k17yiqs4dvw5DmyLcaFzwOOuCeG9FV0EZzNzJB4kSGUcwpZiZmaKqZkir/smVlEmazM+
      mfRk24EcOn1eUQBKqxup6nyd7363h/yAYs4o5Jt/etzrvolVZDuKufmMJ9sOWLlxDwBWGAAj
      GOHY732Lw5kMWQfC4ZDHN0qE8IeryXCWZWGZBtlMBtuWh1qIJ5+ruUAdb/6ANy/GyQuatDz7
      +7y0v8G7ngnhAxcBUGTShbz2F9+iVqbti68IFwEwUM4YP/7nf6IsL8jW/cc52rzBu54JAMYn
      kwzFH/+nMQuT0aof+3afNK5moAUCpbz8xyepi0AgmBvTWb/qlFqYu+/JhoW7UyAzT/HeD79P
      wLRoOniCZ3bVetYxIfzgIgABNu5op7ylgKCaJxUsefiPCJHjXM0G7XrvNHbpOoqtMU6d7nPd
      mJ2Zpf9yN909nzE6lSKRSKCUIj09QWJOHtos/OciACG2tdXw1r99n9d/dp4de7a6bmwuOczd
      +DzRaJSgBf39t0CluXjpMrack4pV4OIUyKRyaztto/PM5lexrbrAdWN2MoEdjhAMRYjmByGd
      pPvCeQo2tlCSH0QpheMs3GBTSi0tkNeZ8vCNYbnx/Xw/eEIt37afXN0I63rnTUaLGimdvMwv
      z5Xx6lF3U6Lzi2uoeHCf+N0rjM5sAydLMjVP6eLC7/+/s73c+WL58fV67HNl37oIgMP8rKKq
      ZROV05PcG5p13dj0ZIJoSTmFwRTxdIZgXjEH9jdy4WwHEyV7KY2Gls7JbNteqhChMy8Xjy83
      vpZledYuxvJt+8nVNUDz4f0MdnxE54DD889sd91Y0ZoK5kYHmcgW0dZUQ23tBjDD7GrdSiaT
      G4dEoRcXMcxy/dPL7Dj+dbaVhr/UO1MgL8aOXXuXXofLSgEIFq6h0vXWhHh0rm6EKab53t/8
      FXUbqtlx5CTP73FXGEuIXOOqLMr+V16j7YU5bAWBkMyIE08+V4Wx/vtfvsfHsyGKLJNtT32N
      Y20bveuZED5YUQAcJ0sqlSK/uIIXXz5JQ6GJFZDJcOLJt6IAJMdv8rM33iVhZ1A//ldOmRbb
      D57gGTkCiCfcigIQW7OFP/l2PRPDExRUrsHKzDAxlRs3MoR4FCu8D2AzOnidn//gDS5cvUpP
      14e8c8r9ZDghcs0KL4JtRm7f4vb9QbLd3RRZYQ48vc3bngnhgxUGIETTwePYM1O8df4W88Vh
      +u6MUVe+3tveCeExF1MhMgzdekBpbC1HX9pHKpEbj7gR4lG4mgtUs6Wa+voov/jZWbKGXASL
      J9+KToGUk2VidITyHYfYwAwlVY00NW/2um9CeG5FAZiO9/HD19+mIGIymo5QG5tjYC7Gq4dq
      Pe6eEN5a0SnQTGKS2h3P8uJze6muaubEyWdJ3Rryum9CeG5FRwAz4NDx9o/oKlCMTSpuXQlR
      0XTS674J4bkVBWDt5kP89d8feiwN2pk5us59yrYjT5EYGqaqqpLZkdtM5lVRXSTzi4S//H1S
      gXK4f+0idwcTzKIYHo6DPcMnV+5RHs2NJXJCL77+1qWSIwyli2msXHzwQnKYN98coO3ZE4Qs
      E8dxlqoFOI5DOp32s3s5SXlYnWG58c1mPazTpJZv20/+BcBJ03PmDMNWCQMDt6isrqUgUsae
      Soc7Q2PUxKowDGNpsbRSimAw6Fv3cpVhercofrnx9XRR/EPa9pN/ATACbD90nLp0mv50mvKa
      ch70TrCuYSeTXee4M17ExvLo/3nyjJcVEZ4c3o3BcuPr6dgbubNvfQyASaQgRgRFy7EjWJF8
      qpoawTBpbGln3smNdwShl1W48jQIRyILjeflLXwnmE/E/44I4fOnQELkGAmA0JoEQGhNAiC0
      JgEQWpMACK1JAITWJABCaxIAoTUJgNCaBEBoTQIgtCYBEFqTAAitSQCE1nxdDzA9fINfdVwm
      a+Sz+/ARpofv0tBQz3B/N9nyRtaXyHPHhL98DUA4tpZjz29kNv4ZfQMTBDNJMsk4/eMm++ul
      JIrwn68BCAQtOs68w1gqwu6DTdz9pJOfvNXH0Ze/QdA0cBxnqRqBbdukUlKB2vGwKsRy45vJ
      ZDxrF7V8237yMQAKhwDtR15gariP3v5BQrEaTm7Pp7P3JmvbGwiYJqHQwpEgnU4vfa0z0/Tu
      Mi0c/u2nnMGghwEwlm/bT74GIH6jm85rd3Ew2bLrMJmJJJGKLWwau0D/cJKtVYUe1kAQ4tf5
      GACT6sZ2qhvb//db60sW/mra5183hPgC+RhUaE0Kcq7AcDLDbMabi9HiPIvSfNkNq0VGfgW6
      B6e482Dek203Vxewd0ORJ9sWDycBWAG1+MezjYtVI9cAQmsSAKE1CYDQmgRAaE0CILQmARBa
      kwAIrUkAhNYkAEJrEgChNQmA0JoEQGjN18lwU/eucaqzl3TGZuueZ0mPDdDa2kxf1ynyNu1j
      Y2men90Rwt8ARNds4vkTDaQnb3ItPoNyFLPxPiYCteyTkihiFfgaADNgMXbnBkPTDk2Na/ns
      dBf/0TvD0Ze/gWnkblUILyszPOz/KVUhvOVrAJJjA8TnIjRvryJgKojV8Ad713Gmq4c1B1oJ
      W7lZFcLLygyWZS1bIUGqQnjL38pwI/e42jvOzV6TDU17KCqKEYhU0FI7wZ3RGTZXSlUI4S9f
      A1DVdJg/bPr175es30aJnx0RYpF8DCq0JgEQWpMACK39Dy5MXz/VUVftAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='price map' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='raw/reno sales' width='192'>
      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
      G9EEEiQ0/x+HOuXJqYfUNQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='sales map (2)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nMy92Y8kyZng9zM/447IOysrs+7qs/ruZpPNndkZDjnXzoU9tBAErRbahV6k
      V0GP+gv0IEAQBOzOApKgBbSEdjSc2RlyhuSQM+xusslmd1cf1dV1n5lZlVdkxumX6cHDPMw9
      PCKjsqp39ZHZlelubudnn323ibt370opJToIw0AIkBKkjEB7LbU/BIKpQAz+IyVCTPlNXjVC
      pL6XUpLtuw7qnURiGmZSh/5ttk6AYrGIZVkIIZJyetm8MURRRK/XIwgCoiga6a9e55OCKIpo
      t9uEYYhhGCN163OjxqKDPheWZY18m51fVYfjOARBQBAEqfeqD0IIDMMYuz6T1mxSGdM0R57r
      azNNG1JKoihKyltSSiI5XDCEwDDil1EUxhUpRMpOhr4zVAfyGpaD91IiMDCOiAR5Ax0ZnJRA
      XM6yLDzPA8AQRgqhx30fD0VQKpUwDGNiW3o9URQlSJEto+opFouYpjn1eCeBlJJer5daUP1H
      79ukedMRNksc1EbWywG4rksYhgCEUYhkML+DdgzDGNmQURSlkFX/NzsuILWB9H45joNhGEl9
      +hqpeZBSEoYhURQlY1D90csADLe9EAit4zoVU8gdhSECRiZTLzN2dycIEyEZpVbTwGG7XDI4
      sQbvKuUKzbCZLNYkxNeRX22acaAmuNPpJN/Ytj0WuaMowvO8qSjfo0BqjbS+Zf/Oo5wKdORS
      86RDlghIKfE8jyAIYuRPTtmISApE5sTMfgvDDaQTC9M0sW2bXq+Xe4KqOk3TpNvtJt85jkMU
      RYRhiGmacb/CENu2U+1bloVhGPi+D5CMNX3u5YCagCiK4onUqII2i8muRGt0ZGHUJDw5LiDd
      VyGQwgAkhmFiWiaWZQ9Ohbxuj25aRfkOQ1bf9+l0Osl45mbnRiZdhzAMCcNwhNU4Kqh+Kkqp
      nukIm2XbsuNSfc2yelnWMLuOvu/jui5RL11fJCNMjFT/knda271eD9d1sW0bz/MS5Ox2u0n/
      TdNMEeJCoZAiJOqn2+0m9QZBkPRVJ2JSSoIgoFKpJCeDAksrlRpsFgGSIym7Ehme+EnyuKNN
      TV93oVDAEENk0I89fWGjnA09iWJCvJjdbjeeTCkxLZNIRqljf9zxfhgbNw1IKen3+/R6vYTl
      GAc6ImfL6by6Tv2zCJ/Xvu/7CXFRRFHfiHnfqH+llHQ6HQzDwLJjuajX6wGk+qETlG63m2Jp
      xs3LuHVT7KlpmonMFEVRmgUat4Axjze6oNmG8xY2r1MSOb0Analr0maTA/7ftm0q5XK84IMi
      YRRh5AjReTAOQRVV832ffr8/LI8YyDmj9WRPl8cBNZcHBwf0+/3UfOQJ51l5QF+LPJ4/SyD0
      3/PGIaOIYqFA3/MS9jhbT6lUStga9S4MQ8IoRAiBHwS5MqHnecnpIIQgDMPHnr9Op5OwqqZp
      xhtAGAZCpgerTx4wMrAs5PFqSdkcYeyobJA+seP4SxkXSBZY8eVSRiAmU3aIEUMdyVlQlL/d
      bk+kRKo/ubLSY4ASfD3PS833uBMgK4geJvyr37Ms0CSKHgYhBbcQI/WABVHfmaaJ7/vJXCkC
      Mo4lzQNdTnhciKIoIVzq9LOEYCKroFP/SciT4iPHIIcQItXW44A+0YVCIaEYyHjhFeJXSmV6
      3S7j0FUfr23blEolXNcdQZwwDNnf38fzvBHkV4yh2nBq0bLUt9VqYZrmkdWhYRjSbrcBclmX
      LCgqlx3rtJtiHMHJand8z6NYLNINQxzHSREQxdpkYVhHztE5AbL9PSpRUXNnjeMRE+FXRgjy
      eWW9A8kRdwhlfBwqmKVKahcrXtH3fYQhcG1n5B3ReDZNiFhlWqvVRrQ5imq1Wi36/f7IPBhC
      IGSMnOPYEIVMnufRbDapVCojm+wwkFImyK8/mzRXec/GsURCCPb29tje3eP0yROpvuv1pYij
      Vk+328VxHGzbptvrEvhBsgbJt+TIkFPifxiFMR5KmbDQ5gTZZ1owokgm/FWe+gnS+mVyJnaE
      7RkDj8vD6f1SApHSFiTvEfT6aVXacDPLkbqEiFWYtVoN13VHkD8MQ/r9fornz4LSThwcHCTa
      h3G8ue/7ifHqUUAZ2fS+TRKox7Fgk1ib9fV1/vyzq9y5ezcpl6fTH9dev9+n1Wrh+z5BFBJG
      UaIqlVISRuHAFjT4hhw5bvA/XcWqv2OA/I/JTSZgySgiklFiIDBNMy0Mk5monCMoewokvRvh
      /4++Y1MslkaFFCXVN4LSBSuVY6lYYj/YT8aiFrZSqeA4zsiYVX993+fg4ADf9w/d4L1eL9lo
      edqWbN3TUn9lYc6yEmqux9UzTguV93dqDeeX+X8/uco/Mi0W5ueAoY4+W0deG0BCnZWBTH0X
      RTJmp7U5GNkAkURqj3TZTptBpjo2poCUGlQyNK4ohJqk2lKInjoqNb20+i45Ch+j0+MEsSiK
      cBwHiBHPECKxbKu+ua6L03NSVNdxnIRfzUNQhfxKtzzN6TVOk6L+Vs8UMk0D6sRQlFi1o+u8
      x/Ulj//PlkmPGzBM5PIaf/HZVVxxNf5WRnzjufOsra4m302qV53EWUJgCoNIDlhl8lE4knLQ
      EUGkS26DD+L2AEblmaNA1gFkpIBExrtSW9xxiyyTzg//zvrgPGnQN6riwy3TSm3EvCNcsU95
      GpQwDOl2u4nV8DAYOQEzz9XvasMVCoWJunsdHMdJkDlrpYfxa5F9l7eBs/461WqF+s3PadlF
      OourdNW4mjv85P1f8qumydLCQqJSnsbCnAeGEX+XLSGlHKiqdZZVjSFnbBmZ5igwYpaUUQTa
      4sSCR5gWboWIEV3KpGORHPXt0P+OZPREtUBJf3Ooj23Zqckdpy2ZtEiK7cn7ZtxpNGkhpIz9
      WFzXnYqnztarUzvdmUuVyf6uNkoem5HXBsDa2hp/VC7z1++9z3oUwUAe8tfvIF97ne/fuEvt
      i6vMFFyWZhpUy2WWl5Ym1p/SPAkwGCJ3lghsbj7g/c8v8/rzz7AwPw+jIvOgztG+PyqoPo9u
      gByWRwgD00o7HclEZoirCMdof7LsyJME/ZjXqXWWwuZN0jiXBIVsefrnSSrDLERRlKiQIxlh
      CINWq4VhGBQKhYnjyuvrJH+mcdRf5iDZJNjd3ePbH3xGt7GMMDUiWKoSdNo4x47Tk5K7/T63
      uz0Kty/zRwsLuT5QuUI48SaIOQMjtaFv3rzFpXv36ayssbGxyfz8/JDQfkkghMj3BdIpZlaV
      lWhXNJ70sEaUAPw4MsA4UAhhWRbFYpFCoYDjOCmVX5aV0TU0eZB1882DcRRY/R3zuiRcrGHG
      rFWz2cTzPGq12lQE4aDVYntnJ67DMJAJmyUG/xcJb5woLAb1mpoGJzvmrDYoiiJ+/OklevPH
      EhZFgXVslb1bN1l4/oW4XtfFdF3E7tahp576V/2ufHH0k+2Lq1e5JC3c0+cxPA+v5SWOhhNV
      vYgjexYLw6BYKORvgKzwpBBdTZiu7RiyBIcgDE/+BIChpVAhvq4NUpDn3DaunHJyy4MsTw/5
      C2QYBlEYDfTVJOXUXPX7fYIgmMog9tP3fs7fPdxP/u5vrrOzHyItBwE4XpOotoAADAFi4Apu
      RiFl0aewsJS8MwBjf5vq4lJKoyJk3L87D7agtjw6bsuiG0o2fvlzll99IxlHx7T587ffjZFw
      sAHjjQX+wQFOtUoktU0plB4fIgRSxFjjmxbuyiLCMDAdhytdn+sXP1MTl6t6T/p2RKIa9Tp8
      48JzY04AXchSDWV4yWl4S72s5Mk4gmVB9xHJC+pQOvosZFkk5d6sexdm4TBeV/1rGAbBQOcd
      Pxtqb1Sf9/f3aTQah8YHnDyxxru9u4hKDQCv16Pb84icclxX0McrzafqByCKmAu3CBZWU/22
      Om3Ka6dzx2LsNokCH2wnMy4De+Uk0e0vUs/d1ZP42XYHvz94/2esPPcSwhjjZcBQC6TPgDAM
      SqfOTpwTHY6KT72dLfq9HlMxiJFmKJvGVfg/JnieN9Y3R/HyWQFY+fsoCMOQVqtFq9UacbrK
      soB5behllauDKYyEzxUifWJIGVuFp9EyPfPUU7xUFETe0IdFrwc5ZCcygyTKyjFSYpjjl1wY
      Y/T6A17cMi2iHGKiiKEQcUyJMIz4RNA4h2kE8cMUCU8SRCSxHWe6DQDxJkh+NB4uGhjSDoMn
      ObDsZHY6nSQ6KtXnAUuTfZ4nJGf9zLPtTUtplAFOuWDkab4edS5+4yuvU23tqc6k+zShrqjd
      Itq8CypIKIpQln19rFJKvHabsNvNV4VLiVEo4tXnWf/8c/Zv35piDKPqWcX+/P8BjG6bWrWK
      cSQWSjsNYi/A8DAR4IlCntCZDXQAEjcGXTWoqwcVqFMiKxTmbYQsZDeHYRiJutMyLSxzlMt8
      1GPb9306QYC3s0Xz8iVSJiSZp+qULNHhf/hn/5R/+OxpZKc9VEeH+QL+3s1rRGvnEI47th/2
      3CLWqafY2d4lnOAakoWE9Rn8/KfiIKSUhL5P0O1g9LqUy2UsEEOj0SN0TEaxnS6P/8tr+EmD
      Yk0Mw8gNCle8v85mqPe6z48uI+iIFEZDtkk3GOXp3LP9klJSLBaxbTv5Rvny6J6S00aHhWFI
      aFgI04LKLJHQuOacPpSCDv/im69y6sQqf/7TnyPrx+ItYxj03Apbn3/G/DPPpb6REjCn8FJN
      tHqjr6SU7F3+LEbyaPw8fVlG0UkQBQHhxj2WLIOa63Ds2aeRUsbeoEdFUBmNt3zqVFcFpD9p
      cF2XYrFIv98fG46YHVu1WqVYLKbYgHxHNxEvokGiXep0Oil18LhTotPpUK/XKRaLyfNyuTzq
      STqljn6m0WBRhDyo1pg9f4b9z+8R2YpSj87/guhz4Zmn2NjY4HaURmpzaZXeFx8kComg16O1
      fh8ZhgjLnkpRISxrPM7IiLlnnifUZBYdF/5TgNfco7G/y9eef5ZKpZJ6Zw2FqaNTaT0uNQFN
      L/1lDNw0TQqFArZt5/rzqH7pUCqVEv5fCcj7+/tjrMTEfodCJN+M0xApvX82riLbn6NmhLBt
      mxdWFvl+s49hO5iRTzjoh9HvYO3cG6hVYuGzHCuI6PX7RMYgSjfwCXYeEnl9rFaL3s42INn4
      4jrrWyElf5saFu7KWsIGyShCmCbIiGC/iVmpIUwTYZgpCq+POQpD+vtNCo2ZkXcTdfrZ94In
      wlZHYcjx9h5vvflG7nsLHg/5E74Zrc+azlsIQYRERBIEmOLx04IIEYfaKco8DnSDlvLB0cv7
      vj9WE2MIIzEwKa2RCnYZtwkUaz7Ox+ioIKXk9Ooqxv2LBGFIZA0tyWGhRNiYQyDV5HMv6LK5
      +SB2U9j/CbJap3/jCtubPaQwEdTYfPtTkBBYRUK7wr7p0rqxx7LnUTzzFJ3rVwi7PWovvoz0
      PDbe/hmV48eov/giot/BHOPQV1peYffqFeonTlJZPnaoQ944EGTS7hwR2vfv8tzT58a+tx63
      DZ0vlpnnCQUcGDOklARh8NhskVI3Hpa3Rzdoua6bMjwFQUCr1Ur6Pi6RkxKIAWq1Gs1mM1ez
      pMcfF4vFqf1wpoW+1wfLJuq0kaY9ZOFMB1mqpea+FZa5fOMGv/LmV5htN/n8Jz8lNFw8p5EY
      q6Qspcdp2ISuzcM7W7hXv8uBcwxDBux/7/sIoG/VCDaaVE7u4jg2Ikd+kVJilcrMXXiJ1s1r
      lJeWR95PAiEEnQeb9LcfUF49CULgd9oU5xePPI92jsEThv5Uj52jQ/m7TIKsGV5KiRTDwPiY
      hZCpoHWZULR83vEw3Xye5VcHlaZE1TUOlD++El6r1SqtVivlnx+7IcR9UVnTwjBMZI0nAbfu
      3UcWS3DQTFEamVN9JAyurm/xq0JwYnWND5q7SDHZZqo2lFeYRXhdIrNABARWJXkfRgE7v/wl
      s4uzRL6H6bj0m3v093YRpkmr1WF9fYfVxRqGnx8KOQm8g32M9h6nLjzL7t27eL0elhD0dgyK
      cwuPXB9AYWWVv7t0md967ZVE6SAZRjqOrnzegg3M2F8mGAMzeSQjlLd4mGNfUCzJONZHt+oe
      Frg+LXS73SSzgaLqulenQnKl/2+1WrTb7akCaaYBKSXXtnbBslLPYshbL4OHB/H4X3vxWaqG
      P5GYDCuNcDoPYzYpr5xhsSuWuXt3n/7eHn67xfqHH/DZdsSnmx43e0X6S2fZXN+ifnq8NVfK
      /NBZYRjsrG9w9d2f0VhdZfXCBVaee47evduJLeMo0C6U2N7ZiQO/ZNpuNXICiAGyHxbbOzVo
      1F9pjXSKmbQJmJmTAmHEeXcyi6HYmTxQFHtc/Ow0yJjHq6qgFBU7LGUco6vasW2bcrmcIH0Y
      hkmUmBrzUYPhr1y/wSYWQhhko+pE3uklBA97cQD9s0+d57/4+w/54x9dxh8st4gCDBlCNAje
      H6yF4R0ggxCvMJf0eUTLZZg4ZsDGtRsc9AI6tRNIpzRcZ6BXX6azuY5hmjjVUae/3s42rZtX
      ceeXsCvVmKDMzOK1Dpg/fox+u51wA0IITrzwPDc++iULr+QLsoeBcNyBoTTupmmYcfrPLAuk
      e3gmOv4noMPPTsC0pnFl6YykTAKgFfWd9H2eoKq7OORZjCGd3DWrGVIpUVQGinK5TKlUSjZA
      tVpNZYQA6Pf7OI6TyBoq7njaTeD7AT96+x3+/Idv47lF4DKy18Fue5iGA0gsehhhgHQLiChC
      RgGEEc1+m/39fWq1Gr/29Tf54PIN3r/bARnxh68c54cfX6Hj6G7ZAlMGdKkSDeyjkhwNnpRE
      xQob1ZOIqkQKYyS6KyjPcOfO5yw+3KTQaCCFSeOpZzEHkXu97Yecee0Vgl6fXquFEILd61eQ
      /R4nXnsZIxOXXahWmV9ZpvNwk9LC0sg8dba38Jqxpbwwt0ChXk8X6HWpLM5gmAa2ZXP9xg02
      my1OLs6n8wLlJsYSk83tqpOTFjXeSPEkG0aa+o8tPwDlTx+EURJdphB8XJs6Eqpx9Ho9HMeh
      VCql3mX7n7c5dXtBcoJprBCQJFtSoLRO/X4/2XyPEggfhiH/9599jz+/uEkgjiEGyiortAij
      DoEVL3I52KbbK0EPYn/PmKaZocmtO/dYXV3FNE3+u//yH/P5F1cGWewkf3G3TeiW0+Ps1jHX
      NwikG8sMWcxW5dBOHjn0eNXn7WD5aQqtuzz38osgBHc+/Rzn2CpWoYgwTLxOh9riIpVB3LHl
      bCCEkUZ+TdhprKywd/GT1AaIwpAHlz5jNzCQ9TlAYly7ycryPMVGI6bwhSJOp8Xc3Bye5/Pj
      9z/kF0EBnCLy+lZsCFP66+yRN63aasw8JRMEHFnrI4TAIGaFwihMrNaTNkBWqFUyQ16wep7W
      J++Z+rff7w+zilkW9Xo9ScyadYlotVqPPF4FQRDw8fV1AmyEoY1TDPKfCmW9jxN+ZSG0ivz7
      v73I0uIC8/NzNOp1Xn7xAgD/7j/8FYFTHPkmcksYM1Wc7X08e0hFUziRURuOXVMh2Coucv3j
      Szz9lVc59fILPLh6jc69A6TnIYw0Ja8v57hha6pQGYUjbhqd7S12jRIcG7p3R8UKd7fWEfc2
      EVIyWy1QOmjyp3/3U7b6ATtuhbBajPHSKWAlDejqzEE00+BF/gAHMCll4lEha1GOWaE48a5l
      WZjWeN2/EIJqtZpkGrZtO7EXZOUG5Rc0rp5J41LvdMqvl8+6YCvhfVqwbZvj8zWutbqjLwfz
      YxgGQo7LDiG41YT/8d98l8WS4L//r/+IlWPHADi+OIdx8zqhndZSmQdbsPUA36iOJWgiChBT
      BvVLy+XGjsfx7R2q83MsP/3UoPvpRGvTsMP3Ll+hemqoz+/ubHPvwR7Mr6T7JwQsxM8ksN3r
      sF1eQtoOVDS1/ADitCiPKfBOPAGOCCNWVCOmsK7t4Drj+WjlH2RZFuVyOUGOrPen7kCn1zWO
      FUoRiDEb40lavbe3t7l0cwMzKg7YjMGGC/sEAwu1aZrJ89y2haAnHdZbfXb2mskGeOrUSWo/
      /4K9HP6+bzYIzfEhm9J0iA6aEAaQ4+iXhW51kc2btynPzoywnMpoOmneegcH3L9yDas+x/61
      L7BrDYTtcPfBHtH8yuHayULM8qpS2bV7bEOYMAwMVelYxCB9jD9K/RnNkHJkO9Rf5RBBW6U4
      zDttsnJQnkYkT8hWrtCWZY3EFKtNqLJRjAPV3gcXL2K5ActlEbsfmCbCtIg6knu3OsnpZUR9
      Cv4uCAODKNHsaA3z3NosT58bqiXn5+f4xy+e4o8/3kBaTqqsyCSRzLV6B0F88owdhVbWtLmy
      7bHwcIva4lCXnyD9ITLmzu07dDs9Zkodjr94gfbuDlc++Jjw1AtHZql1eCxDmMhkGH5SMI4i
      qJjfo1JZZdVVLhB5m0Q9OyzwRw9SVxFe+rtx8sVh0Pc8vv39H/Hew30aroWcqWOUq8jaDAiB
      93ADbl1NTu1io8b5X/kqfruNVSph2DZKsSnDgNLOA/7zX/+VVC4iIQSuZSTW+QQME0GU23d9
      DFKY8AhcQ6e6zGcXL/OVX59NCbnoJ8EYOPbsMywFAeYgzru+vEy5cZv2Ezppj74BctiKvN9j
      yvfonc1uAqU+PEwAHleXlHHQS7fbHUktriCrBcsbj16fKtftdhOePzsPOoHodrsTk2KFYcgH
      H3/MO/sBcnaZbbdEvbNHxdsk6LboV+oj30RSYJXKWKWhRkf1wX5wj3/5e79NuVwe+S4uOPxH
      AJFTpBLewIt6+GYR3ygPkhHGpQQCIUMsCx4pZ7MQbDiL3Lt0mbULzx1eXgPDNFObJgojQkQq
      dc/jwJE3gKKUyYJn+GOlslRljwoKiTzPwzCMsfdsZbU3um+PyuefDZ3Msjv6z0gG6DGGIRj6
      9UeDXJjKLVCfA6UWnQSmadKo1ynK+3SAqFxjr1Jnv9XkxN5d7NYu+1F64cMgJGi3MEtlBBA2
      d5G+h6jUeHF1JaX21cdimwZJzgoZq0LM3gFPv/Ua3vYD7t9rsuGVk/eIWC1ph20MK0DKCAIP
      hDGVLBA5RW7cv82xp32sQZyEPq/TgNfpcOmDT2hWFuPYiMcAKSXi/s0JG0B1Si24zquNYXsS
      gfMJ+P8PBSVJqVhKvDYnxf6qG1MUoqm0gp7nTdTBK/5cIX+pVKLf7+emU1EZp/VNqF/cFpcD
      Bio8wbDOadyhnzl3jrdu3OYHnTAJUJEIxMoq5cUl/IsfUqJNVzpECFYbRRp3r9KbXaIdSX5z
      bYkzp05x/dZtXn3pxdQ6qBiG7/3kHW5evw6yBoE/VG2GAU65TNRyR1XJwsCUHoV6gdCdw968
      gbBcsCy8hZNTuco0RYntGzdprB7HUbES0+KJlFz/6BP25k8hrOlTS46F3YfMNSrjN0CWwqeQ
      XcqYdmRS9ClNzeOCzurUanUKrpu0n+cCEQRB4qVZrVbR3RSmCeLX++w4TuI2nRcroFgpVafK
      QVQqleh2u4ggX6bodDrUarWpxn5ueYG/ubyOVAstYtW06bgU107ycq1Eoe9TLtUpFg2ixQXu
      fvgxrV7AT/s9Lt7b5A/f+kqK3Xq4tcXe3h4zjQbf/fwm/fV1rFIfx29RNKEyO4PRsLALBZQb
      W7yPBXbUwfJ7BHYDSUhUnQXTInJKODt3IAqRg809ycjpl2f4+fWHnHvwkKe//jXgEdToYtQ6
      fySQEmP9FrWSQ3nl9JgNoLECeSyOhPg2wBz14eOA3qaitu4gn2ZeGzqLo3hwlctfBclPEkTz
      +qyEbNM0cV03dROk/q3v+7RaLWq1WqJ6zcsmp9pQvkFj+XENnj5/npOXb3EzimKLrNfHrA6/
      qy7M4wqD337pZf7iZ+9i+D4P3CrWmdM8GJT59+/8nH/5e7+VzN0nn33Kg16bL25vES6uIioz
      FAQY5SrVrZucee01AIKBl6uaGjtss3h6lr1rt/EMG68d4BrreDNLIMGbW8N5cBMphuHlUoC/
      cDLOBqaDYeLVFojC+6k5TZzptaXKW5vHumJWSuTWOnZrj/mzZ3Fq9RjHxpeX+ewGjCS5knJ4
      1B8V8vjxcrmcqDyz7al7efv9fnJbo6L8yhM00fdr41Aep3nX9AghUieMaluxR1kXbKX9GcfH
      qmfqO+WkdxjFKxaL/De/+au8KA+wDnZxmg8pzqgIq7gtu1FnY3ODXquNXXBj4+BArSgMYyRV
      pR8EHH/2PC0hwHYwG7OY9VmEZdNpaYnAhEBpzR3ZYfnpZZyVOCt0FEWEZpFodxszYYcNvJk1
      gvox/MFPUJ7D3rgO0SjFnm3eZu3p86n5iVucjDthENAJmUreyAPZ61CTfVZefgW33kjaVqR1
      UOown59YuJUj1sfHD/zQtSrKiKV4a/VeIb5yd1asiH405gmvYRQOnekG45BEhJEazwCpMnHF
      iqLrfcuejOrv7I06QsTZoLMpJqc1Ojbqdf7F736Lm7fvcO1WhU/W71M8dhxkXJdp23xy7Rqt
      TgdzewdZaQyvsvJ9zsylk25FMkIYIuXKoMbQC7WxDN45RsBysY85MwvCoGCHGH5Muc2gh++1
      EW7MbiIEGNawTqNIVKxjtnYJqnPDUz0KmasWqCzMTzUHOkSD7CNHwrPAp7B9n8Yzz454z1rC
      MDDFqKVTNwqpY0olepIYREQaEjyZoHfFeqiMCjrFVSnLVaaHbLLYce0LIbA0RDAMI7naUz8d
      stRf9x+alFlaBcqEYQiGIPBCLGN4x22lUiEIgiR2eRojngLbtjl/9gxnT5/iawcHvPfxJ3zY
      OiAwSyAl1qmT+JubhEFA2O0n1NHsdXj++ZdS7ST+XsrNRZu3KEeofOX3f4c7Fz9mW0oM26bx
      q99Mygf3bvKgM9m1WxoWZn8fUaohzbh+w+8xt1zPVWdntXM6tHf3+PC9DwnXnppq3rIgNm4x
      f+7cwEaSBis+8YYuwFIOXKA1TY+UElOkdeSmMAlVgMiRupXpiJbcNi/IvdfrJSLGU/8AACAA
      SURBVJnbEkMVEikHLMaEuqMoSmdE0za6kRx+MrUBlGBrWRYHBwfDuREQhGESBVc0i0lfs3dW
      KS2U8hhNbid/xMuyDcOgXq/zG299jZXLl7m/sYH/cDuen06PL25u4kfAzk5M4bw+Ww+Pc2Jt
      Lanj1ImTfLG+yfNnjvHOvYfImYXh/OYFp4hRK606xfzWAdgLI/YQHSKnGAfsP7iJf+x8bE8w
      bdqdDl6vhwxDCpVK6vsReS2KaG5ssHXzJkFtDuGOOvBNA5bfxyzkf2uJQfC3zjOPDFrkI9iT
      uKQM4gUul8sUi8WxoY6maeIHsVrSwEhyjcJkP6SspXG4sMMsaXo/sqefotr6JXiCCD8IUkJb
      UrfWoUhG9L1YnapYpJmZdLaERwHDMHj+2Wd57pln2Nvbw/d9GpUq3758B2fx+LAf+zsjGqfz
      Z8/i3nF49/77PB3ucyWaJVInhuZPNDKejG0FIPACpGOM5P5JyWmGgV9fwNm6NZwSIWjvNXl4
      6TP8IOTYs8/ilMspwppwIVHExqVLzM7VWT1zgnvXd488bxZRLk7F7waQqAu1xY8X+8mYnCeB
      QrRxyD9EyqHbdnwCjb88Wacs9mChh7rtWJS3MloFZSFWAS9ZLdJQqBVYmMncJKGSxG0pVi7y
      I0IZxVmQJxjSHhWEENTrdZrNJmvHV5i/covtMERG8UUmpe4Bx4+PekmePHGCeq3G/c0HXP3w
      GpTjTVJ2zHT/5OAmRqEZNgesm7+3Q98Lkb324OQQQ25BqMQAQ9kQGULgx9qs0KdeNHn2zVc5
      2N7l1icXqZ86i2lbVGZnkxNn/+FDunt7LK0sMruyzPb6xsT5OIwNNjMnrp7V3JJIonAY6xqz
      BV9OIqs8UMLnuMRWutCbDb43M3nsUxqaKBx7G018idtoW+oSandgd1BZ43RNVLIJRPq00DVF
      9XqdKIrY39+PTfdRiOMWxmrWjgLKKu77PufqJW5f+Qw5SEo7b4appFww3ICNRoN2t4vweshS
      Fen7FEqj7EEsyBsj33duXoFCASc4GJwOafXl8MQYqMttC7N5H9E9wKsvs3B6GcM0qS/OM7u9
      RPP+HQA2P/+car1KFEUUK2UqRZuZ5cVD5+Gw1CkyCLAy7I/uBGnpt3hDWh35qKAuQFOgtCGT
      6lMLmeeurCyX+/v7Y68pzapOs89T/dME3iyo9nRNk/rGcRz6/X5K46NvEKXbVwKv4vFrtRr7
      +/uJ9VgZzR7F/N9ud/g3/+7/4R//zrc4pgWNqIzWYRhyt90nWHsqQYXZcMguRFHE99/+KVe3
      djg5UyPyPH7nG7/GWVdwSUqk18NxnaEmUOtWEASIwlBwDL0+vuEQHT879UZWV2eJ5kPczTu0
      2sVk/CtPn+O4ELR3m9y/co3zr7+cfJean0mn5mEH6sN7uMdGwygVnhrqDxlFsZXsMe7wGtrM
      lGkj1rKMO/YV66PHySq1ZhAE+L4/Efn1wajNon4e5xTTjWpKe1OpVFKbTVF8/XRQQTeKlXJd
      l1KplATqHxwcJJfvTcMK9T2Pf/Wdv+SiM8df/PBHdLtxcIwe8xyGIbtdL2W8rBWGLs5hGPLZ
      +gNuleb5ccfgF+vb9D2P106uYHg9kBGG7Qxz9Tsu0jAJfZ8okghnWJe/cZdodjRyS83JuOfG
      1j0kBsH5V/hso033II6UU3NYmW3w1JuvjZyyCibN1GFrLA0zSdOYB6l4AB0Jp21AB1OlSBT6
      dZfDm73zOq9Tf2XVVZRNGbsOA133/jigqzYhToeifPv19Ig69dPds9XVqlLKZDMUCoUkpYqS
      L1TMwLj+RlHE1vY2f/bu+3xuNUBK3rt/wPX/60/4eycWeOvNr1AeCI9CCGxNkwXQj4asmWVZ
      VFwnXgPLpru4xv/0J3/JC7MVavu77PU9CicWaG9vx4FErkthdp6ta9cIPC9xOhNCIHudOPti
      KS1gK2FZAPS7GHsPkIZJVJsDt4jp9xCdPRbDHeYaJSxtU00FhxGLCesubAeZc6eBAovBNaiJ
      vj2x3h3tKnpVjyk0Xe8YQdqyrIQtgKGfTV6u/zyIb540npjMUqvVEgqtWB+V9UEl4K1UKom7
      hWmayR3FqkyWeNi2nTjXmaZJpVI59JbITy99zh//9GPajSWwTOi2CIXJhnT42WeXeenC86l6
      7Iw8c3Hf48HDhywtxhnV/vCtN/jXP36Pvdo8wjRpL6zyrtfnQq3NzoM9PnjvSqKrJwoxQh8i
      H0NIKr5JYfUkFEvxRSnb9zCQMLNEqLRAYYC5eRNZrCBa+xiNOGpLNjeQnodRn8HwLL72jVex
      HxX5B6A8EPJg4so7LpF/MPa1oZBUsRHDY+hI/Ux3TIy/XUXl0detlVlHs0Pr58nkL8paoVUK
      FLU51UmkbBFq41ar1YSn7/V6yQbQb6BR9oSZmRlqtVoSQzxpA5w/d5bT9TIodlQYsVuBIdi0
      yly8djMJ7Gm12xhBj4Xt6yxsXaN85xLtOzd5971fJHLMwsIC//xXXqe6/zBpw+h1ePPlFwkK
      M/Qqy/SLc3ilefrlRbq143TqJ2nXT/NwJ2Lrlx/QuXaZKPDpL5zB9yXG5p3k5DYf3MaozyC6
      bTAERmMOY2YB4+RTGKeeQiysxOx1JpHY9Av0aMVT4BSQYTpLiI6TcZISMXzJ4OdJeXaOA2Xx
      TWluci650CFPLalP6uMI8LpTnXJc29nZSUV3KVeGIAjiyxUGSK74+6zwrnh2hfTTJs0tuC5/
      8MaLWPvbg4Ea4PuIzj5Bscqff3GX7e343Q8/+pjai69w4pVXOfna6ywtznJgzvPvPt3mf/4/
      vk0QBHS7XZYXF3lzeRbZj53d5oIOp06c4PlTKxiRn7KrqLkVQiCdEp3iMTa3Ajp37+NbDkFl
      lqi5hRGFWDvrGMUClCoQDhJu2UPvXWHHAraUMh0N9ihr8zg7wHaQmiU/i0NKsZ44UQlIWX2/
      DDAMg0qlkqKEiqLp2RSyyCIZ1TQl7x5Bs5IHUspcgTvRFw+ofqlUSqlsgyDIvaOs2+0+1oZc
      O77CeSuAvYewv42xdQ9RqiBnFvANK6m/7fmpNkzXBQmh4fCLjT7vvPtT/pc//j/jTTBTR/rx
      /FZsCzNxmhuwoDl3DQz+ILKL9M1YnRhFEdL3kTcv0dvZQUQRwi1iFgowxmVZAPcuX+He5Svc
      /+Iq969cY3fjwXSn/WPYToSIU7anqxtuAgsxVFd+2TYARbHL5XKSW1N1qNVqJV6dekczPY/V
      agyNNrrV9rGzW2gTo1SdarMqYTerrWq1WrmBM1LKlHzwqGBZFl976iQbH11GCsGeW4C9bWjM
      E1XqfOfdX/DssQWsmdnUd6HnJUJhaBX4wc8/Zn2/x7Ubt+j6AcI0k3F2ul2+/+EVIqMG45A/
      NTAGRjLoza4hbQfpFIgeXsOcXYS1s4gxayAjyfdvh0AYl5ERJ/3r/NoffPPQuSjXa8x1LrH/
      EIL544+Mn72+n0sgpZSj7tBhNLwE70mCELF35MzMTMrlQUqZuDTnBZ/ov0fIJGVfYr94Erco
      ZNpUddu2zczMDKVSaeSy8H6/j+d5uScGpFMx6nVnj+BJcPb0aaozsziLy4RLp4hKtXgTWDaX
      QpeffvIpznzaWBRk+nOzX+ClMyusrhzj59duIYrDuIJWq8VuT7mTCISU4PeQctSjliiMhV81
      R5U6uCWEYdKaO41/8ypEYXyhRg74nQ7ScpF2gcgtERUqRDni6/72DtcvfsbNTz5j8+bt2DBW
      rfIrv/8t1twAET5SNHLcX9sZG8Sf2IifNMIDKfdfhVjKy1IhfxjGSVyzyJ/nNmAOTO1hpGVi
      yxnXpBMhr14FWeQsFospxzWVSaLdbieIr1vQsxs2S3GCIKC5vx9rkwaxDpOgUi7jRj496QIS
      4feRlVoc+1ussL8FC9qmEkIQBgGIYZ9Xy4J/+U//iE6nw3rXR1aGfXRdF6u1gdtvE5oOht/F
      MCRRS+LVV4cBLTLCbd4hml3UEqYRe0EAWDa94gz21josDR3wEui28IU9osnpSYswCBJXhTAI
      +PCDy+xVlpBIjN0WtS/e5cypZYSMOOj0kRVzaucc2evC9jr1hfmRIPohC5QB0zQfT+rWIIuA
      +uV0CvlV6vEs6IiaRSRd8M29nmkCHFZWbSzlm6S0O47j5KZc11kinUXK4/+FEPiBTxgGVKaI
      DCsUCnHiWw11lGFKGiYt00XKCEMM2RqnWATpqcHy1tOruK7Ld374Y7yFgcNc4LMyN8Nuc5/g
      +FmCUg2zs4+126NfXoEowD1YJ4oE0rQxgy4UHPzZlZE+qnFHpTrBzi2suWPQbRHtbmHMLyOF
      ILx7C7++NDIfm9U1/vYH71EIOrz+zV/FtC2sKBb2WVwlAvYaC3yw04QghMJcfjbsLBzsYW/d
      pVQuUzyxil2pji2abAAhhl6f09z7+6igtD6K7w/DEM/zUre4jIOsgU7JKTq/ftSrePRv1IYq
      FArJLS+dTgff95NNmofwieVba9PUeG19UzTqDTzPm4qP3dh8QNctp5XggZ+4BUdBQBSEWI6b
      tGXaNkL2kzBDNSuvPvMUH71/Cb82S621wxsvv87/+t238atxctqwOkckTMzmHn51Ec+tIPpt
      RBTgW3PY3e2Um7wOUkqEYdCtLOJ+8Sm+4RCU6ti3biKEwKsfQ5pWKgZh8As3rSXcg3u8Evg4
      BZeXv/oKb//gHbqLq0kZWWmMUP1cnj7w4cE9qkbIzEuvHr5ZRCY9+peR5zNuZ3iphWKFer1e
      KplUFrLsRPY0yD5TiDiNMCyESHAqW4c1uAFRCbd5iB4O0p/Y2rWiOn+vxqvUuipm2DAMCq6L
      qxn/JsFMo05DBnSFGffWMCHQBO5imX5zD2sQxB8EAYHvx16ZAMLg7lYTgDOnTvJPej1+9NkV
      /vCtV+l0u9wPTKShrbeMQOPzpVOiuH2NCJF7JZIOUkqkW6Izfyp55hXKuZsmhbyGgVdf4vt/
      9R6vvnQG7+CAzvLZQZjkmLay7tsDGYVbl1k+cyaO981B/jyliqUqNIXxpQi/ClSEF8SsUZ7q
      cFxns/rpcfy2jlR57hz6e+U+oZdXAnm27AgLJgSRiBlgxcpl29VZu2KxmBKkp02SK4FeGCll
      NdKyMXSjjmHS3tygvLSMcr8oNGZwrl2jX4y1Q7sHbfb2mjQadV569hmeP38O0zT53779HfpO
      OmeQ6fUInSFrJoIeoVPAnx/w9YGPHGgNsewRopQLY97pm0BaDg8bp/jJpYecNvZg7eXcb5Iq
      EUiV03/jDk53H9txqJ45g5vRih0GsS+QlAO3gi9P/aknher1emNvZzwMxuUF0jfBJOSFIYt3
      2IbJA1W/o23mcf1RdSqh2TRNarXa1BFhhmFAq0ln7w7GQRshI3Bc5O5DiCKcbpOmjAiDAKvg
      UpybR0YhJaNHLwpBGFxsWvyrf/tt/snvfpOTJ08mJ9zL507xs/dv4tmFISITX7qnxml5HYwg
      wNm8NRwbYPUP6J68AIO8oimiKZhKhsyb43Zxli8e7lNt74OWBU92WrB+E1bPIdxCfAI0d5H9
      LubOA5a+8lWMR4yyU2A9aTViHuiuAbqF9EmDQrrDfG1Mw0zuH5tWXtD5fJ3tOUwoVqA8OH3f
      x7IsOt0u3/vxj5mfneX1F14Y8d+H2CL8W2+8wv9++T6NUmWEJ/Dv3sQ9dpzAdQkktB6uY9g2
      BVewWmjH6uIgYvfYGf74l5/z1KUr/MHX36Req7G2OI/tX8Kz07lWRRx1j5SSoDxHUJ4bbpAo
      xOy38MsVGJOcSs/p/8ggBP2FU5TX72Ce19JAen3mFufpbt+hO38CpKTw8DaV1RPYyy9gDBwL
      j8K9GGIit/VkQPG/OvuiP/syrc7ZSVHtmWPcvtXijWNTdMqePXUOc8lwtBxHn3zyCd2Fee5a
      Jt/54Q/HsoMvXLjAadkd8NIGwjCTH5BgDJ6ZJvbyKtb8MsVnXsIsFqk+9zL1F1/Frs9gNOa4
      YlX413/9Yx48eECtVuVC1cDwusMxCRGfMoyygEII3N3bCNckaCwzDmcOQ8JD17vfwX+wgewO
      lSOiMcfeQYfasePYmzdBStyZOcrLKzj1uiZUT2w6FwzTNHEGwRpfBgghEv4XhgYi5S+jynyZ
      kF0UxX7lyRJqc05ayGz/XddNAt+zGySJT9ACf6SU7O3v45RKBL0ez589M3bDCSH4r37nm1yQ
      LfD6hxrTpJQI1yXsjZ6ywrRoNpb4q7ffJQxD/tGvv8VKeJCtYOy4EQZhdXai+/HYT6ckdGav
      RbvvEKzfST0Pl06we/cOs2truHcvU11di+t8TOJtVCoVZmdnqdfrSZazJwVCxP7+yulNCYw6
      tcuyEU/6RMi6L+gZ49RPWvgf1TJlIdtn27YTFifUgnJ0IVHlBlXzuzdwSjvY3mZ1+djEMVQr
      Ff7Z7/4mbxZC8DXf9nG4GkWErX2C3a2kvwqch/e4cOZ0woodq7hJojMJTLqO1Ksfw964jojC
      qdZp0mk4Dsx+h74zQ3dzJ+3FaVr0F9bobm+x/PpXU2GOiZJjis2Q6pMAQ6n+sglfnwToLsMw
      vML0y6b4QAqx1e/Ks1O5PEOs0lTZ4kIZxRqeDAJPAqXeHVq843to9YB9/ZomIeL0Mx0/XtxS
      pULzYLy/ut7Ob331Dea7e7n9SqmFLZvSC68TeB7e/dvJe4ATrsnKsVhr5Hke15u9IUUXRqrs
      iGbNcvGLC9gPbudmfdO/OfIae30kBm3fIbh9I/3OLdJvNkfam/T3RJBgqfDDvFz/eZVNK2xY
      lpVcHaoWXakGD2MvvkzQkX/QYqrNIAxihFByCsN7fvP6piLGsqeajgjqXmMhBP1+n88uX4Zy
      CSEEleVl/u7qFVzHSQJYxoHrupRau/h37iAEhPt7sHoiRn6GLLAQArNQxCwU6X7xCc76bZYs
      IIp49eULSf8cx+Hrp5f47t02fhhiNLcIGidG2k0Z++wCnrmEs36DYG4FecRcPblaN98j6ngg
      ykRmkdadTWrVGsbsgqbXT8tfefahrF1oHE4JIbDa7TbdbpdypUwYxunzokDCIIzxKDHCKjOC
      HgSuDF9fFoKP26z6BCgVYPKDRuk07YUhjETPrPPzeW1lhdfkToCBvlwl2VUE5js/+AGdWpXK
      8eNJXe7iIu989BG//+u/PvECjdt37/KwvsDs6ecQCNrXPh/2acw3zsoJnPvX+YPf+53EjVtH
      ltWZGisXP+aOaBC5Fezdu4TFOlGxPprcVoFh4tVWcLbXkaUyGAaRXYid9Y4CUmLubWDsbtGl
      nJxIXVEj+OQG9ZUt7POjF2tkNXJ5au1JbCyApfjy1kErNtgUSxhmP6ZqOQ5qh4EQgkqlkrrR
      pd/vH4r8R1VjjetfXl9TfL8WVzDURg3vTBaaLDCpThU+mWeME0Kk9P67e3t0bYvKfDo3pmGa
      dOs13vnFL/iVN98cK4ddvnETc2Yh6ZshI5b2biMl3LuzTpi4DEjslZNEnRbhzgM82+XDS5/z
      lZdeBOD6zVv89Mp1DoIQz7DYljZBdS5GvJKH1dzA6u0PWSJhgIxiDVEYEhYqhKVGvAluXaRn
      zuAaHaJzFx45ea0YnLZiY4O2ORundhmANCw8o0Z3fSPeAGPWVN8EjwqpxFjqJvRKqYzne+wf
      HGCOMRZlwTTNJL+PyqCQbK5W64nlwxkHWQqg91f/NzGaaUH0KmWs/rWOzFltVVZzpLRK49pX
      rM/f/PJ9isePkweFep0rV67wVd9PNEpZsE0zdgpTqSPDgAtfeY2DrR2emp1jt9Wiu7hIoV7n
      4ZWrFJfqNF59ls0rV/n5xY+TDXDl7j0eLp4cshX3HiTIJU2bYE5jg6Iw/hFGfCIIgfA6FDYv
      0115gciwCMwijt8CXQ6ZQkDW/kBixHeP5YCShb8MyTG1XZWgaJomBaNAr9s79FICHSkcx0my
      FahnWf74y4BJ1D6vbP7iSKIwJA6yHy9YZTdBls3K64cQgo3NTZqGQW0Mde/s7fHS6tpYFsjz
      fe63ujBIYiWlTHzc+7v7PH/uaW7fv88t28ZyHI49P2QZFs+ewegPZa9ysRBfo+QWBiMff3JK
      w0xOAoiRUMgIo9fG7DYTtamE+MqkI19dNJ64hsKBgybUGkkfnxQrPbIaQRAkmpLDLnPIxuMq
      HToMQxw7nU6SW2cSHHVAqm09PfmRIGF9hjCOtRnXjyzoFvA7GxsUaqOX3CkIuz0WZvP9WMIw
      5M9+8DfcskppNiA52QYnlLYpUn0zjKSsEIJ6pRJ7TjIgFGpTM0q9BaNji5wynigQbj7AE7E/
      kW9Wca9dRAReikhk13WSenkceHad3s0bSK+Xa6c4rL4820mCN9nCuvove9v5JFCGHtWgCsbu
      9Xp0Op2p8vscFWIdtgRDIOXRJnlQ06FyhIJ8G0IalLUb4O7WFk5OCkIFbr3G7fX1sfV85fln
      +WrJoLL7IAnyNhTjJgeIXavhD9zLRxZdI1R7By2EcmbT+6679GSE5dS4gUjYeO4MgV0DIYiE
      iXBdrE4Tq/kAs/kAa39ryL8w3GB5MPGyVMNkt2nQ/NkvaG016W6uI8eoYbNwmFtGLln2fT/O
      xvwIDms6lVeZE7rd7peu1tRPq4NWCymOdgIIIVLyjno2Fgkyf6vyOuSVGZkPIZLMyeOIhBCC
      tbU11tbW+MreHn/8/b+lM3csjt0IQxw5COARowHgCrrtNv/h7Z8AcOfuBjz72qA/KrQ01fGB
      6wWQhH0Nfldjdd3YaDZgjyJh0QpqiHXFFknssIOxEhDNLA+E3fy5YbQHIyANmzazdPyQg797
      n+e+8TWcjOenVH2fVE/m/cgGyAqM4yBLKZW3p6KK2QxqXwao3ELK2KZYsi+z3UfZ0Do/X3Uc
      elHG41bDLcM0CaZg32YbDRYsuCklhpBYtoWYqfDeRx/QbB5gnxgKsH4vZhlaW1tUl5eonT4d
      G8A2t4cbOwxjLUwUxX5FQoCMcG5/SuSWCJZODbVBSb8F4coZSveu05G1+L0wCM30NbChWaDU
      3EPW5uOAmDFgtvYIjMlXyCZNRyGN+Tp2rT56Qh+B2OZKZCpwZWwnNJ5fSpnK76nYn8PyeT4O
      KCNOtVqlWq1iGEacTlHLmfm49efplHXQ2ZtxoGuHCoUCYTZ7hCZxWI7DreZ+koluEiyVB378
      YpAN+uQa5dOrtMtlygsLAOzcusXGp5+ydfUqlmUyf/Jk8n2nGVuew/09up9fpOhAvXMPI+ir
      AROaBTwqWHtaanI1D1KCYSIXV3DD/bGIJ4VJ1y9i3bmGvX1vWC4T2G5s3acvKoeOG2Ch3OXE
      194YcX8+6rrnbktlJofxEneiThQileBKhRF+GayPQvxCoZDacK1WayQt4eO0cRjyTwu6D1Sv
      18Ocn5soV9TWVvn4k09462tfm1jv/EyD6GGHvh/w0Tu/wLRtugctOn5Ir38RwhDLEJx6/bWR
      8URhiN/cpfvFp0T9LvbKCezZBSLPQ1y+RGffQ3h9AgmRXcLobaKu1E6sq4DRbxPZBeySRb8X
      gMjXXkXCou2XMLY9SnufxKlUOl2oVQkX15CWA66D8CNykpSkIfBoHFvEdIenRRTEqV4S1kxz
      ZJzEkqr3Y2UAhVBqArOmfgV6fk/F+z+K8DwNqD4oXl/P39/v96fOJTptO4eZz+FwFlHFFqt4
      ZS/wJ54YURjCvXu8/q3fPLSfa6uryOvvEdoF7jdOxnk467EGqCMl4fYm5+fKuZtNAM7aaQoD
      y2qivXMcKstL7F+6h2ctgRWXDf0IZ+Mq0i3iF+tEbhmzs0e0sY5ZLECxgHOwj+fOje+wMIiE
      Q0vOQl8izTJGK6DkXYd6HdkNkWIKFsgwCDTcCj2P5heXEGbMglmuS+XU2bFEJu+5lVeg1WqN
      fJCHFEKIlJlfbYAnxYOr9m3bTiXTUsgXBAGtVuuJnTbTWLr19id9WywWE+fCvufRDELGK0Fj
      ymXk3FqTB4uLi/zGyWP8xf07KfUm6rJq0wItK7duJBSDSzRG2heCqN3CN9KaqqAwQxAFuFt3
      MGdCIreMaG7Rc2YhkJjNPqHzCNc+DYR+KWw6vonxsEsoSrl9Gv3WZOvuA5zCxwTdDkaxROnk
      GYxB+sWgfcDWR+9j2TaR72O6BWrnn8aYcLP8yAaYRPmShRexv4xhGCNImZfi5FFBUWHTNJO7
      w3TKrGKKVdpx9Y36t1AoJPcLjBtHHihEyeqL9b+LxeKhEW1KOFen4ts/+xnlUydzy8ooondw
      QHDQ4uHt2zzc2mJ+bi4hKuPsC7/25hs4psF37u0iGVqOhRBYQY/yII9/NjV96AdJynP9G1U2
      Ox+hWUBEHcKlkwS1xcGGE/GPYRIaWvr0RyREUhiEIt/qPVo4oma2OH7hGUora7lB705jFqcx
      O9BgCcJ+n+aVz5l97sWxfUvNxCSjj/KfUcEdiKGhR4jY21OxTo8Dyp0i76pUiE+Zg4ODFPJD
      GlEU8gVHFIqllIQyzltmaciiEDqr0szOlz6H2zs7bMiI4hgLb/f+fZ6dm+fYs2t8r3XAX370
      IVavT9lxqBeLNKpVXnrxxdwwzzdeepEffP4ntIqVVD9Ep4U7MGJmA/+vXfwU+/ipkfEOfsmd
      C9PvIPb72K0DcB1kuYLYC5L44f8YsFDxWHn5ZZx64/DCg3kwXRfhuES9LmaxlMuZpLaRoq7Z
      Z1rNg9xBcQM69VdU+ahgGAYzMzNJcI5KoqXz3GEY5iJ/euwxJdJvdBk/nnxIMiVnvs8ioS4z
      ZPugYGd7GwqF3L74vR5zwqDZauEWCtTdApXVVQrnzhKsHmdrpsHnYcCf/PVfs7O7O9J327Z5
      6djCUJcvJdy7zsJsFeXvpPenf9Bivx9ijI3+E0OjogZBYZaOe4yOvYDRPYiT4R4iYOaClLjC
      p2Z0saM+hgwwZTBSJm2ci2gYexx/9cJ0yJ+B0upJDm5dH2sfGasFyoIQpptB1wAAIABJREFU
      IvaR0ViNbHbno1BbFVCibobP5s5XiK9Uq5PsC3rakWnN43mCqSHii8CNDHKrwBZdQaDXp0DP
      C7q4uIi8dw/ZaKTKh0FAe2uLjTt3OfbKy3x06RLnVla4uNekNNOINRumiWnbRIUif/KjH/FP
      v/UtqtV0ljMRhUPP1X6PWQfWXriQO+Z+p43X62FvbWZnI+5TqwmUU6dGvCGG9gpPlrC2HyCd
      9FVJ07FAktfXivzGW6/SbDZpdbpsNTv85YfreNiURJ8zCy73d7s0PZOGE3B+oUB36Tx29Wiu
      1sJ2cJaPc3DzGqXFZcxyWt166AbQFy2bgc3SovHVbSmPYj1W2eIKhUIq5biKyFLJZ9WlGeqk
      ybPOqr/VhXSHLYZyhzbFMFWjDpZppfhwIURi7XZdNyUH5Fl8/YFX58zMDMumwV4QYA7YoDAI
      EPfX+cZTT8G583xx4wbnz57lbz/9lMLaalJHFARsX71Gw7Z48czp3MwRuuOe9PtU6+MRJQpD
      LLcQ3/wzsPIKzdobHCKACyEISvMYIvY7ktpz9a/quylDnpkXmAI+2woJsAHBxl6fWrXKwsAl
      PAxD6pVL/Nk7lzgxX+Kf/8PfpLm/z627G5w9eZxqtcrfvf8BN8IA44iOdmalhuG4tO7fITjY
      xy6VqJw4jekW8jdAdtB5oAQ9VUbJA4r6HqY+VSyPipMVQtDudOj1ehhCJH72Oui897gjWJ0g
      h900E18BOhSgJ2mA9HSJ2fJ5LhJCCHq9XhIH/PU3vsK//eEPmT1/DoDW+jq//+qrLMzPEwQB
      y0tLfOdvf4x7Yi1OXx4EtO+vc7Ja5Q//wT/AGXOFLMBMvU50fx+jWIK9HUpPjyanVX2yXRer
      WMBdHFJvvd5gbwd2g+moeRSO9fw0I59ffarO733z61iGyQ/e/gXf+/AeIQbPnFhMWchN0+SN
      ly/w1JkTscxlWczNzjKnOQZ+/ZWX2HjnPbrLJ46c/8dwC1TOPBVzFP0+zVs3EFGYzg0K46m/
      rvozTTOxwOplVeifvgE8z0uQWUdKpSNXm6TdbrPfOkDI8QiZR2mz/VPsR9b7NLuoMTs3SvH0
      csrIp1SaStifxP7of6t/bdtOnRimH1BwXXzf50+/+10s28afnaFgGHjtNqWDFr/7yissDqy6
      k2B5YR5xYxOKJeygS7Ger2yVUlKancW4dG0iAcmDbFnfbVBobyJ6O3TtWaSV1uG/sGTyu9/4
      GuaAvf2Nv/cGZ44v8mCnyesvPZfLdjYG/c6zs1iWxbdeeI73PrvEeqmBWX8EtWtmfInN49zT
      RL53uBp0nM4767euDFVZxFMxuFEUsbu7m1B1pdpUuvxer5e6rO+oun2VdUIZzTqdTtK3PA1V
      Fhksy0rYl2q1mrrNUV2Od5iqVwhBuVxOWMYfvPMOC2fPJO2ZUYjruty8fZtuo47baOCaJt07
      d3hmfoEX33oLd8o0NX3PA8NABj4zJWfiNUS9/X0ic7xOfNopl4ZFv3IMq7+P4fmEDDeAEIJS
      wcGxnUQ4t0yT8+fOcJ7x8uVhMDvT4JtvvsGfvvtzWpXqiCp3qn5n2jZsJ30/QB7yT9O5LOjf
      6PfoVioVPM9L1Jue56VuWJnmVspJG0S3Eyh7gJQS27YnZqHWx6lieBX7okBltNCt3OOIg8qy
      IYRgY2ODzSCgOlBLSilxBjfcv3PpMyrnziGB1t17fPP5CxxfWXmkOfc8P74L994t3LkSvYOD
      gawh6LdaXP30MsdPn2DhxCpupRLfAJkD49ocjwOCyHIx+22CTJlev8/mZixoLy0tJca9cWrj
      ce1mwbIsfvvVF/nbTy6xWV/AcKa0IUyAQ7dRXkf0LG9ZVkCpQtU9uUo+UCySCvdTNy5Oshqr
      7xRVVog96Rt1CimZRG26SfEI+sIotke/vkm3PUwiCvomUt8fHBwgCsOFkmFItVDg/vo60UCj
      E/R6nC6VWDl27JEJTqVcQvgeYavJDQFXPv0bosY8lmHQCNvcLa7Q/OIOp3e3EcKg/+A+oTAh
      CnHPPBNfHJHT5jgWSecSIsPFzrmh5JPNgM+//RMcPP7b/+w3khvuJ82dboScdPqXy2W+9vQ5
      /vTSNVjKDy99FDiSRBEEAZ1OJznmIe0GrcIolZYn+63y4Rk3UGVhVhRcXUxxmHCmZAC1QVSK
      cnXC5PGeep2lUimh/Op5GIZ0Op1crY+u/dCf69kXWp0OlhbjGw02wNzsLP5HHxEtLNDe3OS5
      V187UlKy/VabYHcLY2Ye59gJuq0uvcWzADSbW1Cq0arOcDEMEQLqpR1Wn3uOh59+zNbP30Za
      DoZlYToO4e42MCp35J1ysZ0hQsggvmVSM4r1hYsfBVj0RtTj404BfQMcBrZtYwHThcRMhokb
      YFKHFKXXPUHDMEyERLUhFOWdlqdXFNh1Xfr9Pv1+/5F8i/Q07MpWUSgUEjlExT2r/riui+d5
      ia9R1rbR/f+6+7ImSZLjvC8ys+7qrp5r59xr9prdJUEssFhABoICSBhBGsxkpmeZTD9JZvoB
      etGDjM8UaXiAYBIAA3EQwBJcHIs9sLtz333VXRmhh0yP8vTyyMyq7h4M5WYz3V2Vcaa7h7uH
      H+Nx8IKPkJzuMqbTqSde6qPZbAKzpe6xmE7R73bR7/fx7994A7/5+GM8YyKcFZkiquDw8BC/
      /s1v8Y8/+CFw/nk0z57PqnxSEHsUA4Ozy1xBSVagYjGbIYpjtPo9TBZN2LPLqi/RIkLr9h3A
      AdPmWbhGOILNGAOYBIveM7jibsF0l5dUrXYT2zt9XH7pNbz3h4/xh9u3CqGVO70+3rx2rdDf
      OpV+hqMRZlGM40jjlpRZA6oUltFohOl06gPhQ45w6yB/s9n0/jbkVk1IBujpyOVdhfyObPeU
      nIvPx1qLwWCwkjOH2hIBzedzNUGAMQZbW1uYzWaYzWa+rhj18+Lzz+Pd738faaeDKEkwH46w
      cz6LkHrtlVfw6ssv19K16CR8/4OP8IvffohffvYQk/2H2HnzdTTOnvfPoCzs8OFtnLuUPXu4
      P4Q9daWwDnfpBSTnnwX+8D6mEx0h5Wdp0sYLr76Kl9/+QnZissAaA8BdOL9s47L/bt+5izN3
      7+LC+fOlaw5Bt9NBMp8dS17zFQIAwkeeBBI3qEi0liq87rHGx3HOqTJ7qB9udgWKROBcFtuw
      t7dXkC+52JIkiZoWki74Wq1WqQ4xmUzQ6XSwWCx8OVWCbreLr3/uc3j3d7/FvrWYPXqMM1/6
      UmHNZchP+3rnzh3817/7Dm5PEyySDhDvoBvtId4W7gF5dJZqLHAWvfOXkU6nGM4yO35hbBMB
      kwNMxwYuaWVmIbtAlGYnmIsacHGmYAPkPBfh4b09vJpb/5zYJxOtZtnYvnQRH338yQoBSHwJ
      ve9ut4uzicG9xaKyck0VrLTWEJZPTHtZPAcnh3VMmaS0UiZp6XRW1ZdzzvcxHo/9qUQEIPso
      3AkEyumQxSekOxBQ9cjBYKCeQFcuX8blS5cwGo0wm8+Dfkp8bOccDg4O8D//4Xu4v7uPw1mK
      62kfaLD+M7mi2DbSb7aXDYC42cSgZTDdfwg7YKJXmiL94PeYNc97n5xO+gjJ2Z2Me+8+xL67
      4IdsjB+iMT/Axc9/zqfTqcPwTBRhlFpMphM0mxmhcUZQ1UcURfjLL/wZ/v4nP8fo8oulY1WB
      Sj5VVg5AvwHVoC4RUJTXfD7fKIOEMVkGZuqDc8AyP6VG4JaVCIAS6so58f7ogoy/RBqTp47p
      9Xqoqg1prcWDBw/wne99H/9yax830h4cWCbk4qr9+ABgpxOkaYm+RLpRFKHRasM2hV/RvRuY
      uhaSyQM400DipkiuPg+3kxFJ1B8g+egm0s7pzIrUMUieu4reTuZ+QSJiFXHf//QzHBwe4Ic/
      +Ql2J3Oc2RmgaVN85Z13VvyvQtBqNvHll57Hd2/eR3ym+sIwBImmla9jpy1DfOssiX2IK6q2
      zGaztSO7uImV7P3c/MqfS5JkpXg1iTcSuOWnyurECW06nXqr13SWpYPsdXuFwuBVQM5+Nm7g
      5qwJF9fPtOwmYyxaJcElXDQ7cxbxzUdIz1xcruVgF53TbZgzzwKLBdBowvWWvkV25yw68YcY
      ppknZ3ThPNLtU/jwNx/irTOn0WhXR3UZY9A/dQoffnAdj86cQ+vKc9gdj2Af38Wrjx7hzOnT
      WKSL3NztYAzLtyrg8oULeHN3H78dj2A6XfWZKoi4xYaLMnXEDm1x9M86x9JUrIpUEkiBXnds
      urTa2dnx7hXSRYMupmSfvGILgc0Ref/woLb1ieZLJmDnHBpJAzAGewf72D+sTn9O/cxmM0RR
      hG/+uy/ir1/aQuL0mAbnnOfoNP780QO4TrgmrjHGX/d2zj2DwXy/sNf26pvAc6/A9gewO2cK
      yE/to5deQ2O6i27Xwp25ADTbuJWcwu7tu7XfWZTEiBsJ2hcuI2q2EG/vIGm10M2ZB7ncx1FU
      8Exd6SeK8Pa1V/HSYgg72ywOZUW4lQSgyfch6xD/l8QxkiiTCeNo1cX5OIAQu9Vq+SAYjbgo
      hTnNk35yfyQ2OTg4tJrNStlfrolbmZIkQT93vR2PRtjd20VakswpTVPs7+/7O4tms4lvffVt
      /M1LW4itLn5ZxAWlcz4ew3VKsiuYCMSMjDEYnH8G8eEyzsDFEZxfki4Wuk4P7efOw129Bpgs
      dsD2d/Czn/82S8NSBc7h/V+8h/YLryz3z1o814oLzobD4RA/evdX+NG7v8Kdu3eDgVZRFOHP
      rr6A2T09qVgVFKxAoZJFVeKOZnHgxMA/q8PdZRvOiUlBbrVa6Pf7HoHnJUllgaV8yu3/UlSi
      8ZqNJgwM9uf7K9/Rv06n4wNzrLVeAZxMJv4eoN1qod/tZXcZqcXwcFgoGMIhiiL0+30kSeLd
      wOMoxrf+/B3M05/gu58cwkZLP57WbBenXrwEwyqlTMfj8uLQBnBMR9h+9nmcevddPGgXi96V
      cV2XNOGeYR6nDnBxgllvp5ah4tbvP4I7ewkJy+wwe3APb1x9Hp9+9hkOD4eY2xS/3htjfuYZ
      AMAH1+/h1Cc38OUXruCCUkOh0+ngTGxwWMOcLCHhyEu1c9ftRLMaab+vA5xYqA8KnOGXXVTF
      fXt71Q+e2svLNEJgTS6XJ18IZrMZms2mvyH2oaLIzKJkhWo2m96atFgsvMlUWy+tr91uYzQa
      YTgcwhiDv/3zt2Hwz/juJ0Mfg5uaBizjuHYyzrIrzyZAc1UWz9Zp4OwyesyYYm7Mo9XbCrtO
      0N833v8A9xcNNE6f4g+iPz7AnfsP8LPhAo3BDpxLEV04szSfnj6HPefwD5/dxfZvP8AbF5/B
      1Wev+EvYJEnw5Refw/++9QA4vZ5CLCrFh7lHXRttqC2HOm058sdxjG63W7DXk2fmYrFYcVzj
      fVCCXg4U2CJFHEL88XiMZrOJwWAQVM5JzGk0Gr6iPD0znU7RbrfVE2Y8HnvxKwSUZ3UymXjz
      4re++kWk9mf43mcjpCbBotHD4e0baF95Dmg0YZIEOxfP4/DOx5g+ew0IvMuV0ECT6cZ136Y0
      hXucaHfwLz/6eXajawBYi8g5vPmVL6LV6+L67z7AA9tC4/RqbqTJuUv4+WSC1rnwxZgxBs0z
      z2B8+hx+OjzEr375Hr517SXs7OwgjmM8e/kSzn12A/fXPAUK8QAx89rTxBn6nW+GNlHuTAbA
      36KGxB/txODiWK/XQxzHmM1mnjOTqLC1tYVut6sS2Xw+x97e3ooIVVaelfaB3BsoQJ/yD1Hf
      5B26vb1dSABMznjUtwzMIfu+c27l0kzuN90XUOqXv/nqF5Haf8b/vTFGaij1SV7oNmmgcfFZ
      NB4/wjRNgUQhAGPgWO2y+WiIQxvDRavW8JzNFQqF+D3Lp+ysQzI+QOvBdcy2zuL+zTuYvvIW
      +vc/QWqzPXp5NMLd67fwKOqjoUWrGYO4118JVQyBMQZJfwvzXh//68PreDH+FF9/5+3ssnO+
      vndQ8B6AH2ES6TkXkPK/c66AKPyZ0FjyGVJa/TGdu04Ph0OP/FRsT7Pjkw/S/v5+wX5PxyUR
      jCb/R1HkxRc6DagNiS7kAsKd7ngfxAC4UsxPKGNMdik2m/mTTe4xuVakaYput+tFrW9/7W3g
      Bz/D/7k+KSBj9s5slvac9RWN9hGlC6TNNsxsApc2cXDzBnbv3cPhHJicf1E1mxrkd2H5CWHM
      MsU6f6+dRzdx6Z2vYHT9E6SvXcPjT9/H4JVX0Oh0gTjGR5/cQXT6HJJu+eXfumCMAc5dwEcH
      ezj4p5+iGRnMTp1bXwfYdAJ0ycP/9hODforwzzjiE0flCiZll+Z9UVvuYLdYLNBsNn0fo9HI
      y9Dcd5/6Juc3Qnbt5pZDmqaYTCbo9/v+ZNje3i5EhnFXbRJ9KF8psPRK5bERADySt9vtldvh
      0WjknQL39/d90oDhcIhvf+1LmH7vx/j1p8XsDHZ4iHHULoQqvuoO8c23Xse93T3s783xq5s3
      cb9zFoud5+Eq7iaW7wwoCEkmPxfSFK1OB845dJ99Ac5ZdM6dR9ReOkiiv6Xu63FBvDXAw/42
      TH5fsG5Stkr/27o2+RBHDR3xIQWUviME08QV5xxSmyK1KWasbi6lZdSS89I6hsOhd8WWNYu1
      eVKly/F47JVYLv/TaeNcViGHXDnoWT6+zFPE7w8e52lP9vb2cP/+fQDwOs5gMPDjkqXoP37j
      y/jSy88iGh6ie+dT2INdYP8xTLsoDl57ZgfPXrmMt964BrQ6uNc7j8XgHCCyb5TtQeGEWB46
      yNKjc2YWIen2VPNxVZ7+TcE5l+kcppjAoC4ETwAuBsnPQ0hd9jd9RtkjWq0WRqNRIYsEiSjD
      4dArltzFutB3/qcULcjrU/Pc5KfPZDqBmUXY6odlT1rD9vY29vb2sL+/Xwju4XoCPUdcnnuy
      8r54SVr+PREtfUfzH41GaLVaGAwGePz4sX8v7XYb3/7GX+D69eu4fOlPcOv2bZjoLL7z8/ew
      t3sLtEHNwVkYkyUceO+jP8AMspvfZLiLnVnu5m2WFiBC1KlJcLB9DjCRr1/AIb5/A/FoH9G2
      7twhxeiTAMd+sc4CxnhXChJhq8DcunUrSJpcEa0jx/NnNTMi56gk0wcXxzZva2sLi8VCfX5r
      eytLq5Lbsck7VWao5lyJODRZekL+QBzSNMXjx4998RCeslHuA8U/U7mp0Np4GyDzh4rjeGWd
      xmR+TmQVIpMrteXxD+PxOHNJdplrcjO3eFlrsb+/j//+g1/g3uAikoNHaO3dA+Yz/IcvvInX
      8owVNP/haIT/9v13MT+rR131/vArXHjrCzBJQ83U4MstnUhpOxoDXi8h4HtSR3qpDIjhPznw
      F6CZCDnR0N9kxpxOp8EYXY74PPeoytFBrtMpmo1lRJIUNTQl2RhTyGStmUU5xHGMfr+Pvb09
      n6HOOedFHtk/z18kIfR5GcFwoiDuqhGfLFNFxEK6y8unt/BgniLdPoNRfwdXdm/g9Wuv4czp
      0zjIK9ZT36cji7sUXAMA8ylMmiKzDlnE7ZKAGZggfpwk0Nzr6gLBN17XgqOdDqSQ8lOAfHYo
      0IVHaGmuz7QAut0NJtxyywLYfF5l8+NzJDm7zkuiNVD76XS6kr+IOO0mGbIXi0UtT1hNJ9Ke
      4Uo3uYr/7TufxzfaEzx7/2N0HtzAf/r6V3Dm9GkfiETiabvdxn/+i7dxcfwo47LWonf7A5wZ
      38fZ8QNsX76yMuaTBOfcCvffBFaS4wJY4dylk1A+41YdAN6WTkXzNJBWIQAriLXSBtmR7+Aw
      2F7mlSFLD58PH0cqojzaTIpNcv3dbtcj/mw2w+7uLra3t71Nn+4fyvaqbE95W+0I5/vE9zhN
      U3W+MtSw2Wzim1/+Ir6aX8hdvHjR6zJbW1v+3TnncObUKbx1pos7+xM4E6PT7+P063raRQ2q
      8OdpgJXkuJo4owHn8kD4gswY402IlPtTPh/i2PSSeZYFOYfZfIYRyxdKpkjKWidNqBrQZRXl
      KDo4OMBwOFSVb35PoO2PdLrjc91UFNAsR4SkfI78fcj7GrmObrfrk5tJSxv367965RL+ZPYQ
      jVsfIk6qUyc+KbFnXfEyBB6rOPfXNlwjDGnX57IpIQshP70cuvipszBKRlvm7hCZCLCucHEW
      xzEGg4F6Q0xj8FtYaktuEySmaZkr6IQh2Z/ymhJUcf+6QHu7qFEOVEs/WWdMekYyF9LVjDG4
      dOECrj5zGlfeeB1bV18FsMqwVuYNt7wtPkFCOI7TJZHIHRJrNA6vmT5pM4lTkjPYcDgsyLea
      SCCJiU6A6XTqM7Vx+Zq3Gw6HhXoFZKeX66B25EpBBMOtTETIBwcHHhl4tghjjHda48ozXd4d
      57HvXIZMZXuutZHvUSY2pudIhOMFPcjMSuJqv99HNEHB2qOd4P5vGbdWoa8cBY6611HdCfFN
      LRMrKGnuYDBAs9n0eT8l8vNTItQXiSZ0ZyDFDw4kl4dkZg5UfCNJEmxvb6PT6XjFnOZHP4fD
      Ifb29gpmVSKaJosZSNMUDx8/2kj5DcGC+e2URZSV6Ti8reyD9n0sREjOfADgxSuX0dh7WDlf
      DZOedh1AzQpBENIHpHmUuzHwz2azmQ9WaTab3t7OfejJpEhtiXMvFgvPdckFgLIuEGKGzK9+
      cbljmizaR88NBlmt2clkErS+0I2ytdbb6TWYTCdYpAtErigGctDEBe1z/zzjpTJRgGxHyjw/
      FeU8+AnN9YXpdJqlKc/3QzKkTqeDz589hZ8dHiDub5VLBE85wksIEkDZyUCbxH3giQjokons
      5NPp1Ncd1opbtNvtgvMZAJ/jn/vqGLMMeqHjWSKtRE7KTCdPBgpaIYTpdDpI09Q7n2nr5T81
      mC8WGbqazOc+pHtIKBNtsvUUb5O55YcjOCnEWt8ACoouP3WpD2ut31/u+Upt33jlJXz0Tz/F
      bq9f0PXK1vZvARIN0avEopDeIIkCKNq2NWUtTVMvq0tO3estr9nJJZk4HSnHBFowPCmpk8lk
      xTdoPp97Mcg5h8Fg4NMo8hgAsouTjByCRpzksazIsjWLPQqdHGV9RsbAmSITkMhf1Qe3GCVC
      hpftyK+JmBjvv9Fo4GtvvIa//8W/wp6/XAhC/7eK/ECAAOoAF3Xob3n8lplQOQFwsxv1kSRJ
      wbZOVhoqPCEVXB4lxudIbgvcSuRc5m7c7y+LyxGSUJE+Ij7NY1SDKIrQbDQKrgp8vWV7WBdI
      DJK6SpVJsEqU5ZFsvLq97Ofc2bP4L3/1F3jv9x/gX+/ewKS7hXhrkJVQqljLSZtFNwXVHilf
      XkixrHNSyOc1JU17nhLv0mc80zQhKiEEcaiQ2EGliiaTiQ8zlDlA6Q6ATg1uCqwCmiMhJ0/V
      wjl1FcJqIMUWjetzHUzOiYMkHO37spto2rfPXXsNL49G+PTmLfx47zHMzukVkahsnKcJVNam
      2ff5d9rvpKyWJTml47hyUrk5E1j6xyRJgsFg4OV5Go+ep0B0mjtXGOnFcYTmZr/5fI7Dw0Nf
      hO/x48fe56cOkZNvk3UWzuSeifkYdfMBhfrml4AaAfHTlq9dppjRlFveR9U8JE70ej1ce/kl
      vNl0SCdZ3EY6ncJOJ1gc7sOmi5W2TyNBJBpHDll7QkCKZKPRwP7+vqok0XO8bz4ury7DkfPw
      8NBXeyGxyFrrOTQFk/BTi2R4CqUkAqB+qTCfMcZHbZHSR3PmyW5DQMEyFJ1G7W2+BnJh3iTT
      HfXFTxNgqczKG18+d/4Zv+mtA5q4J5kJF53e+dyf4tGPfoK9xxYv7mwjhsN2v4t3b9/EngXQ
      6SHeOb3S59MCwRJJVccpgMKxHEURDodDWGcRoeh6HOL6NEan01mx7zvnvKNamqaeAMii5Jzz
      qU3oedIlKBil2+0WLCVxHBcK8wHZy+WcniMyIRqPlSZI07QQb5whWYQ0XcBgKQ5VJdYNASmt
      UqnnnJyvLWRFolt4zXRZhyNrfcvv/vorX0KapgVDwYvPP4fJZIK/++GPkSaNLOb3j6AsOxbX
      rEEChMUcibia7E+fDYfDZeKnknVKxavT6RQK7jnn/K0sWW44InCzH2V7I45PPkAUPD+ZTLwp
      lMv9RLhcVJAnknb6Ub3iRqPhI8+kXJ7k5Y9ILOI+SZvI/nI+fpzceiVdqOVJoUFIxC3TVcpE
      W3JZ4UC5Xv/q9VcwHk/wywe3MTl9HjAmq4H8BMBbJxHe+0KNsDoij6YQ+1NAScXBrUR0M8xN
      ltKf3rksDz4XSWSWCXqOYoAJEabTqR/DueyyjIs7QPGIJ9+fslTsUtmk2F5erZ4jHQe6vJOx
      AURI3HVDji2VXvpcIq52k06fa2vi4lMZkdHfMp+SBiERGgBeeP55WGvxzO4efvn7DzBKLR6c
      voCoUa8I4HGBRrzGmGJy3JB8HuokdBxLILv9dDr1GR94vTAeYE6cG4CPseUVV2ge8/m8kErQ
      OrcirxPCUjIqDdF44QuJDPJ5XiqV5wri+0Ccl/rUYpPpvoOYgTYvInB+f8ARnRRkTUEluT+k
      H/Cf8pTnZt9QW/o9pIxzoP5P7Qzwl++8jTRN8T9+8GPguZdw0hDCYw7BeADO1UIyfB0Zklyg
      KcMDISwhCDnKkacocdZGo+E9SbnYQ+INVZd0LvM+pFOFLx7IENAYo+bgaTQaGAwGXpanZLka
      8vE+5S0p3wsiAtIzZImoEGMJ6Vz8uzJjhWzPPwvFR/OTRo7FiVoDeeJIAgi1m0wmcCUJ2I4b
      qsTOggikQV3TlRwoiiLvjkxuEfw5aW1JkgSj0cjn2Zdu1JSBgSw2xZcfod1aRXB6hohGyrvk
      ctHr9fwdABEBERN/ueS3REQlCYSIlosOlJtIcuOyfeXz1EIrOfeWIgohtXxWQ0yJ4CRKloW7
      hvqsMm+naYpf/+59vH//Ecz5P240GYeNyqSGgL8oEjkoMZTkGCTkbkkZAAAYAUlEQVT+kAzM
      KzlSnS0g4xiEkCSyaNxnNp/5dIOhFyQVQ0LiTp7bhtwguDWDkIJqGnP5mXN/l4tgxP3pboHE
      OzIQxFHsxUG5x5qeEnoHnMtzUUpTfrmIGuqPP8eJ6Li8W3/6i1/id70ziJ97uToXzxOEI82F
      XsDKMWMyD8uDg4NChJR8jnz9JRfjccA85z4p0to8eCX4lZz/+TiauzSwPK00ZRuAR36agxRz
      APjiHEAmdnHkzwjQIVVEFo508vKqjv0+pPDyvtcBORctbnsTmC5SRK3qAhpPGhKNK9SheonQ
      1los8lq0SZwU5E7uCs1FC0oDzoF7LfKjnj7jeoK3QEVZ3ptWM/MU1bwiDw8P0ev1vDjFxyEk
      Iqc3ztlJKefcln7y04B8h/b391VRJ2ZIypN+EVHxJLtyP0gslCef9h74vOVnmjmw7F1XIXzV
      icJhcUKJsY4KCbC+z0YZx5EbTO7Osg3Z+iX3Jy7K3SG4HGxMlidoPB5771C7sIiMgc3Nizza
      i8+HIr62tra8uCSJQHLAkTiBOFESYtLayK+ee2+SOETtiDhJp3HO+YRa+/vFegRSPuf7pL0T
      rjdo7axziAVzKQM5pjy56PNQX55BGYP58cUJHSus7Q0aOpKNyUra8Jff6XS8LsDDD9M09be8
      vE96jpTikJ1cbjo3JfIKkRrQaQAUHexIpOFHfZqmGI1H3r/f2aJfC9ch6DJOs6pol0h8DaPR
      CKdOnSpUsqH2oTXIvjTOLvWdiEJsTDniaows9FyVMk/Ppe7ppIDSQtl1QFo3CMjOT8ogV0I1
      92e6wOKmSNIPSLygZ6fT6coNaNlxXJC3AaQ29T5GdGMp10Lc3zkHGAPnALiiqY84LVm5uGKq
      zYdbh+hvUr65WMQJht9a8z2vAmltyxv6PrXTItRWEn0d4pB9xyeYIe4oUCCAusdi2fFHm0TB
      JYfDQzhbna2r0Wj4pFMACq4M8hTgMnHohfD7C/5Cnc1ySDo4X5K11Wp5kcZngjAGi/k8u93O
      9Qzqg/v/aOun22K5X3zPuOxvrcXu7m4BMbnISKcIX48UjzjhSotPiCloc6xC8E0IAQDipxP/
      N0+PDugXMw4OxmVmzTjJRIo6+SG5z8zh4aEPiJd+/vxySeNyzjkvbvk5kfwOIIqyCpbWZU5S
      1lk8ePQwizCbz7Gg0wl5uu28bBTnzmV2dvqdiLQKqHwrNwPz8FICKUppp65Edm5V4vvHCYpE
      Us5QOIRO1rpiEkEcPZ0UsOINCqx3xBI452DhPKo75zAejUvLLhGQ3T1NUwyHQ4/8xpgVNwhu
      NQq9AFmgg8BnDkaWUpsQldp4scNklS3neb1aOAtjIkC5TDPGeOWXB+looMnuQD2nQ7+G3CrE
      iYNbtKidLArIrWacQDmhSVNnVVTbOkQQr0EsIXDsf/qxDhFq4L1BJUcJvSyp4AFglzyR55Z+
      0or1gjadclECy+LUPCTPGFOw6dOLK9t4bsXxc4ZDEi3Nr0DG4a1iFuTrjE2UJ+AFnLNIUdxw
      6ZvP11ZlSqb1kQgm064A1eZojvRl6eDlZ0RAXJThcn6dfvh3dZDwqJdfVQaBTQkhqbvZBRkT
      5PNicuRwMKa8qLGcLOULnc1mGI/HK4hPsLe3h16vh16vl4k3uZiSsBSLGtFa57KoJGP8swT+
      hVtB5ACinICt0y9+pIhBayEHN1X5LNmPMhm9zFLDn9HenUQM7Xa5qn/NDUMbow4cxwlwErAR
      YTrnMru7tT78z0C3G4eATI4HBweFQnLS4gHAp1NxzqHTboMypRG31caKIoMkTpDEsZqpjMvy
      hv6ZomtDnX3IxtLNqFVtiRuTWMdPL94PH4cjrfYc3z9pkaJntJvdELHXWU/V98aYZcnTDcDV
      uERbhxg5FKpEVnEbIL9MiXOLstMjkSiwPFQDAEAhe4JmKZHzIvt+s9lEq9nKlevVOfp1WHjL
      DQEPD3QudyeGK+gpXFauAzR3Cs7ZBHhcAe2LjEKT+6z59K9DtITc0pv1uMHrGUc5AGpObRNx
      qLREEv9JnceEsMatKGLtdtsjWFUYIF12DQYDHz3Fx7Ku6LxGMb4A0G611DTrUj7nv2uOcMYY
      RDYqtK27eZITr9O2DKhPrqRKJA8hq3TO0+YriVueHscFXK8AsPEJcFKESaCGRMrN1jZTvmy6
      UCL7vVZcmoA+p3yfPNYXyI48a112AxstEYBOAroXqLs5ZeKYfFF1ISR/r8uRNQjtN+dwm8w3
      9Fmd9a+zJjmWcw6JyOP0tIAaFF+1IZq4QsWipdzKOSvvO1OiIwyHQyRJgmaz6Z3OIhMhiqNc
      3FoquxRKSH9rCjxZYOoch5q+sa7oIz/TiG0TQuB7JIlUk+sJyohDI9p1iL8O4YWUd7tYZDfR
      NU+Ck+b8BIlEyrqwskARHwuUvyj6W/tH7ciDsiCzO7ci/kglURtXI4jQfDhoLzOECFWB6JtA
      2XtZ553xvd2kvQQtEo6D3CMTRYCzqGN3eVLID6xxExw6AqVcKRdeFVTtnPP5Q8mWLWV2slos
      Fgtfk0t7mVzO5fGy8ntOrBIJNKSouhCiZ+qYLjcBuVY+Tw3xTgJCJ6rECz5X/mwcx5lLTElC
      iOPYt3XX792hqwavKxKFPncuU2yNMb6CYJkMKr/j7scF5YqJCERAXGyitltbW4Xcl9T3CqcS
      YgIXQ/iaNJGkjj5Rpo9Ucfuyk43vmUaEx0WUGiPULFRyrpE/AXQ4Fh1kA+JfqRCzLqzD8TKz
      Wwxjikey5BiamGKMWam+oiED98GRJxFdWB1lzSEk0wwHdU6EMsLh363D2TRiJTjKuy5jVKF1
      8r2QF49PAxzJGQ5Y8zYwWj3/Qker5LDktCWDUIhbpzb1bhgalx6NRoVs0xzKxLayOdZByjI9
      g58sUncJKdLa2mTf2rPaOte1VoVOy9C6+bNRFMPVqHemjVkb3PLKjK+trI+NCGDdjeNtNOAv
      iKqaa9/LRLGkCyxsCmct4iiczZmIp9/v+/he6sc55wmsbH5V6+DP1LUEhUQYbY/L5H5N1wmd
      KGVuLyFOrs0pxBg0iCIDLI6OL3VxT+5bqL+N6gMcVZ4McWGqBMnNqXxMay1SZ5FEy4S31FYG
      lJNbAp8v+fprY4eqzpStt+xk4OKLZiGr6rtMpNCelUQQElXKoIpJaSJdXVyI4jiLxXjK4Mgi
      0KagHafdbhcHBwfqswTWWsxzbk/fURJYKTbRnQAVvZhMJitVaOI4RqvV8spuCKjvUMrBqlNC
      cq4yZJM+P7xdGdRRwqv6rDNO1T5pEEcR7PgQaaMBGJOZRU0EE0Vw8zmSR3eRAmgYg5kD5lEM
      kzQQtTuIWDWafJTCj+Wnjn3mYKIIRhG7OfxRCEAqv/yFh25WCaFjF2UpRpiyK/vibcl/nipC
      cpdrYBlPTBaiKgTQLBy0JjlvCXyOdcahftcRwapODu1k1X4Pzb1q7NAYFy9exFvDIRbzA6TW
      IrUW1jrY1KLXbeO1P30Nzjk0kgSzPD+Tcw4P9vZx5/5nxXHIC6zww2CJ/dknNw+GcFevlc/5
      xo0bG8szzjkfMVXGFdSBBdJSSOTe3p4qUnDfew05JKFwoOcpZQpldpPysMy0VgYhouVz5WPL
      tjT/Mqj6PrTndeII6MTUCnuXtaur+EvCSq2IkHPLPVzYNOhIv46eIeEff/hjPLp8tfSZI4dE
      GmNqhTxWAYkh1G8oO5oMC+QKDn0eQgDKUif73ARCHFWaQyWEzLhlbcrmsC5iUAr5KIp8doyj
      Qmge/DSKo7gQ0VWXmDZB/HXgSAQQMtnVbcfjba21hVBIuamS04e0fE4UkkD481Kp2wT5+E9t
      Luv0dRRjhDZeiDAp+8bBwcFG1iBtDLmfErn9+8z+qrGyJwfHcg+wzgv3oofL5EA4B1iD9PAA
      xlWbv+h3TS7msQWa9UWTUdeZuyZyhNqHxqiDrPSZ9qwMt5TEXjY+uZhQ9roqZTlk+qyjbPOx
      j3LSnjQc+QTY5IiyziElj818c9I0RSNO1E3n45WF6WniUOh7+rvuy9E4mxxH62td3UjOTVP0
      OVLVQX56hgwC60DdgP2yd/L/LQGsC6lI9xGZrKCcMWaZsUERcQhCMn5og7UAEfmsFnqoja8h
      ouwntdYHDMm5aUhZNnfZXhIA/8n7CMUHEzFxuV+2r5OVmoNsX/d0OzEoKNkV4xoDOPfkCGCJ
      hA5wy1pa1qY+DYk+z9WXLZGJv+CyAHH++1FkbqCILFoaQm2udb+vw13LOH5IX+LWL02/KhNn
      JVMIechKfeBJgramIOTfP9ETgHN6IJdJXVFOp6NaApc9NXdoIHwyrIvsZeJTSDbOn/LrDPVV
      xjVDiCznUGeMOmJiCEJMJNSuzuXgxqCNqfUrnzOmlr79xAjAGONTY8jNtM4WAuz5ZZOGBPyf
      RMZyBN0cOAHIddHPKIpLy3JKq1NoHPmshniyn7pctw5XLlNcNaYjxbN1lOQ6c+FzKvRZst66
      p88fpVgHTY7SEEZGr2qipe74YypUHNkoewNH0MiYoOgpEYN0IW3dGtGHvltn3iGQzIbmVqdA
      x4lCDe4v57cu43viIpDLs7xkF9cOEVZrbUngL17jOCtjnACRhEyCoe+rEDv0O0Ehs12F2FJ2
      QkjQRC/+rBbBF9rr0Gfa51XinQrELLiIxeed/+SOj4WY8LIh8n6eqAjEOWA2SQvHlN/QEc7b
      WGeRxHrNAO33so3ehFg4ImsIEgfMnmVEUSYOaelcQmvR5ngUCFmHQuNWzemo86A+JZ4E/5ZT
      kziDJ0QABY4NA2MAF8dwFkGEoXZALg65LPkurUpuCv2kFCs+zXnFnOoSgfasVNyrZPWQzrIO
      cF1E2wP6LLUpGzMqJBg4ilhTVzfgz4dEujUG9SeBTG6mjaWdcivzzX8+sRMgS0eenUoW+XEl
      XkZo4tZZlh4vHAdrjPEVHynQXss8J0Fycu1ZGYEm21K7KoKq83K0vnl7rX85bjFVTLWzoiRw
      SehV3FxTwk9CZ+OMS+4PJU4Gcke7rBROsT2fM54kAdgUxkQZ0ufT0Lg/32zaQLo1Noz7h8QJ
      XsqUQCK2tnnaM3W4XR3EAFbdNI5bV5FrTpIGGo0k968Kt9NOJgBBYqDvZB/0cyOxZ3mwh6EE
      8WlO/B1GUYTEWYw//n15t0dxh9bnufpi6eWnLitmR9QZ4mSAsLg4C7iAuGTgc3uSnlAG6/jz
      8HnUFR04Qsn28nheh0OWcVcNedvtNmaz2UoxEW2uBHVOSz4G74f3QaCdlFrfZe7Qvn20LEtb
      thbOcCiTCH0v3d2dO4GbYMk1jDGw3vYDWOsqq4VI6wc5yVlnCyZTazOtII6Ohkw8SSx9v1TU
      y7mfBKkX0O+a6HMUJbFMRKEqOnWr1Gwyh1pydskpUniuYiwp+4fGksyXIgUJ8Y0pmp6dc1l9
      gOOW0wD4C6FsMJNnYa6ndK4oeEz0SZ1FFGVilM3NqJL6gTDH0cQnzYIgxRXeV5nCx/vRlDLe
      X0iUkHPTuD/fxxWdSWSX1saswzDkXlSteRNYh2kdx3P8W2OMXij7OIDEEp8xzZYfg1UbbIxB
      bOKlG3UuODoYlVOXgUQcDYFCL10jIPpccmX+OUck4kTrIGGZsYA/Q9/Joh2abqWNw/unvVgX
      QiLROqe01t86pxkHWpsm/j4xJdjrAXkMAH8pIW6mcfUIEYxxcDYvdBetf3SHFGiaJ30WaqP9
      Lbk8n7P24jViCUEI+WVadt4PJRoOrVPru2rOVcDnpI2xsbShnMbrzktetlJ/a5dJXXdgL6/n
      nNs5BziHaM0kqXwDTF7sOTam9LYvJFIA4fI/oRQmWjC8Jt9K8USb0yKv0SVz5peJbfSzQGhQ
      9icyWKQpmqYR7C80Jh9nHcmgzsleamhAhR4gdMLjAOcyHW/jE6CKmvmRY4xBmlrPIQx7RhND
      QpyEJh7iWvR92ZzomZDOUKXU8fahZ0KnAP2e2hTOOqTAsg5xjTVxJrBIF4h8ET/mKZsWb8pp
      LyWRUmkr6xwSVpuBP3NcwNcu94JwA0DB5UET744L+WlOLlt7lhZE5sup08G6gznnfAYJg3rK
      ZJ3vaQ1lokYVgUiE1WTikELJ24QsR7yvJedfEnosiEZLyEt9OefyivcWMIB1KeLcOkYERRDW
      jwwy3vtkHAxD74YkAhjji5gDq4h/3ARA+5ss0qxMpywswWFd2c2XTUWyYrvXjn4aQyKUPJbp
      c9kuNEeJeOusgesCobnwMVqtlq+LVsZMjDE+haNzWVpHsmRphEVH9bKDfH+NyXE4m0uKLMFA
      nIuW88UiswYp+UcBwAh7eNl8q545VnBkLi+aLY8T+YHlXiTWOYwnE/S6XYxHY1X+W5cA6Pk0
      XcAgj/PNP49M2HwnF1pWfojmR3/za/BQ3+ueWlVtOWdqNptoNBpotVorJVPLFE+DrHJ9tpal
      tYvayT0gcSF/gDr0c5zbhf/OGL0W8JOCI+mXJDWweR83EQBAEuU2+slkiiRJVhApm4vOWeUC
      6V9kIl+hkZ7hlRh5fySLkhjD++SnknYUSo5chmhVL0A7KbR1asTgnPOF/qS1ITRX6jcyJlNl
      jfH1E0JzJgc3ugxMbSbC+Dk5t1QmjYFzFqkFMpvBZhaYOm1CzKFu+6AKfAIILyErkpdfNfH8
      mlJpWs5Jl8lCSMq/1yjZOhc85ugI1MaX4/Kfcly5Bg1CFoy6OgXF2/KsCyGuFSLU2KwygaLu
      EC1xxfn/ct1qFbK2WfBOEj/5LJhVotXy+7Ad6CS4PoFzLssO7Y9PliYvJGsDRc9I6oiDvLLm
      SOgVRWa9yPSC8owEZelQQki2CcfTiKhu7WAN4eXaCwo1MidBev8yMUDZy+cEYUyUnaSB+Wlz
      opOX+1G5EpuyFrVXBiGGssj1QwODpCIQ6iSRn/pPJEfTJhD6rsCdSvzNvRhEiiVcrvhnASQa
      wch/9Lmcj+bDcxQoa89Po9DLCVk6JEGSXuTM0p4fUrI1KCi0xiCnhBUHNOtcwe28OIaBRXVF
      zUwWD8c6h+bH2/PfDVtzHThJvaVQIywk6/Nn+N9ejhUWEw0KfSE/sp1DFMUrViFS/qruAjjC
      y4xpxw1VSKI9K3/nUNCNcstOmruMx5GuL5WNR5eDJopgmQdkHMeey5tcz1hpW3dNNfFfM2ZY
      Z/0BRWuyuZdvcExr4cR7Po5TgUsTSVmHZTIwTYYTRh2rB6CXSuLjaYq49qwcQ+oMx805qsQq
      SZRVfVEbICMEC3skvc/AALki7YDsbkBE0KWpZdFhWavKfvM1UVBTFRJqIlfKA3QEUw1rAIBN
      06y4Ro1TcR0gXW2FAMqOYU05K2tXd7L8BFondZ+Uq/k8+XcneYRuCnJ/oyjK/ZzKSxhVQRIn
      wTKy2Zh5fMWaYHKrEowpFYXU922ESASod0EhoBMtZGCp+puDxIWkDreUipyGWBrnq4v8Zd6X
      ob55e/k9n6MU4Z5mYtBeZB2CIAJKGaJoUDCzbshFbX77rCEisCoqH5ciW4ancqxV/ah4entc
      sHazGmGhSVUtOrRhVWm6NdGKcwMvUwZSFGpzsM4FrSZHhZACSN9p6zmK2JYkCfr9vi8jS+bs
      8Xis+gEdBSlJgXVu6dBI+sEy/kNft//MubUJUNuXKqOI9jxnuHDHEBEWUvjkKUGyuUaZsq02
      ad5vGYLJrHIhInAuXcq0rHC3fJ4ikWissooqIVFRch9tHZ4wNxB/kiS7be92u0u387wSDh83
      MhFSlx6ZCAhSVvaUxKIqBgSU6r1hcMxupOml7LQMlaAqSAH597UJQHu563CrkB2/ykpS9Zn2
      vTyGVxT5XO0ycH5enVanUIaVJ1oipXyxWBx5Xn4ONcS9uiLbfD73NZDH47EPhwwZJ9IN6vWG
      5pr1i5V7HBovzIA2IMKyvaC9qqNDsX5qEUBI3qv7bOg4lEqrfEb7O4QQURQhSRLM5/OVkqkS
      0jR3JnPwN6SNRqMw9zRNV6rKr7MP8gVX7Ql/rkzn4c9x0W+xWMA5h1ar5QPheR+dTifbmzwP
      q+gsjFxl37FH/JxYpUZOIKtMCHq/NcYrBf7Oa7yvSgJY56UTcO6ZzSlswpIWmzKoOi3In6gs
      KVYBMdlchsNhob/g6VGyFu25MnGorF0V8OcoAwQFwfd6PTiX+SdNJhMkSYJms4lWq4Vk2sDh
      8LA+QtYBk12oQTBegwhgCRHk/Ff2rybx14b8RFh5Z4zI/h+6zXua2FofcwAAAABJRU5ErkJg
      gg==
    </thumbnail>
    <thumbnail height='192' name='seattle metrics float' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='seattle metrics tiled' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9d5xkV3nn/b2xcuwcpnuiJkgzGmVLApOxhbGNd/GL8TrAvoZdzO7CrtM6
      7GvvrsFrbIzXBmMBBtsYGViDI0lYFkESKMeZ0Ux3T/d0DtXdlevm8/5x696uqq6eIGQDq/7p
      05ruqnvPPeE5Tz7PlWq1mmAXu3iBQv52d2AXu/h2YncD7OIFDbX1j+mp08QTKaR/hgeZpkG9
      Xv1naHkXu3juaNsAlmVy7JobkKR/ji2wi11852FXBdrFCxq7G2AXL2jsboD/y+DYHo6769m+
      HAhPPH8bwN2d9CuG57p89GMTvOHtj/COd59hbsO5rPvqFYuFdcv/QwjOz9ZwPX/+/+YvJ/js
      Q5WL3i9cl1/7H0/ye59c5FtdtTv/+AyTGx4ATz20zJ9/ufDc27rzWR46b1zRPSsXirzhbY/w
      1dM1ABzT5u3/5RHu/NzqJe8tr5S/9Q0ghOA9H6tw8HUrPH7a+labe0Hh9MMrPL6p8KHfvpa3
      /NAACAFCUCqaLK9bCOGTZ71mM7/UoFJ3EZ7HIw8s8cG/XmFhxaBUsvifv3+W8wsGpZrb1n6j
      brOwYuB47WS+OlvGSMY59egalus/s7Bp4TgehU0bgHLJYqlg4ndBhH0o19ufceFClbolmveY
      zBf8+23LZWHZoGH5m6NStpq/C9Y2fDqxTJeF5QabFQch4HWvG+eaUZ1G3abScFlb2xqTEIJC
      waBQtKnVtxiF2XDI5DTu/loBAcw+u4EX05lftUCItrkDqFZsGpbH+oaJ44l2L9BzxfyKy9Km
      xxMFj6MeRHcVq8tCX3+MiafnuevzOj/48n5GejQeeWCRd/3ZIhFF8Mof3MvP3JHlP//iUzgJ
      haV1h4/89jV84vMrnN2E4kqVl10d5/RUjXf/4Tle97rxsO2NxQr/7r+fIR5XyI3neN879oXe
      vQe+WeC2Fw0wfe8MT8xZ3LJH41fec5p9PSpOPsPrjmv8fx+ZI6rC7a8e423fl+e//ubT1FyZ
      pQ2HO3/3OvZklfBZDz2yzmpW4szZGvToGBWDn/3VpxERlYop8f53H+fvPz7B3pfs41XX6Pz8
      u87yZ797jF/45cepaBo1FD7+rqv56J+c49U/eYziY3O87wubjGQV5jYFn37/Sf7+kxN88r4y
      AxkFrS/FB37hYPj8/rEM5eUKjif46sNFXv49OZ4qgOs4/MKvPYmhqSytO3zsD67n7k9Pseiq
      PH62wW/+7OjFJYDjCD706Sq2vbOglCSJ9/58hum/HuCr+6I8XH/O9PCCw8D+LH/6rmModYO3
      /txjPDZj8Mm/W+RNP7WfX3rrPr74pSU8ofL//tQebjqeJSvbTBQl3vHjo9zx2jHe/6tH+dc/
      tIcbjqX5wLtO8MO3ZcO2v/ilBW56yQg/99aDbJwpsGwG3wjufbREWvHoH4zy5fvXAaiuN7j9
      Nfv4b/92lE/+9SI/8RP7+aW3HeTr/7iIram8+fVj3HgiS5/mcWauXU05N1HmidNlJhf8z7/5
      9WWuffk4H/ud6/iZl6X4u/uKXcdv2oJIVOH13z+IqrR/96Nv3M+d/+sk+1MOVcPhb++vcNf7
      b+D337mPqtlOj5KicGJA4al5k7MFwbFBn6/Lqsqb3jjOjcez5FSHM/O+5CnLOnf97nH64vLF
      JcAHP1njVz5SYXbRxRNgWIJbr9X5/H0msajEkb0qh8ZVxocU/vxv68TqgmvfmWbXtr48rCw3
      0JJR3vLTB0jLLk+cq6FIMDldQxrUeMNrBpk9VeDj91X4b28aZW16E9cVSEC97oYqkut4mLYg
      1rKaqiIxv1Bnpl/hNXcME22GduqFKmdXXe6+exGEx9nlAvYbBkn2xLn5qgQgUBSYnKmhmTqv
      f+0wK1MbfPhLm/zGvx+jslDG89rH8RNv3MeJQYX7vnyBrxUgGpEpr9u4nqBYcYhkZCzAcT0a
      NQfbFeBJ/Pp/O87musF733+O4ydybW1KQTi2+Y/wBJYjEEa7ChbgZbfl+chfXaB3LBVS3/yZ
      An/6tTK//uZR1meKoZ30slt7kZvtXpRSR4cUbrpK46d+OM5d/2Rwywmd3//LGgf3qixtuPzd
      1w2+8IDB7/9llb4emc/fbxCP7wbRLhfry1Xe+vOPccebH+Tzpy1ee2uWn/5/xrj/K4v88V0X
      eGSyRr4vxsyTq/yH/3GaZ+ZMkGB0f5onvzLLG3/xFHVP4tarovzrtz7IX3+zjCT5pPN9d4xS
      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
      mrjVIPeKS95yftZPVe5uNWPeAelHDNupXwhBLpereoEKIbAcGynUTkBoYjBsgVlUIKWspGrS
      XVuAaNoQ0+y6qgZ/q4HYeH3dtNeiwzcazKoed6eQgyMFtnBcv6JN9Ltt9kLd/fxQ//y1kCb9
      fb2ItTmyRoJ83mdwa27Q4HgsXo307H1W5fS12UD03h9cJmQ7NrZjY1X6QbGkyrCrljUMg7BP
      rqxWAa+89/RDY1v9GJuXoWz03lvdV13vFT9115mqsjFG4DTNuNuDt/26rjcTgNr5U83vpAeq
      DWl0Vfa+pEYNgfeGfjOE3/+N12uuB1t1seNUpkCJO5iErN9o0woqytpWUX2ZnnPheIKOviFu
      L642XR+o6LOLxSLlUskt17QOqHg+SrHh4tlbBuoHlVuvv9bDm93d+xyb3aMdOdp7rYIKltDK
      /b35WVxstMvPqTA/bxn3nW9N7m+s1/tdrcerBWqVXUS5nvpNc14K3ggbcZh2pk81DFUEs0Yv
      yVZBU733qPgGomm1Raf/vagSXeP9bcsmlc5i6jo93f5RHxrr9QzbTa+F1uKEakNjGRV2EuqD
      FG8WbKqd+2723ryDuJ21Wav7NNbte54tm2rq7qkUC3Veul4C2MUuPmzYXiTZXeziA4I6LVAw
      GGyKvLaLBw+VjA6o2k52cX/gGx59Fw8XjQa0Xdw/7IpAu/hQ44EQgLAFswsF5pZKOD4xOGTJ
      4v2pil5dSlKpEquZ9rIB2pZDvlTTdghHsJgqs5FS6p1frFFIl7gxV5/44/yVWibzs79Yo1Cw
      uHy7wIX318g7gnTu7jIUbgfpdJmZ+SLr2QZLqiPIFByEI7hwLVNfSEoWl0s4G/TB5UtrZMsO
      5y9n685fu5xG9crN6+uk8oLzlzNMT6WZSzuks/55Hd739F0jMhn3Gdaytq8u7OrVDKVKY+2y
      w9xikbLdnm4mk7XuapNuXaJsb9Dbe4n1mXX+3TdnSE1nuJ7VGe3UePdyluFkiNXlAmfeTfHa
      lM3HD8f4xxdm+P7b66QLkgNDQV4/s0pnd4jFxSLxuMHUdIFyzuLOfIFUTnD9vQX++uU0hyZj
      xMM6V88t8Qd/dofPPdvP9Eye7oTJrTsFSrky71zMMjgQZn6pSMQq8/pNh/6ww9sXsgz0h/j7
      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
      abhW0rL8XRNAuKOXJz/uJrI7+thH0YDkwAAAe/bcbe3twc0PVps4Ne3BR3kQUlL2BOIK6NoD
      aUNnb5Ljva6XqCMEJcshW7AQQhA0DebWCsyn2xdh+uIm/dHaItLU2dJ+CdsRlEplMpr7PoJm
      gH0DcUJG+5ywMxyoG8Q90QCTve177fZHddLZWixR4YiW5bVcLlcdOaFQaMvBlKSU/ORmzcgQ
      M3U+ORKnkM+SzpVI9vtnebyXyJVs/uKt2erx3q4Qv3YiycLCArlCiYmxkfvu9Tm9kuO/Pn+p
      enxqvIevf2KCG1cuUCTE0YOTbdflOA6lkqv2i0bbd8M4fW2BP/rOu9Xjrz45wdefOcjly5eJ
      RCKMj49vqQ3bCaz1/dcu81++/Vr1+F997Ul+49lj3Lp1i2QySSTSvtFyu234xrdf5r/93SvV
      4z/617/Ol546wtLSEn19fSwtLZFMukzjvrGotfV1Llx4/35V3xZWZ2/x/PM/fKhtmF1YJr26
      cZj3+wlN0xgbG2N9vZZcQwpBYZOk25ttNMpl0hRK7c0shUKBqakpzp07Vz1nlYpk8xtH/96s
      DcVCoWnB3QpSSu7cuUOpVGJqagqAXGb9/hFAf/8AUjzc+JTXblxnfWUZ+yFGfQsHJDOLKw/t
      /pqmMT8/z/79tbiipUKO2zMb7y7bbMbMpNeYmrrTVhvC4TAjIyN1i+NyqcC1G1PbboNwLN55
      4y1KbY4vTdPo6OhASkksFsO2bW7fnro3WqDOUI2OIpXMiwsLs3R19VC2bELB+xtxQdc1BuK1
      hVtXxL3f4089y5FTn3wgu5OCAZ2Rnpq40hN3Zc6hsX2MTD6YRWUsbDI5mKge93a44sbAwECd
      KBWOdRALp+/qXpblMDY+1nS+Kx7m0GgtQ2N3pQ22bXPq1KnqeV3XMXRX5bmdt7M4fYuCZbOe
      LhDpql+jDPR0cHyypklKxCMIIcjn8ywtLWFZFktLi0RCobtfA+zi3mO7a4B2kVtPcfPOPGOT
      B+iIbIc4BVcvXiCUGGB0eGBbbUivLpEuwZ7B/m3biQrZHMFYdFthNEEyNz1VTwCmaW5rk/nZ
      +ZosFzY0Dvc92CBTJVvwyrWamNETNTk1mtigxL3HarbEi+/XFuKjfXGe2L+9KA5CCKxKLoBQ
      qH3tx+3FND85UxMrTk7088TBBxs49xc35nnx9LXq8acf28fjB+6tXn8zvPreDV49d6N6/Kuf
      PsHhMf/91HUikOWTgGEzSCm5slwjgHhQY6JD4+qV81y7Oc1nPvt5IsH763KULdm8fXO1ejza
      HeJYMsz5M29y+U6Kf/IrX2nKK3yvkUrn6gjgoxM9nBzp5LWXn0eanXzy6U9sq141E7SD6cU1
      vvdGbfBpUnB8JMHp06eJRqMcO3ZsW23YCi7fmuf/vPBe9bi/M8KRkR7OnDnD4cOHOXPmDMPD
      w0xMTNy3Nrx7aYpv/ejt6vHR8QFG+zs4ffo0iUSCdDpNf38/4+Pj988ZLjkwxOJK+qFGXb5+
      /RZrBYGU8qFtfp+aX6Ej9nCTbxSLxYe6+V/TNIaGhigWi9XvBw1d14lGo5U8EqGqneG+jc7z
      F85hGkGch5jdvH+gn0AgsOUMJfcS40O9hLag+74fCIVCBB9ikm0hBDdu3GBxcZG5ubkt2QLu
      FcrlMvl8nlKpRLFYrIr6/x+fRQN86Ej8lAAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
