<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.22.1117.1841                               -->
<workbook original-version='18.1' source-build='2022.4.0 (20224.22.1117.1841)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='regression_data1 (regression_data)' inline='true' name='federated.0ibg9u21a1zdsg17cetup0v5alcd' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='regression_data' name='excel-direct.01ljpp91bfys5z19oljxb0lazwx7'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Owner/DA/Classwork/0 Activities/Projects/midproject/MB_House_Pricing_Regression/regression_data(labeled).xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.01ljpp91bfys5z19oljxb0lazwx7' name='regression_data1' table='[regression_data1$]' type='table'>
          <columns gridOrigin='A1:U21598:no:A1:U21598:0' header='yes' outcome='6'>
            <column datatype='string' name='id' ordinal='0' />
            <column datatype='date' name='date' ordinal='1' />
            <column datatype='integer' name='bedrooms' ordinal='2' />
            <column datatype='real' name='bathrooms' ordinal='3' />
            <column datatype='integer' name='sqft_living' ordinal='4' />
            <column datatype='integer' name='sqft_lot' ordinal='5' />
            <column datatype='real' name='floors' ordinal='6' />
            <column datatype='integer' name='waterfront' ordinal='7' />
            <column datatype='integer' name='view' ordinal='8' />
            <column datatype='integer' name='condition' ordinal='9' />
            <column datatype='integer' name='grade' ordinal='10' />
            <column datatype='integer' name='sqft_above' ordinal='11' />
            <column datatype='integer' name='sqft_basement' ordinal='12' />
            <column datatype='integer' name='yr_built' ordinal='13' />
            <column datatype='integer' name='yr_renovated' ordinal='14' />
            <column datatype='integer' name='zipcode' ordinal='15' />
            <column datatype='real' name='lat' ordinal='16' />
            <column datatype='real' name='long' ordinal='17' />
            <column datatype='integer' name='sqft_living15' ordinal='18' />
            <column datatype='integer' name='sqft_lot15' ordinal='19' />
            <column datatype='integer' name='price' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.01ljpp91bfys5z19oljxb0lazwx7' name='regression_data1' table='[regression_data1$]' type='table'>
          <columns gridOrigin='A1:U21598:no:A1:U21598:0' header='yes' outcome='6'>
            <column datatype='string' name='id' ordinal='0' />
            <column datatype='date' name='date' ordinal='1' />
            <column datatype='integer' name='bedrooms' ordinal='2' />
            <column datatype='real' name='bathrooms' ordinal='3' />
            <column datatype='integer' name='sqft_living' ordinal='4' />
            <column datatype='integer' name='sqft_lot' ordinal='5' />
            <column datatype='real' name='floors' ordinal='6' />
            <column datatype='integer' name='waterfront' ordinal='7' />
            <column datatype='integer' name='view' ordinal='8' />
            <column datatype='integer' name='condition' ordinal='9' />
            <column datatype='integer' name='grade' ordinal='10' />
            <column datatype='integer' name='sqft_above' ordinal='11' />
            <column datatype='integer' name='sqft_basement' ordinal='12' />
            <column datatype='integer' name='yr_built' ordinal='13' />
            <column datatype='integer' name='yr_renovated' ordinal='14' />
            <column datatype='integer' name='zipcode' ordinal='15' />
            <column datatype='real' name='lat' ordinal='16' />
            <column datatype='real' name='long' ordinal='17' />
            <column datatype='integer' name='sqft_living15' ordinal='18' />
            <column datatype='integer' name='sqft_lot15' ordinal='19' />
            <column datatype='integer' name='price' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U21598:no:A1:U21598:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bedrooms</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bedrooms]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>bedrooms</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bathrooms</remote-name>
            <remote-type>5</remote-type>
            <local-name>[bathrooms]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>bathrooms</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sqft_living</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sqft_living]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>sqft_living</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sqft_lot</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sqft_lot]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>sqft_lot</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>floors</remote-name>
            <remote-type>5</remote-type>
            <local-name>[floors]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>floors</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>waterfront</remote-name>
            <remote-type>20</remote-type>
            <local-name>[waterfront]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>waterfront</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>view</remote-name>
            <remote-type>20</remote-type>
            <local-name>[view]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>view</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>condition</remote-name>
            <remote-type>20</remote-type>
            <local-name>[condition]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>condition</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>grade</remote-name>
            <remote-type>20</remote-type>
            <local-name>[grade]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>grade</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sqft_above</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sqft_above]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>sqft_above</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sqft_basement</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sqft_basement]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>sqft_basement</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>yr_built</remote-name>
            <remote-type>20</remote-type>
            <local-name>[yr_built]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>yr_built</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>yr_renovated</remote-name>
            <remote-type>20</remote-type>
            <local-name>[yr_renovated]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>yr_renovated</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zipcode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[zipcode]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>zipcode</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>long</remote-name>
            <remote-type>5</remote-type>
            <local-name>[long]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>long</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sqft_living15</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sqft_living15]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>sqft_living15</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sqft_lot15</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sqft_lot15]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>sqft_lot15</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>20</remote-type>
            <local-name>[price]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>price</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='None' caption='Bathrooms (bin)' datatype='integer' name='[Bathrooms (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[bathrooms]' peg='0' size='1' />
      </column>
      <column aggregation='None' datatype='integer' name='[Bedrooms (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[bedrooms]' peg='0' size='1' />
      </column>
      <column caption='Price Trends by Periods' datatype='string' name='[Calculation_1312799340457521152]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [yr_built]&lt;2000 THEN &quot;1900-1999&quot;&#13;&#10;ELSEIF [yr_built]&lt;2010 THEN &quot;2000-2009&quot;&#13;&#10;ELSE &quot;2010 - Present&quot;&#13;&#10;END' />
      </column>
      <column caption='Price Trends by Periods of Time' datatype='string' name='[Calculation_1312799340667265028]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [yr_built]&lt;2000 THEN &quot;1900-1999&quot;&#13;&#10;ELSEIF [yr_built]&lt;2010 THEN &quot;2000-2009&quot;&#13;&#10;ELSE &quot;2010 - Present&quot;&#13;&#10;END' />
      </column>
      <column caption='Decades ' datatype='string' name='[Calculation_1363746311673958404]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [yr_built]&lt;1910 THEN &quot;1900-1909&quot;&#13;&#10;ELSEIF [yr_built]&lt;1920 THEN &quot;1910-1919&quot;&#13;&#10;ELSEIF [yr_built]&lt;1930 THEN &quot;1920-1929&quot;&#13;&#10;ELSEIF [yr_built]&lt;1940 THEN &quot;1930-1939&quot;&#13;&#10;ELSEIF [yr_built]&lt;1950 THEN &quot;1940-1949&quot;&#13;&#10;ELSEIF [yr_built]&lt;1960 THEN &quot;1950-1959&quot;&#13;&#10;ELSEIF [yr_built]&lt;1970 THEN &quot;1960-1969&quot;&#13;&#10;ELSEIF [yr_built]&lt;1980 THEN &quot;1970-1979&quot;&#13;&#10;ELSEIF [yr_built]&lt;1990 THEN &quot;1980-1989&quot;&#13;&#10;ELSEIF [yr_built]&lt;2000 THEN &quot;1990-1999&quot;&#13;&#10;ELSEIF [yr_built]&lt;2010 THEN &quot;2000-2009&quot;&#13;&#10;ELSE &quot;2010 - Present&quot;&#13;&#10;END' />
      </column>
      <column aggregation='None' caption='Price (bin)' datatype='integer' name='[Price (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='4' formula='[price]' peg='0' size='50000' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='regression_data1' datatype='table' name='[__tableau_internal_object_id__].[regression!data1_26A14A7984284464BBB8B91BDC9375F8]' role='measure' type='quantitative' />
      <column caption='Bathrooms' datatype='real' name='[bathrooms]' role='measure' type='quantitative' />
      <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
      <column caption='Condition' datatype='integer' name='[condition]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Floors' datatype='real' name='[floors]' role='measure' type='quantitative' />
      <column caption='Grade' datatype='integer' name='[grade]' role='measure' type='quantitative' />
      <column caption='Id' datatype='string' name='[id]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Long' datatype='real' name='[long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
      <column caption='Sqft Above' datatype='integer' name='[sqft_above]' role='measure' type='quantitative' />
      <column caption='Sqft Basement' datatype='integer' name='[sqft_basement]' role='measure' type='quantitative' />
      <column caption='Sqft Living15' datatype='integer' name='[sqft_living15]' role='measure' type='quantitative' />
      <column caption='Sqft Living' datatype='integer' name='[sqft_living]' role='measure' type='quantitative' />
      <column caption='Sqft Lot15' datatype='integer' name='[sqft_lot15]' role='measure' type='quantitative' />
      <column caption='Sqft Lot' datatype='integer' name='[sqft_lot]' role='measure' type='quantitative' />
      <column caption='View' datatype='integer' name='[view]' role='measure' type='quantitative' />
      <column caption='Waterfront' datatype='integer' name='[waterfront]' role='measure' type='quantitative' />
      <column caption='Yr Built' datatype='integer' name='[yr_built]' role='dimension' type='ordinal' />
      <column caption='Yr Renovated' datatype='integer' name='[yr_renovated]' role='dimension' type='quantitative' />
      <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column-instance column='[bathrooms]' derivation='Count' name='[cnt:bathrooms:qk]' pivot='key' type='quantitative' />
      <column-instance column='[bedrooms]' derivation='Count' name='[cnt:bedrooms:qk]' pivot='key' type='quantitative' />
      <column-instance column='[bathrooms]' derivation='CountD' name='[ctd:bathrooms:qk]' pivot='key' type='quantitative' />
      <column-instance column='[bedrooms]' derivation='CountD' name='[ctd:bedrooms:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Yr Renovated Set 2]' derivation='InOut' name='[io:Yr Renovated Set 2:nk]' pivot='key' type='nominal' />
      <column-instance column='[Bathrooms (bin)]' derivation='None' name='[none:Bathrooms (bin):ok]' pivot='key' type='ordinal' />
      <column-instance column='[Bedrooms (bin)]' derivation='None' name='[none:Bedrooms (bin):ok]' pivot='key' type='ordinal' />
      <column-instance column='[bathrooms]' derivation='Sum' name='[sum:bathrooms:qk]' pivot='key' type='quantitative' />
      <column-instance column='[bedrooms]' derivation='Sum' name='[sum:bedrooms:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Bathrooms (bin),Bedrooms (bin))' hidden='true' name='[Action (Bathrooms (bin),Bedrooms (bin))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Bathrooms (bin)]' />
          <groupfilter function='level-members' level='[none:Bedrooms (bin):ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Price Trends by Periods of Time)' hidden='true' name='[Action (Price Trends by Periods of Time)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1312799340667265028]' />
        </groupfilter>
      </group>
      <group caption='Action (Yr Built)' hidden='true' name='[Action (Yr Built)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr_built]' />
        </groupfilter>
      </group>
      <group caption='Action (Zipcode)' hidden='true' name='[Action (Zipcode)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[zipcode]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Bathrooms (bin),Bedrooms (bin))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Bathrooms (bin):ok]' />
          <groupfilter function='level-members' level='[none:Bedrooms (bin):ok]' />
        </groupfilter>
      </group>
      <group caption='Yr Renovated Set 2' name='[Yr Renovated Set 2]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter from='1934' function='range' level='[yr_renovated]' to='2015' />
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:bathrooms:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ibg9u21a1zdsg17cetup0v5alcd].[ctd:bathrooms:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ibg9u21a1zdsg17cetup0v5alcd].[sum:bathrooms:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:bedrooms:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ibg9u21a1zdsg17cetup0v5alcd].[ctd:bedrooms:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ibg9u21a1zdsg17cetup0v5alcd].[sum:bedrooms:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Yr Renovated Set 2:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Bedrooms (bin):ok]' type='palette'>
            <map to='#2a5783'>
              <bucket>11</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>33</bucket>
            </map>
            <map to='#376491'>
              <bucket>10</bucket>
            </map>
            <map to='#42709e'>
              <bucket>9</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>8</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>7</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>6</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>5</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>4</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>3</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>2</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>1</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='regression_data1' id='regression!data1_26A14A7984284464BBB8B91BDC9375F8'>
            <properties context=''>
              <relation connection='excel-direct.01ljpp91bfys5z19oljxb0lazwx7' name='regression_data1' table='[regression_data1$]' type='table'>
                <columns gridOrigin='A1:U21598:no:A1:U21598:0' header='yes' outcome='6'>
                  <column datatype='string' name='id' ordinal='0' />
                  <column datatype='date' name='date' ordinal='1' />
                  <column datatype='integer' name='bedrooms' ordinal='2' />
                  <column datatype='real' name='bathrooms' ordinal='3' />
                  <column datatype='integer' name='sqft_living' ordinal='4' />
                  <column datatype='integer' name='sqft_lot' ordinal='5' />
                  <column datatype='real' name='floors' ordinal='6' />
                  <column datatype='integer' name='waterfront' ordinal='7' />
                  <column datatype='integer' name='view' ordinal='8' />
                  <column datatype='integer' name='condition' ordinal='9' />
                  <column datatype='integer' name='grade' ordinal='10' />
                  <column datatype='integer' name='sqft_above' ordinal='11' />
                  <column datatype='integer' name='sqft_basement' ordinal='12' />
                  <column datatype='integer' name='yr_built' ordinal='13' />
                  <column datatype='integer' name='yr_renovated' ordinal='14' />
                  <column datatype='integer' name='zipcode' ordinal='15' />
                  <column datatype='real' name='lat' ordinal='16' />
                  <column datatype='real' name='long' ordinal='17' />
                  <column datatype='integer' name='sqft_living15' ordinal='18' />
                  <column datatype='integer' name='sqft_lot15' ordinal='19' />
                  <column datatype='integer' name='price' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='period bar 1' name='[Action10_DC7E930F97754AF49A8D48E1DE0820CE]'>
      <activation type='on-select' />
      <source dashboard='seattle metrics float' type='sheet' worksheet='Period pricing' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Period pricing' />
        <param name='special-fields' value='all' />
        <param name='target' value='seattle metrics float' />
      </command>
    </action>
    <action caption='raw/reno 1' name='[Action11_0CFD91BF7FC14B738FDC32518B65B359]'>
      <activation type='on-select' />
      <source dashboard='seattle metrics float' type='sheet' worksheet='raw/reno sales' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='raw/reno sales' />
        <param name='special-fields' value='all' />
        <param name='target' value='seattle metrics float' />
      </command>
    </action>
    <action caption='bedbath bar 1' name='[Action12_F1053121CF924D4AB4F17812C6AE36AD]'>
      <activation type='on-select' />
      <source dashboard='seattle metrics float' type='sheet' worksheet='bedbathbar' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='bedbathbar,bed pi (2)' />
        <param name='special-fields' value='all' />
        <param name='target' value='seattle metrics float' />
      </command>
    </action>
    <action caption='Price map filter' name='[Action1_2D9A7A6655F24FBBB52D8DE981D7434D]'>
      <activation type='on-select' />
      <source dashboard='seattle metrics tiled' type='sheet' worksheet='price map' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='price map' />
        <param name='special-fields' value='all' />
        <param name='target' value='seattle metrics tiled' />
      </command>
    </action>
    <action caption='zip sales map' name='[Action2_11E2714E74D74FC3A3DF01F673020DB2]'>
      <activation type='on-select' />
      <source dashboard='seattle metrics tiled' type='sheet' worksheet='Sales since 2000' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Sales since 2000' />
        <param name='special-fields' value='all' />
        <param name='target' value='seattle metrics tiled' />
      </command>
    </action>
    <action caption='bed pi' name='[Action3_7287A40A2C214F4B8DB8E86A28196BCB]'>
      <activation type='on-select' />
      <source dashboard='seattle metrics tiled' type='sheet' worksheet='bed pi (2)' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='bed pi (2)' />
        <param name='special-fields' value='all' />
        <param name='target' value='seattle metrics tiled' />
      </command>
    </action>
    <action caption='period bar' name='[Action4_26524BA88C0545D6A0977D59FF566067]'>
      <activation type='on-select' />
      <source dashboard='seattle metrics tiled' type='sheet' worksheet='Period pricing' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Period pricing' />
        <param name='special-fields' value='all' />
        <param name='target' value='seattle metrics tiled' />
      </command>
    </action>
    <action caption='raw/reno' name='[Action5_3198AA653B064FE7BEE20B73DA80061A]'>
      <activation type='on-select' />
      <source dashboard='seattle metrics tiled' type='sheet' worksheet='raw/reno sales' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='raw/reno sales' />
        <param name='special-fields' value='all' />
        <param name='target' value='seattle metrics tiled' />
      </command>
    </action>
    <action caption='bedbath bar' name='[Action6_A2582F5EA88441C2A6C330F3EEF5B522]'>
      <activation type='on-select' />
      <source dashboard='seattle metrics tiled' type='sheet' worksheet='bedbathbar' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='bedbathbar,bed pi (2)' />
        <param name='special-fields' value='all' />
        <param name='target' value='seattle metrics tiled' />
      </command>
    </action>
    <action caption='Price map filter 1' name='[Action7_7FD4D46B9A9A400FB81B01004E2D0185]'>
      <activation type='on-select' />
      <source dashboard='seattle metrics float' type='sheet' worksheet='price map' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='price map' />
        <param name='special-fields' value='all' />
        <param name='target' value='seattle metrics float' />
      </command>
    </action>
    <action caption='bed pi 1' name='[Action8_CDFC2A5397064A48830A0BC98133F11B]'>
      <activation type='on-select' />
      <source dashboard='seattle metrics float' type='sheet' worksheet='bed pi (2)' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='bed pi (2)' />
        <param name='special-fields' value='all' />
        <param name='target' value='seattle metrics float' />
      </command>
    </action>
    <action caption='zip sales map 1' name='[Action9_E0E36AB65CCA41648445F412AC762D29]'>
      <activation type='on-select' />
      <source dashboard='seattle metrics float' type='sheet' worksheet='Sales since 2000' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Sales since 2000' />
        <param name='special-fields' value='all' />
        <param name='target' value='seattle metrics float' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Bath'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Bath Counts</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='regression_data1 (regression_data)' name='federated.0ibg9u21a1zdsg17cetup0v5alcd' />
          </datasources>
          <datasource-dependencies datasource='federated.0ibg9u21a1zdsg17cetup0v5alcd'>
            <column aggregation='None' caption='Bathrooms (bin)' datatype='integer' name='[Bathrooms (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[bathrooms]' peg='0' size='1' />
            </column>
            <column caption='Bathrooms' datatype='real' name='[bathrooms]' role='measure' type='quantitative' />
            <column-instance column='[bathrooms]' derivation='Count' name='[cnt:bathrooms:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Bathrooms (bin)]' derivation='None' name='[none:Bathrooms (bin):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='fill-color' id='annotation_2' value='#fafafa00' />
            <format attr='fill-color' id='annotation_3' value='#fafafa00' />
            <format attr='fill-color' id='annotation_4' value='#fafafa00' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bathrooms (bin):ok]' />
              <wedge-size column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:bathrooms:qk]' />
              <size column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:bathrooms:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols />
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:bathrooms:qk]</field>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bathrooms (bin):ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>2228</value>
                <value>3</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:bathrooms:qk]</field>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bathrooms (bin):ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>10539</value>
                <value>2</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:bathrooms:qk]</field>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bathrooms (bin):ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>8353</value>
                <value>1</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
        <annotations>
          <annotation class='area' id='2' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run>1</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.538557'>
                  <node-reference />
                </x-coord>
                <y-coord cell-offset='0.415011'>
                  <node-reference />
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.585821'>
                  <node-reference />
                </x-coord>
                <y-coord cell-offset='0.496689'>
                  <node-reference />
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='area' id='3' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run>2</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.419154'>
                  <node-reference />
                </x-coord>
                <y-coord cell-offset='0.540839'>
                  <node-reference />
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.470149'>
                  <node-reference />
                </x-coord>
                <y-coord cell-offset='0.629139'>
                  <node-reference />
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='area' id='4' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run>3</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.439055'>
                  <node-reference />
                </x-coord>
                <y-coord cell-offset='0.306843'>
                  <node-reference />
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.473881'>
                  <node-reference />
                </x-coord>
                <y-coord cell-offset='0.377483'>
                  <node-reference />
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{D86DC646-8153-4946-B1F1-078B4D28D8EA}' />
    </worksheet>
    <worksheet name='Period pricing'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#203cbc' fontsize='14'>Price Trends by Year Built</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='regression_data1 (regression_data)' name='federated.0ibg9u21a1zdsg17cetup0v5alcd' />
          </datasources>
          <datasource-dependencies datasource='federated.0ibg9u21a1zdsg17cetup0v5alcd'>
            <column aggregation='None' caption='Bathrooms (bin)' datatype='integer' name='[Bathrooms (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[bathrooms]' peg='0' size='1' />
            </column>
            <column aggregation='None' datatype='integer' name='[Bedrooms (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[bedrooms]' peg='0' size='1' />
            </column>
            <column caption='Price Trends by Periods of Time' datatype='string' name='[Calculation_1312799340667265028]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [yr_built]&lt;2000 THEN &quot;1900-1999&quot;&#13;&#10;ELSEIF [yr_built]&lt;2010 THEN &quot;2000-2009&quot;&#13;&#10;ELSE &quot;2010 - Present&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column caption='Bathrooms' datatype='real' name='[bathrooms]' role='measure' type='quantitative' />
            <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
            <column-instance column='[id]' derivation='CountD' name='[ctd:id:qk]' pivot='key' type='quantitative' />
            <column caption='Id' datatype='string' name='[id]' role='dimension' type='nominal' />
            <column-instance column='[sqft_living]' derivation='Median' name='[med:sqft_living:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Bedrooms (bin)]' derivation='None' name='[none:Bedrooms (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1312799340667265028]' derivation='None' name='[none:Calculation_1312799340667265028:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column caption='Sqft Living' datatype='integer' name='[sqft_living]' role='measure' type='quantitative' />
            <column caption='Yr Built' datatype='integer' name='[yr_built]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Bathrooms (bin),Bedrooms (bin))]'>
            <groupfilter function='reorder-dimensionality' user:ui-action-filter='[Action6_A2582F5EA88441C2A6C330F3EEF5B522]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='3' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[Bathrooms (bin)]' member='2' />
                  <groupfilter function='member' level='[Bathrooms (bin)]' member='3' />
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[Bathrooms (bin)]' />
                <hierarchy name='[none:Bedrooms (bin):ok]' />
              </order>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Zipcode)]'>
            <groupfilter function='union' user:ui-action-filter='[Action1_2D9A7A6655F24FBBB52D8DE981D7434D]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[zipcode]' member='98001' />
              <groupfilter function='member' level='[zipcode]' member='98002' />
              <groupfilter function='member' level='[zipcode]' member='98003' />
              <groupfilter function='member' level='[zipcode]' member='98004' />
              <groupfilter function='member' level='[zipcode]' member='98005' />
              <groupfilter function='member' level='[zipcode]' member='98006' />
              <groupfilter function='member' level='[zipcode]' member='98007' />
              <groupfilter function='member' level='[zipcode]' member='98008' />
              <groupfilter function='member' level='[zipcode]' member='98010' />
              <groupfilter function='member' level='[zipcode]' member='98011' />
              <groupfilter function='member' level='[zipcode]' member='98014' />
              <groupfilter function='member' level='[zipcode]' member='98019' />
              <groupfilter function='member' level='[zipcode]' member='98022' />
              <groupfilter function='member' level='[zipcode]' member='98023' />
              <groupfilter function='member' level='[zipcode]' member='98024' />
              <groupfilter function='member' level='[zipcode]' member='98027' />
              <groupfilter function='member' level='[zipcode]' member='98028' />
              <groupfilter function='member' level='[zipcode]' member='98029' />
              <groupfilter function='member' level='[zipcode]' member='98030' />
              <groupfilter function='member' level='[zipcode]' member='98031' />
              <groupfilter function='member' level='[zipcode]' member='98032' />
              <groupfilter function='member' level='[zipcode]' member='98033' />
              <groupfilter function='member' level='[zipcode]' member='98034' />
              <groupfilter function='member' level='[zipcode]' member='98038' />
              <groupfilter function='member' level='[zipcode]' member='98039' />
              <groupfilter function='member' level='[zipcode]' member='98040' />
              <groupfilter function='member' level='[zipcode]' member='98042' />
              <groupfilter function='member' level='[zipcode]' member='98045' />
              <groupfilter function='member' level='[zipcode]' member='98052' />
              <groupfilter function='member' level='[zipcode]' member='98053' />
              <groupfilter function='member' level='[zipcode]' member='98055' />
              <groupfilter function='member' level='[zipcode]' member='98056' />
              <groupfilter function='member' level='[zipcode]' member='98058' />
              <groupfilter function='member' level='[zipcode]' member='98059' />
              <groupfilter function='member' level='[zipcode]' member='98065' />
              <groupfilter function='member' level='[zipcode]' member='98070' />
              <groupfilter function='member' level='[zipcode]' member='98072' />
              <groupfilter function='member' level='[zipcode]' member='98074' />
              <groupfilter function='member' level='[zipcode]' member='98075' />
              <groupfilter function='member' level='[zipcode]' member='98077' />
              <groupfilter function='member' level='[zipcode]' member='98092' />
              <groupfilter function='member' level='[zipcode]' member='98102' />
              <groupfilter function='member' level='[zipcode]' member='98103' />
              <groupfilter function='member' level='[zipcode]' member='98105' />
              <groupfilter function='member' level='[zipcode]' member='98106' />
              <groupfilter function='member' level='[zipcode]' member='98107' />
              <groupfilter function='member' level='[zipcode]' member='98108' />
              <groupfilter function='member' level='[zipcode]' member='98109' />
              <groupfilter function='member' level='[zipcode]' member='98112' />
              <groupfilter function='member' level='[zipcode]' member='98115' />
              <groupfilter function='member' level='[zipcode]' member='98116' />
              <groupfilter function='member' level='[zipcode]' member='98117' />
              <groupfilter function='member' level='[zipcode]' member='98118' />
              <groupfilter function='member' level='[zipcode]' member='98119' />
              <groupfilter function='member' level='[zipcode]' member='98122' />
              <groupfilter function='member' level='[zipcode]' member='98125' />
              <groupfilter function='member' level='[zipcode]' member='98126' />
              <groupfilter function='member' level='[zipcode]' member='98133' />
              <groupfilter function='member' level='[zipcode]' member='98136' />
              <groupfilter function='member' level='[zipcode]' member='98144' />
              <groupfilter function='member' level='[zipcode]' member='98146' />
              <groupfilter function='member' level='[zipcode]' member='98148' />
              <groupfilter function='member' level='[zipcode]' member='98155' />
              <groupfilter function='member' level='[zipcode]' member='98166' />
              <groupfilter function='member' level='[zipcode]' member='98168' />
              <groupfilter function='member' level='[zipcode]' member='98177' />
              <groupfilter function='member' level='[zipcode]' member='98178' />
              <groupfilter function='member' level='[zipcode]' member='98188' />
              <groupfilter function='member' level='[zipcode]' member='98198' />
              <groupfilter function='member' level='[zipcode]' member='98199' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Zipcode)]</column>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Bathrooms (bin),Bedrooms (bin))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:price:qk]' scope='rows' value='Average Price' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:sqft_living:qk]' value='Median GLA' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:sqft_living:qk]' />
              <size column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[ctd:id:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#898989' fontsize='12'>Of the </run>
                <run bold='true' fontcolor='#f17b79' fontsize='12'><![CDATA[<[federated.0ibg9u21a1zdsg17cetup0v5alcd].[ctd:id:qk]>]]></run>
                <run bold='true' fontcolor='#898989' fontsize='12'> houses sold in 2014-2015 built in this time span, the median square foot of living space was </run>
                <run bold='true' fontcolor='#f17b79' fontsize='12'><![CDATA[<[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:sqft_living:qk]>]]></run>
                <run bold='true' fontcolor='#898989' fontsize='12'> and the  average price  was $</run>
                <run bold='true' fontcolor='#f17b79' fontsize='12'><![CDATA[<[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:price:qk]>]]></run>
                <run bold='true' fontcolor='#898989' fontsize='12'>.</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:price:qk]</rows>
        <cols>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Calculation_1312799340667265028:nk]</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Calculation_1312799340667265028:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:price:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:price:qk]</field>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[ctd:id:qk]</field>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:sqft_living:qk]</field>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Calculation_1312799340667265028:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>634066.16357775987</value>
                <value>750</value>
                <value>2450.0</value>
                <value>&quot;2010 - Present&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Calculation_1312799340667265028:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:price:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:price:qk]</field>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[ctd:id:qk]</field>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:sqft_living:qk]</field>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Calculation_1312799340667265028:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>613263.97467994306</value>
                <value>1855</value>
                <value>2310.0</value>
                <value>&quot;2000-2009&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Calculation_1312799340667265028:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:price:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:price:qk]</field>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[ctd:id:qk]</field>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:sqft_living:qk]</field>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Calculation_1312799340667265028:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>518157.24232527759</value>
                <value>8731</value>
                <value>1830.0</value>
                <value>&quot;1900-1999&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{B2E9C79B-D092-498B-A6AB-ACF422A0707B}' />
    </worksheet>
    <worksheet name='Sales since 2000'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#203cbc' fontsize='14'>Sales Since 2000 </run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#203cbc' fontsize='14'>(by Zip Code)</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='regression_data1 (regression_data)' name='federated.0ibg9u21a1zdsg17cetup0v5alcd' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ibg9u21a1zdsg17cetup0v5alcd'>
            <column aggregation='None' caption='Bathrooms (bin)' datatype='integer' name='[Bathrooms (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[bathrooms]' peg='0' size='1' />
            </column>
            <column aggregation='None' datatype='integer' name='[Bedrooms (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[bedrooms]' peg='0' size='1' />
            </column>
            <column caption='Price Trends by Periods of Time' datatype='string' name='[Calculation_1312799340667265028]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [yr_built]&lt;2000 THEN &quot;1900-1999&quot;&#13;&#10;ELSEIF [yr_built]&lt;2010 THEN &quot;2000-2009&quot;&#13;&#10;ELSE &quot;2010 - Present&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[lat]' derivation='Avg' name='[avg:lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[long]' derivation='Avg' name='[avg:long:qk]' pivot='key' type='quantitative' />
            <column caption='Bathrooms' datatype='real' name='[bathrooms]' role='measure' type='quantitative' />
            <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
            <column-instance column='[id]' derivation='Count' name='[cnt:id:qk]' pivot='key' type='quantitative' />
            <column caption='Id' datatype='string' name='[id]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Long' datatype='real' name='[long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[Bedrooms (bin)]' derivation='None' name='[none:Bedrooms (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[yr_built]' derivation='None' name='[none:yr_built:ok]' pivot='key' type='ordinal' />
            <column-instance column='[zipcode]' derivation='None' name='[none:zipcode:ok]' pivot='key' type='ordinal' />
            <column caption='Yr Built' datatype='integer' name='[yr_built]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Bathrooms (bin),Bedrooms (bin))]'>
            <groupfilter function='reorder-dimensionality' user:ui-action-filter='[Action6_A2582F5EA88441C2A6C330F3EEF5B522]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='3' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[Bathrooms (bin)]' member='2' />
                  <groupfilter function='member' level='[Bathrooms (bin)]' member='3' />
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[Bathrooms (bin)]' />
                <hierarchy name='[none:Bedrooms (bin):ok]' />
              </order>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Price Trends by Periods of Time)]'>
            <groupfilter function='union' user:ui-action-filter='[Action4_26524BA88C0545D6A0977D59FF566067]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_1312799340667265028]' member='&quot;1900-1999&quot;' />
              <groupfilter function='member' level='[Calculation_1312799340667265028]' member='&quot;2010 - Present&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Zipcode)]'>
            <groupfilter function='union' user:ui-action-filter='[Action1_2D9A7A6655F24FBBB52D8DE981D7434D]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[zipcode]' member='98001' />
              <groupfilter function='member' level='[zipcode]' member='98002' />
              <groupfilter function='member' level='[zipcode]' member='98003' />
              <groupfilter function='member' level='[zipcode]' member='98004' />
              <groupfilter function='member' level='[zipcode]' member='98005' />
              <groupfilter function='member' level='[zipcode]' member='98006' />
              <groupfilter function='member' level='[zipcode]' member='98007' />
              <groupfilter function='member' level='[zipcode]' member='98008' />
              <groupfilter function='member' level='[zipcode]' member='98010' />
              <groupfilter function='member' level='[zipcode]' member='98011' />
              <groupfilter function='member' level='[zipcode]' member='98014' />
              <groupfilter function='member' level='[zipcode]' member='98019' />
              <groupfilter function='member' level='[zipcode]' member='98022' />
              <groupfilter function='member' level='[zipcode]' member='98023' />
              <groupfilter function='member' level='[zipcode]' member='98024' />
              <groupfilter function='member' level='[zipcode]' member='98027' />
              <groupfilter function='member' level='[zipcode]' member='98028' />
              <groupfilter function='member' level='[zipcode]' member='98029' />
              <groupfilter function='member' level='[zipcode]' member='98030' />
              <groupfilter function='member' level='[zipcode]' member='98031' />
              <groupfilter function='member' level='[zipcode]' member='98032' />
              <groupfilter function='member' level='[zipcode]' member='98033' />
              <groupfilter function='member' level='[zipcode]' member='98034' />
              <groupfilter function='member' level='[zipcode]' member='98038' />
              <groupfilter function='member' level='[zipcode]' member='98039' />
              <groupfilter function='member' level='[zipcode]' member='98040' />
              <groupfilter function='member' level='[zipcode]' member='98042' />
              <groupfilter function='member' level='[zipcode]' member='98045' />
              <groupfilter function='member' level='[zipcode]' member='98052' />
              <groupfilter function='member' level='[zipcode]' member='98053' />
              <groupfilter function='member' level='[zipcode]' member='98055' />
              <groupfilter function='member' level='[zipcode]' member='98056' />
              <groupfilter function='member' level='[zipcode]' member='98058' />
              <groupfilter function='member' level='[zipcode]' member='98059' />
              <groupfilter function='member' level='[zipcode]' member='98065' />
              <groupfilter function='member' level='[zipcode]' member='98070' />
              <groupfilter function='member' level='[zipcode]' member='98072' />
              <groupfilter function='member' level='[zipcode]' member='98074' />
              <groupfilter function='member' level='[zipcode]' member='98075' />
              <groupfilter function='member' level='[zipcode]' member='98077' />
              <groupfilter function='member' level='[zipcode]' member='98092' />
              <groupfilter function='member' level='[zipcode]' member='98102' />
              <groupfilter function='member' level='[zipcode]' member='98103' />
              <groupfilter function='member' level='[zipcode]' member='98105' />
              <groupfilter function='member' level='[zipcode]' member='98106' />
              <groupfilter function='member' level='[zipcode]' member='98107' />
              <groupfilter function='member' level='[zipcode]' member='98108' />
              <groupfilter function='member' level='[zipcode]' member='98109' />
              <groupfilter function='member' level='[zipcode]' member='98112' />
              <groupfilter function='member' level='[zipcode]' member='98115' />
              <groupfilter function='member' level='[zipcode]' member='98116' />
              <groupfilter function='member' level='[zipcode]' member='98117' />
              <groupfilter function='member' level='[zipcode]' member='98118' />
              <groupfilter function='member' level='[zipcode]' member='98119' />
              <groupfilter function='member' level='[zipcode]' member='98122' />
              <groupfilter function='member' level='[zipcode]' member='98125' />
              <groupfilter function='member' level='[zipcode]' member='98126' />
              <groupfilter function='member' level='[zipcode]' member='98133' />
              <groupfilter function='member' level='[zipcode]' member='98136' />
              <groupfilter function='member' level='[zipcode]' member='98144' />
              <groupfilter function='member' level='[zipcode]' member='98146' />
              <groupfilter function='member' level='[zipcode]' member='98148' />
              <groupfilter function='member' level='[zipcode]' member='98155' />
              <groupfilter function='member' level='[zipcode]' member='98166' />
              <groupfilter function='member' level='[zipcode]' member='98168' />
              <groupfilter function='member' level='[zipcode]' member='98177' />
              <groupfilter function='member' level='[zipcode]' member='98178' />
              <groupfilter function='member' level='[zipcode]' member='98188' />
              <groupfilter function='member' level='[zipcode]' member='98198' />
              <groupfilter function='member' level='[zipcode]' member='98199' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:yr_built:ok]'>
            <groupfilter function='level-members' level='[none:yr_built:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:yr_built:ok]</column>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Zipcode)]</column>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Bathrooms (bin),Bedrooms (bin))]</column>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Price Trends by Periods of Time)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:long:qk]' field-type='quantitative' max='-13435334.11403127' min='-13738378.701626696' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:lat:qk]' field-type='quantitative' max='6085467.7994630132' min='5905560.0565205179' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:id:qk]' value='Sales Count'>
              <formatted-text>
                <run>Sales Count</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:id:qk]' />
              <lod column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:zipcode:ok]' />
              <geometry column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='12'>There were </run>
                <run bold='true' fontcolor='#f17b79' fontsize='12'><![CDATA[<[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:id:qk]>]]></run>
                <run fontcolor='#787878' fontsize='12'> sales in </run>
                <run fontcolor='#898989' fontsize='12'>zip cod</run>
                <run fontcolor='#787878' fontsize='12'>e </run>
                <run bold='true' fontcolor='#f17b79' fontsize='12'><![CDATA[<[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:zipcode:ok]> ]]></run>
                <run bold='true' fontcolor='#b6bfa9' fontsize='12'>.</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:lat:qk]</rows>
        <cols>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:long:qk]</cols>
      </table>
      <simple-id uuid='{6EE36E2C-DCD5-418F-BF21-00CEDDEC39A1}' />
    </worksheet>
    <worksheet name='Sheet 10'>
      <table>
        <view>
          <datasources>
            <datasource caption='regression_data1 (regression_data)' name='federated.0ibg9u21a1zdsg17cetup0v5alcd' />
          </datasources>
          <datasource-dependencies datasource='federated.0ibg9u21a1zdsg17cetup0v5alcd'>
            <column caption='Decades ' datatype='string' name='[Calculation_1363746311673958404]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [yr_built]&lt;1910 THEN &quot;1900-1909&quot;&#13;&#10;ELSEIF [yr_built]&lt;1920 THEN &quot;1910-1919&quot;&#13;&#10;ELSEIF [yr_built]&lt;1930 THEN &quot;1920-1929&quot;&#13;&#10;ELSEIF [yr_built]&lt;1940 THEN &quot;1930-1939&quot;&#13;&#10;ELSEIF [yr_built]&lt;1950 THEN &quot;1940-1949&quot;&#13;&#10;ELSEIF [yr_built]&lt;1960 THEN &quot;1950-1959&quot;&#13;&#10;ELSEIF [yr_built]&lt;1970 THEN &quot;1960-1969&quot;&#13;&#10;ELSEIF [yr_built]&lt;1980 THEN &quot;1970-1979&quot;&#13;&#10;ELSEIF [yr_built]&lt;1990 THEN &quot;1980-1989&quot;&#13;&#10;ELSEIF [yr_built]&lt;2000 THEN &quot;1990-1999&quot;&#13;&#10;ELSEIF [yr_built]&lt;2010 THEN &quot;2000-2009&quot;&#13;&#10;ELSE &quot;2010 - Present&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[price]' derivation='Median' name='[med:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1363746311673958404]' derivation='None' name='[none:Calculation_1363746311673958404:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column caption='Yr Built' datatype='integer' name='[yr_built]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Calculation_1363746311673958404:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{4B798B6C-A8F2-47FB-A240-7DB506143D0D}' />
    </worksheet>
    <worksheet name='bed pi (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#203cbc' fontsize='14'>Bed Count Availability</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='regression_data1 (regression_data)' name='federated.0ibg9u21a1zdsg17cetup0v5alcd' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ibg9u21a1zdsg17cetup0v5alcd'>
            <column aggregation='None' datatype='integer' name='[Bedrooms (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[bedrooms]' peg='0' size='1' />
            </column>
            <column caption='Price Trends by Periods of Time' datatype='string' name='[Calculation_1312799340667265028]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [yr_built]&lt;2000 THEN &quot;1900-1999&quot;&#13;&#10;ELSEIF [yr_built]&lt;2010 THEN &quot;2000-2009&quot;&#13;&#10;ELSE &quot;2010 - Present&quot;&#13;&#10;END' />
            </column>
            <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
            <column-instance column='[bedrooms]' derivation='Count' name='[cnt:bedrooms:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Bedrooms (bin)]' derivation='None' name='[none:Bedrooms (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[bedrooms]' derivation='Sum' name='[sum:bedrooms:qk]' pivot='key' type='quantitative' />
            <column caption='Yr Built' datatype='integer' name='[yr_built]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Price Trends by Periods of Time)]'>
            <groupfilter function='union' user:ui-action-filter='[Action4_26524BA88C0545D6A0977D59FF566067]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_1312799340667265028]' member='&quot;1900-1999&quot;' />
              <groupfilter function='member' level='[Calculation_1312799340667265028]' member='&quot;2010 - Present&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Zipcode)]'>
            <groupfilter function='union' user:ui-action-filter='[Action1_2D9A7A6655F24FBBB52D8DE981D7434D]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[zipcode]' member='98001' />
              <groupfilter function='member' level='[zipcode]' member='98002' />
              <groupfilter function='member' level='[zipcode]' member='98003' />
              <groupfilter function='member' level='[zipcode]' member='98004' />
              <groupfilter function='member' level='[zipcode]' member='98005' />
              <groupfilter function='member' level='[zipcode]' member='98006' />
              <groupfilter function='member' level='[zipcode]' member='98007' />
              <groupfilter function='member' level='[zipcode]' member='98008' />
              <groupfilter function='member' level='[zipcode]' member='98010' />
              <groupfilter function='member' level='[zipcode]' member='98011' />
              <groupfilter function='member' level='[zipcode]' member='98014' />
              <groupfilter function='member' level='[zipcode]' member='98019' />
              <groupfilter function='member' level='[zipcode]' member='98022' />
              <groupfilter function='member' level='[zipcode]' member='98023' />
              <groupfilter function='member' level='[zipcode]' member='98024' />
              <groupfilter function='member' level='[zipcode]' member='98027' />
              <groupfilter function='member' level='[zipcode]' member='98028' />
              <groupfilter function='member' level='[zipcode]' member='98029' />
              <groupfilter function='member' level='[zipcode]' member='98030' />
              <groupfilter function='member' level='[zipcode]' member='98031' />
              <groupfilter function='member' level='[zipcode]' member='98032' />
              <groupfilter function='member' level='[zipcode]' member='98033' />
              <groupfilter function='member' level='[zipcode]' member='98034' />
              <groupfilter function='member' level='[zipcode]' member='98038' />
              <groupfilter function='member' level='[zipcode]' member='98039' />
              <groupfilter function='member' level='[zipcode]' member='98040' />
              <groupfilter function='member' level='[zipcode]' member='98042' />
              <groupfilter function='member' level='[zipcode]' member='98045' />
              <groupfilter function='member' level='[zipcode]' member='98052' />
              <groupfilter function='member' level='[zipcode]' member='98053' />
              <groupfilter function='member' level='[zipcode]' member='98055' />
              <groupfilter function='member' level='[zipcode]' member='98056' />
              <groupfilter function='member' level='[zipcode]' member='98058' />
              <groupfilter function='member' level='[zipcode]' member='98059' />
              <groupfilter function='member' level='[zipcode]' member='98065' />
              <groupfilter function='member' level='[zipcode]' member='98070' />
              <groupfilter function='member' level='[zipcode]' member='98072' />
              <groupfilter function='member' level='[zipcode]' member='98074' />
              <groupfilter function='member' level='[zipcode]' member='98075' />
              <groupfilter function='member' level='[zipcode]' member='98077' />
              <groupfilter function='member' level='[zipcode]' member='98092' />
              <groupfilter function='member' level='[zipcode]' member='98102' />
              <groupfilter function='member' level='[zipcode]' member='98103' />
              <groupfilter function='member' level='[zipcode]' member='98105' />
              <groupfilter function='member' level='[zipcode]' member='98106' />
              <groupfilter function='member' level='[zipcode]' member='98107' />
              <groupfilter function='member' level='[zipcode]' member='98108' />
              <groupfilter function='member' level='[zipcode]' member='98109' />
              <groupfilter function='member' level='[zipcode]' member='98112' />
              <groupfilter function='member' level='[zipcode]' member='98115' />
              <groupfilter function='member' level='[zipcode]' member='98116' />
              <groupfilter function='member' level='[zipcode]' member='98117' />
              <groupfilter function='member' level='[zipcode]' member='98118' />
              <groupfilter function='member' level='[zipcode]' member='98119' />
              <groupfilter function='member' level='[zipcode]' member='98122' />
              <groupfilter function='member' level='[zipcode]' member='98125' />
              <groupfilter function='member' level='[zipcode]' member='98126' />
              <groupfilter function='member' level='[zipcode]' member='98133' />
              <groupfilter function='member' level='[zipcode]' member='98136' />
              <groupfilter function='member' level='[zipcode]' member='98144' />
              <groupfilter function='member' level='[zipcode]' member='98146' />
              <groupfilter function='member' level='[zipcode]' member='98148' />
              <groupfilter function='member' level='[zipcode]' member='98155' />
              <groupfilter function='member' level='[zipcode]' member='98166' />
              <groupfilter function='member' level='[zipcode]' member='98168' />
              <groupfilter function='member' level='[zipcode]' member='98177' />
              <groupfilter function='member' level='[zipcode]' member='98178' />
              <groupfilter function='member' level='[zipcode]' member='98188' />
              <groupfilter function='member' level='[zipcode]' member='98198' />
              <groupfilter function='member' level='[zipcode]' member='98199' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Bedrooms (bin):ok]' />
              <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='33' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]</column>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Zipcode)]</column>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Price Trends by Periods of Time)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]' value='' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]' value='' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]' value='Beds'>
              <formatted-text>
                <run>Beds</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]' />
              <wedge-size column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:bedrooms:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#898989' fontsize='12'>Of 21,598 house sales, </run>
                <run bold='true' fontcolor='#f17b79' fontsize='12'><![CDATA[<[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:bedrooms:qk]>]]></run>
                <run bold='true' fontcolor='#898989' fontsize='12'> of them contained </run>
                <run bold='true' fontcolor='#f17b79' fontsize='12'><![CDATA[<[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]>]]></run>
                <run bold='true' fontcolor='#898989' fontsize='12'> bedrooms.</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows />
        <cols />
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]</field>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[sum:bedrooms:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>4</value>
                <value>27528</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]</field>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[sum:bedrooms:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>5</value>
                <value>8005</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]</field>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[sum:bedrooms:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>2</value>
                <value>5520</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='3' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]</field>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[sum:bedrooms:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>3</value>
                <value>29472</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='4' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]</field>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[sum:bedrooms:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>6</value>
                <value>1632</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{4CC2F3B8-16F2-44D3-90FE-7764BE004A5C}' />
    </worksheet>
    <worksheet name='bedbathbar'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#203cbc' fontsize='14'>Bath Availability by Bed Count</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='regression_data1 (regression_data)' name='federated.0ibg9u21a1zdsg17cetup0v5alcd' />
          </datasources>
          <datasource-dependencies datasource='federated.0ibg9u21a1zdsg17cetup0v5alcd'>
            <column aggregation='None' caption='Bathrooms (bin)' datatype='integer' name='[Bathrooms (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[bathrooms]' peg='0' size='1' />
            </column>
            <column aggregation='None' datatype='integer' name='[Bedrooms (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[bedrooms]' peg='0' size='1' />
            </column>
            <column caption='Price Trends by Periods of Time' datatype='string' name='[Calculation_1312799340667265028]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [yr_built]&lt;2000 THEN &quot;1900-1999&quot;&#13;&#10;ELSEIF [yr_built]&lt;2010 THEN &quot;2000-2009&quot;&#13;&#10;ELSE &quot;2010 - Present&quot;&#13;&#10;END' />
            </column>
            <column caption='Bathrooms' datatype='real' name='[bathrooms]' role='measure' type='quantitative' />
            <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
            <column-instance column='[bathrooms]' derivation='Count' name='[cnt:bathrooms:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Bathrooms (bin)]' derivation='None' name='[none:Bathrooms (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Bedrooms (bin)]' derivation='None' name='[none:Bedrooms (bin):ok]' pivot='key' type='ordinal' />
            <column caption='Yr Built' datatype='integer' name='[yr_built]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Price Trends by Periods of Time)]'>
            <groupfilter function='union' user:ui-action-filter='[Action4_26524BA88C0545D6A0977D59FF566067]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_1312799340667265028]' member='&quot;1900-1999&quot;' />
              <groupfilter function='member' level='[Calculation_1312799340667265028]' member='&quot;2010 - Present&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Zipcode)]'>
            <groupfilter function='union' user:ui-action-filter='[Action1_2D9A7A6655F24FBBB52D8DE981D7434D]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[zipcode]' member='98001' />
              <groupfilter function='member' level='[zipcode]' member='98002' />
              <groupfilter function='member' level='[zipcode]' member='98003' />
              <groupfilter function='member' level='[zipcode]' member='98004' />
              <groupfilter function='member' level='[zipcode]' member='98005' />
              <groupfilter function='member' level='[zipcode]' member='98006' />
              <groupfilter function='member' level='[zipcode]' member='98007' />
              <groupfilter function='member' level='[zipcode]' member='98008' />
              <groupfilter function='member' level='[zipcode]' member='98010' />
              <groupfilter function='member' level='[zipcode]' member='98011' />
              <groupfilter function='member' level='[zipcode]' member='98014' />
              <groupfilter function='member' level='[zipcode]' member='98019' />
              <groupfilter function='member' level='[zipcode]' member='98022' />
              <groupfilter function='member' level='[zipcode]' member='98023' />
              <groupfilter function='member' level='[zipcode]' member='98024' />
              <groupfilter function='member' level='[zipcode]' member='98027' />
              <groupfilter function='member' level='[zipcode]' member='98028' />
              <groupfilter function='member' level='[zipcode]' member='98029' />
              <groupfilter function='member' level='[zipcode]' member='98030' />
              <groupfilter function='member' level='[zipcode]' member='98031' />
              <groupfilter function='member' level='[zipcode]' member='98032' />
              <groupfilter function='member' level='[zipcode]' member='98033' />
              <groupfilter function='member' level='[zipcode]' member='98034' />
              <groupfilter function='member' level='[zipcode]' member='98038' />
              <groupfilter function='member' level='[zipcode]' member='98039' />
              <groupfilter function='member' level='[zipcode]' member='98040' />
              <groupfilter function='member' level='[zipcode]' member='98042' />
              <groupfilter function='member' level='[zipcode]' member='98045' />
              <groupfilter function='member' level='[zipcode]' member='98052' />
              <groupfilter function='member' level='[zipcode]' member='98053' />
              <groupfilter function='member' level='[zipcode]' member='98055' />
              <groupfilter function='member' level='[zipcode]' member='98056' />
              <groupfilter function='member' level='[zipcode]' member='98058' />
              <groupfilter function='member' level='[zipcode]' member='98059' />
              <groupfilter function='member' level='[zipcode]' member='98065' />
              <groupfilter function='member' level='[zipcode]' member='98070' />
              <groupfilter function='member' level='[zipcode]' member='98072' />
              <groupfilter function='member' level='[zipcode]' member='98074' />
              <groupfilter function='member' level='[zipcode]' member='98075' />
              <groupfilter function='member' level='[zipcode]' member='98077' />
              <groupfilter function='member' level='[zipcode]' member='98092' />
              <groupfilter function='member' level='[zipcode]' member='98102' />
              <groupfilter function='member' level='[zipcode]' member='98103' />
              <groupfilter function='member' level='[zipcode]' member='98105' />
              <groupfilter function='member' level='[zipcode]' member='98106' />
              <groupfilter function='member' level='[zipcode]' member='98107' />
              <groupfilter function='member' level='[zipcode]' member='98108' />
              <groupfilter function='member' level='[zipcode]' member='98109' />
              <groupfilter function='member' level='[zipcode]' member='98112' />
              <groupfilter function='member' level='[zipcode]' member='98115' />
              <groupfilter function='member' level='[zipcode]' member='98116' />
              <groupfilter function='member' level='[zipcode]' member='98117' />
              <groupfilter function='member' level='[zipcode]' member='98118' />
              <groupfilter function='member' level='[zipcode]' member='98119' />
              <groupfilter function='member' level='[zipcode]' member='98122' />
              <groupfilter function='member' level='[zipcode]' member='98125' />
              <groupfilter function='member' level='[zipcode]' member='98126' />
              <groupfilter function='member' level='[zipcode]' member='98133' />
              <groupfilter function='member' level='[zipcode]' member='98136' />
              <groupfilter function='member' level='[zipcode]' member='98144' />
              <groupfilter function='member' level='[zipcode]' member='98146' />
              <groupfilter function='member' level='[zipcode]' member='98148' />
              <groupfilter function='member' level='[zipcode]' member='98155' />
              <groupfilter function='member' level='[zipcode]' member='98166' />
              <groupfilter function='member' level='[zipcode]' member='98168' />
              <groupfilter function='member' level='[zipcode]' member='98177' />
              <groupfilter function='member' level='[zipcode]' member='98178' />
              <groupfilter function='member' level='[zipcode]' member='98188' />
              <groupfilter function='member' level='[zipcode]' member='98198' />
              <groupfilter function='member' level='[zipcode]' member='98199' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Exclusions (Bathrooms (bin),Bedrooms (bin))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Bathrooms (bin):ok]' />
                <groupfilter function='level-members' level='[none:Bedrooms (bin):ok]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='6' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='1' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='2' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='3' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='4' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='5' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='6' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='7' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='8' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='7' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='1' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='2' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='3' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='4' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='5' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='6' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='8' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='8' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='2' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='3' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='4' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='5' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='6' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='9' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='3' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='4' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='7' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='10' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='2' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='3' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='5' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='11' />
                    <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='3' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='33' />
                    <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='1' />
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:Bathrooms (bin):ok]' />
                  <hierarchy name='[none:Bedrooms (bin):ok]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Exclusions (Bathrooms (bin),Bedrooms (bin))]</column>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Zipcode)]</column>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Price Trends by Periods of Time)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:bathrooms:qk]' scope='rows' value='Bathroom Count' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bathrooms (bin):ok]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#898989' fontsize='12'>Houses with </run>
                <run bold='true' fontcolor='#f17b79' fontsize='12'><![CDATA[<[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]>]]></run>
                <run bold='true' fontcolor='#898989' fontsize='12'> bedrooms have </run>
                <run bold='true' fontcolor='#f17b79' fontsize='12'><![CDATA[<[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:bathrooms:qk]>]]></run>
                <run bold='true' fontcolor='#898989' fontsize='12'> sales with </run>
                <run bold='true' fontcolor='#f17b79' fontsize='12'><![CDATA[<[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bathrooms (bin):ok]>]]></run>
                <run bold='true' fontcolor='#898989' fontsize='12'> bathroom(s).</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:bathrooms:qk]</rows>
        <cols>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]</cols>
      </table>
      <simple-id uuid='{EFF8D295-E6FB-4F81-B713-4B4B8214E04F}' />
    </worksheet>
    <worksheet name='bedbathbar (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#203cbc' fontsize='14'>Bath Availability by Bed Count</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='regression_data1 (regression_data)' name='federated.0ibg9u21a1zdsg17cetup0v5alcd' />
          </datasources>
          <datasource-dependencies datasource='federated.0ibg9u21a1zdsg17cetup0v5alcd'>
            <column aggregation='None' caption='Bathrooms (bin)' datatype='integer' name='[Bathrooms (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[bathrooms]' peg='0' size='1' />
            </column>
            <column aggregation='None' datatype='integer' name='[Bedrooms (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[bedrooms]' peg='0' size='1' />
            </column>
            <column caption='Price Trends by Periods of Time' datatype='string' name='[Calculation_1312799340667265028]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [yr_built]&lt;2000 THEN &quot;1900-1999&quot;&#13;&#10;ELSEIF [yr_built]&lt;2010 THEN &quot;2000-2009&quot;&#13;&#10;ELSE &quot;2010 - Present&quot;&#13;&#10;END' />
            </column>
            <column caption='Bathrooms' datatype='real' name='[bathrooms]' role='measure' type='quantitative' />
            <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
            <column-instance column='[bathrooms]' derivation='Count' name='[cnt:bathrooms:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Bathrooms (bin)]' derivation='None' name='[none:Bathrooms (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Bedrooms (bin)]' derivation='None' name='[none:Bedrooms (bin):ok]' pivot='key' type='ordinal' />
            <column caption='Yr Built' datatype='integer' name='[yr_built]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Price Trends by Periods of Time)]'>
            <groupfilter function='union' user:ui-action-filter='[Action4_26524BA88C0545D6A0977D59FF566067]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_1312799340667265028]' member='&quot;1900-1999&quot;' />
              <groupfilter function='member' level='[Calculation_1312799340667265028]' member='&quot;2010 - Present&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Zipcode)]'>
            <groupfilter function='union' user:ui-action-filter='[Action1_2D9A7A6655F24FBBB52D8DE981D7434D]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[zipcode]' member='98001' />
              <groupfilter function='member' level='[zipcode]' member='98002' />
              <groupfilter function='member' level='[zipcode]' member='98003' />
              <groupfilter function='member' level='[zipcode]' member='98004' />
              <groupfilter function='member' level='[zipcode]' member='98005' />
              <groupfilter function='member' level='[zipcode]' member='98006' />
              <groupfilter function='member' level='[zipcode]' member='98007' />
              <groupfilter function='member' level='[zipcode]' member='98008' />
              <groupfilter function='member' level='[zipcode]' member='98010' />
              <groupfilter function='member' level='[zipcode]' member='98011' />
              <groupfilter function='member' level='[zipcode]' member='98014' />
              <groupfilter function='member' level='[zipcode]' member='98019' />
              <groupfilter function='member' level='[zipcode]' member='98022' />
              <groupfilter function='member' level='[zipcode]' member='98023' />
              <groupfilter function='member' level='[zipcode]' member='98024' />
              <groupfilter function='member' level='[zipcode]' member='98027' />
              <groupfilter function='member' level='[zipcode]' member='98028' />
              <groupfilter function='member' level='[zipcode]' member='98029' />
              <groupfilter function='member' level='[zipcode]' member='98030' />
              <groupfilter function='member' level='[zipcode]' member='98031' />
              <groupfilter function='member' level='[zipcode]' member='98032' />
              <groupfilter function='member' level='[zipcode]' member='98033' />
              <groupfilter function='member' level='[zipcode]' member='98034' />
              <groupfilter function='member' level='[zipcode]' member='98038' />
              <groupfilter function='member' level='[zipcode]' member='98039' />
              <groupfilter function='member' level='[zipcode]' member='98040' />
              <groupfilter function='member' level='[zipcode]' member='98042' />
              <groupfilter function='member' level='[zipcode]' member='98045' />
              <groupfilter function='member' level='[zipcode]' member='98052' />
              <groupfilter function='member' level='[zipcode]' member='98053' />
              <groupfilter function='member' level='[zipcode]' member='98055' />
              <groupfilter function='member' level='[zipcode]' member='98056' />
              <groupfilter function='member' level='[zipcode]' member='98058' />
              <groupfilter function='member' level='[zipcode]' member='98059' />
              <groupfilter function='member' level='[zipcode]' member='98065' />
              <groupfilter function='member' level='[zipcode]' member='98070' />
              <groupfilter function='member' level='[zipcode]' member='98072' />
              <groupfilter function='member' level='[zipcode]' member='98074' />
              <groupfilter function='member' level='[zipcode]' member='98075' />
              <groupfilter function='member' level='[zipcode]' member='98077' />
              <groupfilter function='member' level='[zipcode]' member='98092' />
              <groupfilter function='member' level='[zipcode]' member='98102' />
              <groupfilter function='member' level='[zipcode]' member='98103' />
              <groupfilter function='member' level='[zipcode]' member='98105' />
              <groupfilter function='member' level='[zipcode]' member='98106' />
              <groupfilter function='member' level='[zipcode]' member='98107' />
              <groupfilter function='member' level='[zipcode]' member='98108' />
              <groupfilter function='member' level='[zipcode]' member='98109' />
              <groupfilter function='member' level='[zipcode]' member='98112' />
              <groupfilter function='member' level='[zipcode]' member='98115' />
              <groupfilter function='member' level='[zipcode]' member='98116' />
              <groupfilter function='member' level='[zipcode]' member='98117' />
              <groupfilter function='member' level='[zipcode]' member='98118' />
              <groupfilter function='member' level='[zipcode]' member='98119' />
              <groupfilter function='member' level='[zipcode]' member='98122' />
              <groupfilter function='member' level='[zipcode]' member='98125' />
              <groupfilter function='member' level='[zipcode]' member='98126' />
              <groupfilter function='member' level='[zipcode]' member='98133' />
              <groupfilter function='member' level='[zipcode]' member='98136' />
              <groupfilter function='member' level='[zipcode]' member='98144' />
              <groupfilter function='member' level='[zipcode]' member='98146' />
              <groupfilter function='member' level='[zipcode]' member='98148' />
              <groupfilter function='member' level='[zipcode]' member='98155' />
              <groupfilter function='member' level='[zipcode]' member='98166' />
              <groupfilter function='member' level='[zipcode]' member='98168' />
              <groupfilter function='member' level='[zipcode]' member='98177' />
              <groupfilter function='member' level='[zipcode]' member='98178' />
              <groupfilter function='member' level='[zipcode]' member='98188' />
              <groupfilter function='member' level='[zipcode]' member='98198' />
              <groupfilter function='member' level='[zipcode]' member='98199' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Exclusions (Bathrooms (bin),Bedrooms (bin))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Bathrooms (bin):ok]' />
                <groupfilter function='level-members' level='[none:Bedrooms (bin):ok]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='6' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='1' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='2' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='3' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='4' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='5' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='6' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='7' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='8' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='7' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='1' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='2' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='3' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='4' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='5' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='6' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='8' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='8' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='2' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='3' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='4' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='5' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='6' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='9' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='3' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='4' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='7' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='10' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='2' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='3' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='5' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='11' />
                    <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='3' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='33' />
                    <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='1' />
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:Bathrooms (bin):ok]' />
                  <hierarchy name='[none:Bedrooms (bin):ok]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Exclusions (Bathrooms (bin),Bedrooms (bin))]</column>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Zipcode)]</column>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Price Trends by Periods of Time)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:bathrooms:qk]' scope='rows' value='Bathroom Count' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:bathrooms:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:bathrooms:qk]' />
              <text column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:bathrooms:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]</rows>
        <cols>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bathrooms (bin):ok]</cols>
      </table>
      <simple-id uuid='{EF05680E-B4D3-4A41-B41C-42BF2FBC3863}' />
    </worksheet>
    <worksheet name='price map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#203cbc' fontsize='14'>Median Prices of Homes Sold </run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#203cbc' fontsize='14'>(by Zip Code)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='regression_data1 (regression_data)' name='federated.0ibg9u21a1zdsg17cetup0v5alcd' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ibg9u21a1zdsg17cetup0v5alcd'>
            <column aggregation='None' caption='Bathrooms (bin)' datatype='integer' name='[Bathrooms (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[bathrooms]' peg='0' size='1' />
            </column>
            <column aggregation='None' datatype='integer' name='[Bedrooms (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[bedrooms]' peg='0' size='1' />
            </column>
            <column caption='Price Trends by Periods of Time' datatype='string' name='[Calculation_1312799340667265028]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [yr_built]&lt;2000 THEN &quot;1900-1999&quot;&#13;&#10;ELSEIF [yr_built]&lt;2010 THEN &quot;2000-2009&quot;&#13;&#10;ELSE &quot;2010 - Present&quot;&#13;&#10;END' />
            </column>
            <column caption='Bathrooms' datatype='real' name='[bathrooms]' role='measure' type='quantitative' />
            <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
            <column-instance column='[price]' derivation='Median' name='[med:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Bedrooms (bin)]' derivation='None' name='[none:Bedrooms (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[zipcode]' derivation='None' name='[none:zipcode:ok]' pivot='key' type='ordinal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column caption='Yr Built' datatype='integer' name='[yr_built]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Bathrooms (bin),Bedrooms (bin))]'>
            <groupfilter function='reorder-dimensionality' user:ui-action-filter='[Action6_A2582F5EA88441C2A6C330F3EEF5B522]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='3' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[Bathrooms (bin)]' member='2' />
                  <groupfilter function='member' level='[Bathrooms (bin)]' member='3' />
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[Bathrooms (bin)]' />
                <hierarchy name='[none:Bedrooms (bin):ok]' />
              </order>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Price Trends by Periods of Time)]'>
            <groupfilter function='union' user:ui-action-filter='[Action4_26524BA88C0545D6A0977D59FF566067]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_1312799340667265028]' member='&quot;1900-1999&quot;' />
              <groupfilter function='member' level='[Calculation_1312799340667265028]' member='&quot;2010 - Present&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Zipcode)]'>
            <groupfilter function='union' user:ui-action-filter='[Action2_11E2714E74D74FC3A3DF01F673020DB2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[zipcode]' member='98001' />
              <groupfilter function='member' level='[zipcode]' member='98002' />
              <groupfilter function='member' level='[zipcode]' member='98003' />
              <groupfilter function='member' level='[zipcode]' member='98004' />
              <groupfilter function='member' level='[zipcode]' member='98005' />
              <groupfilter function='member' level='[zipcode]' member='98006' />
              <groupfilter function='member' level='[zipcode]' member='98007' />
              <groupfilter function='member' level='[zipcode]' member='98008' />
              <groupfilter function='member' level='[zipcode]' member='98010' />
              <groupfilter function='member' level='[zipcode]' member='98011' />
              <groupfilter function='member' level='[zipcode]' member='98014' />
              <groupfilter function='member' level='[zipcode]' member='98019' />
              <groupfilter function='member' level='[zipcode]' member='98022' />
              <groupfilter function='member' level='[zipcode]' member='98023' />
              <groupfilter function='member' level='[zipcode]' member='98024' />
              <groupfilter function='member' level='[zipcode]' member='98027' />
              <groupfilter function='member' level='[zipcode]' member='98028' />
              <groupfilter function='member' level='[zipcode]' member='98029' />
              <groupfilter function='member' level='[zipcode]' member='98030' />
              <groupfilter function='member' level='[zipcode]' member='98031' />
              <groupfilter function='member' level='[zipcode]' member='98032' />
              <groupfilter function='member' level='[zipcode]' member='98033' />
              <groupfilter function='member' level='[zipcode]' member='98034' />
              <groupfilter function='member' level='[zipcode]' member='98038' />
              <groupfilter function='member' level='[zipcode]' member='98039' />
              <groupfilter function='member' level='[zipcode]' member='98040' />
              <groupfilter function='member' level='[zipcode]' member='98042' />
              <groupfilter function='member' level='[zipcode]' member='98045' />
              <groupfilter function='member' level='[zipcode]' member='98052' />
              <groupfilter function='member' level='[zipcode]' member='98053' />
              <groupfilter function='member' level='[zipcode]' member='98055' />
              <groupfilter function='member' level='[zipcode]' member='98056' />
              <groupfilter function='member' level='[zipcode]' member='98058' />
              <groupfilter function='member' level='[zipcode]' member='98059' />
              <groupfilter function='member' level='[zipcode]' member='98065' />
              <groupfilter function='member' level='[zipcode]' member='98070' />
              <groupfilter function='member' level='[zipcode]' member='98072' />
              <groupfilter function='member' level='[zipcode]' member='98074' />
              <groupfilter function='member' level='[zipcode]' member='98075' />
              <groupfilter function='member' level='[zipcode]' member='98077' />
              <groupfilter function='member' level='[zipcode]' member='98092' />
              <groupfilter function='member' level='[zipcode]' member='98102' />
              <groupfilter function='member' level='[zipcode]' member='98103' />
              <groupfilter function='member' level='[zipcode]' member='98105' />
              <groupfilter function='member' level='[zipcode]' member='98106' />
              <groupfilter function='member' level='[zipcode]' member='98107' />
              <groupfilter function='member' level='[zipcode]' member='98108' />
              <groupfilter function='member' level='[zipcode]' member='98109' />
              <groupfilter function='member' level='[zipcode]' member='98112' />
              <groupfilter function='member' level='[zipcode]' member='98115' />
              <groupfilter function='member' level='[zipcode]' member='98116' />
              <groupfilter function='member' level='[zipcode]' member='98117' />
              <groupfilter function='member' level='[zipcode]' member='98118' />
              <groupfilter function='member' level='[zipcode]' member='98119' />
              <groupfilter function='member' level='[zipcode]' member='98122' />
              <groupfilter function='member' level='[zipcode]' member='98125' />
              <groupfilter function='member' level='[zipcode]' member='98126' />
              <groupfilter function='member' level='[zipcode]' member='98133' />
              <groupfilter function='member' level='[zipcode]' member='98136' />
              <groupfilter function='member' level='[zipcode]' member='98144' />
              <groupfilter function='member' level='[zipcode]' member='98146' />
              <groupfilter function='member' level='[zipcode]' member='98148' />
              <groupfilter function='member' level='[zipcode]' member='98155' />
              <groupfilter function='member' level='[zipcode]' member='98166' />
              <groupfilter function='member' level='[zipcode]' member='98168' />
              <groupfilter function='member' level='[zipcode]' member='98177' />
              <groupfilter function='member' level='[zipcode]' member='98178' />
              <groupfilter function='member' level='[zipcode]' member='98188' />
              <groupfilter function='member' level='[zipcode]' member='98198' />
              <groupfilter function='member' level='[zipcode]' member='98199' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Zipcode)]</column>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Bathrooms (bin),Bedrooms (bin))]</column>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Price Trends by Periods of Time)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Longitude (generated)]' field-type='quantitative' max='-13415737.641836215' min='-13740608.651248749' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Latitude (generated)]' field-type='quantitative' max='6091050.1987268869' min='5910829.7795165675' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:price:qk]' palette='blue_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:price:qk]' />
              <lod column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:zipcode:ok]' />
              <geometry column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#898989' fontsize='12'>The median price for zip code </run>
                <run bold='true' fontcolor='#f17b79' fontsize='12'><![CDATA[<[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:zipcode:ok]>]]></run>
                <run bold='true' fontcolor='#898989' fontsize='12'> is $</run>
                <run bold='true' fontcolor='#f17b79' fontsize='12'><![CDATA[<[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:price:qk]>]]></run>
                <run bold='true' fontcolor='#b4b4b4' fontsize='12'>.</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Latitude (generated)]</rows>
        <cols>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{FB8295C7-665D-4D88-9ABA-E9E286CF8F73}' />
    </worksheet>
    <worksheet name='raw/reno sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#203cbc' fontsize='14'>Renovation Sales vs Original Design</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='regression_data1 (regression_data)' name='federated.0ibg9u21a1zdsg17cetup0v5alcd' />
          </datasources>
          <datasource-dependencies datasource='federated.0ibg9u21a1zdsg17cetup0v5alcd'>
            <column aggregation='None' caption='Bathrooms (bin)' datatype='integer' name='[Bathrooms (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[bathrooms]' peg='0' size='1' />
            </column>
            <column aggregation='None' datatype='integer' name='[Bedrooms (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[bedrooms]' peg='0' size='1' />
            </column>
            <column caption='Price Trends by Periods of Time' datatype='string' name='[Calculation_1312799340667265028]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [yr_built]&lt;2000 THEN &quot;1900-1999&quot;&#13;&#10;ELSEIF [yr_built]&lt;2010 THEN &quot;2000-2009&quot;&#13;&#10;ELSE &quot;2010 - Present&quot;&#13;&#10;END' />
            </column>
            <column caption='Bathrooms' datatype='real' name='[bathrooms]' role='measure' type='quantitative' />
            <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
            <column-instance column='[Yr Renovated Set 2]' derivation='InOut' name='[io:Yr Renovated Set 2:nk]' pivot='key' type='nominal' />
            <column-instance column='[Bedrooms (bin)]' derivation='None' name='[none:Bedrooms (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[yr_built]' derivation='None' name='[none:yr_built:qk]' pivot='key' type='quantitative' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column-instance column='[price]' derivation='Median' name='[win:med:price:qk:21]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-5' ordering-type='Field' to='5' type='WindowTotal' window-options='IncludeCurrent'>
                <order field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[io:Yr Renovated Set 2:nk]' />
                <order field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:yr_built:qk]' />
              </table-calc>
            </column-instance>
            <column caption='Yr Built' datatype='integer' name='[yr_built]' role='dimension' type='ordinal' />
            <column caption='Yr Renovated' datatype='integer' name='[yr_renovated]' role='dimension' type='quantitative' />
            <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Bathrooms (bin),Bedrooms (bin))]'>
            <groupfilter function='reorder-dimensionality' user:ui-action-filter='[Action6_A2582F5EA88441C2A6C330F3EEF5B522]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='3' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[Bathrooms (bin)]' member='2' />
                  <groupfilter function='member' level='[Bathrooms (bin)]' member='3' />
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[Bathrooms (bin)]' />
                <hierarchy name='[none:Bedrooms (bin):ok]' />
              </order>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Price Trends by Periods of Time)]'>
            <groupfilter function='union' user:ui-action-filter='[Action4_26524BA88C0545D6A0977D59FF566067]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_1312799340667265028]' member='&quot;1900-1999&quot;' />
              <groupfilter function='member' level='[Calculation_1312799340667265028]' member='&quot;2010 - Present&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Zipcode)]'>
            <groupfilter function='union' user:ui-action-filter='[Action1_2D9A7A6655F24FBBB52D8DE981D7434D]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[zipcode]' member='98001' />
              <groupfilter function='member' level='[zipcode]' member='98002' />
              <groupfilter function='member' level='[zipcode]' member='98003' />
              <groupfilter function='member' level='[zipcode]' member='98004' />
              <groupfilter function='member' level='[zipcode]' member='98005' />
              <groupfilter function='member' level='[zipcode]' member='98006' />
              <groupfilter function='member' level='[zipcode]' member='98007' />
              <groupfilter function='member' level='[zipcode]' member='98008' />
              <groupfilter function='member' level='[zipcode]' member='98010' />
              <groupfilter function='member' level='[zipcode]' member='98011' />
              <groupfilter function='member' level='[zipcode]' member='98014' />
              <groupfilter function='member' level='[zipcode]' member='98019' />
              <groupfilter function='member' level='[zipcode]' member='98022' />
              <groupfilter function='member' level='[zipcode]' member='98023' />
              <groupfilter function='member' level='[zipcode]' member='98024' />
              <groupfilter function='member' level='[zipcode]' member='98027' />
              <groupfilter function='member' level='[zipcode]' member='98028' />
              <groupfilter function='member' level='[zipcode]' member='98029' />
              <groupfilter function='member' level='[zipcode]' member='98030' />
              <groupfilter function='member' level='[zipcode]' member='98031' />
              <groupfilter function='member' level='[zipcode]' member='98032' />
              <groupfilter function='member' level='[zipcode]' member='98033' />
              <groupfilter function='member' level='[zipcode]' member='98034' />
              <groupfilter function='member' level='[zipcode]' member='98038' />
              <groupfilter function='member' level='[zipcode]' member='98039' />
              <groupfilter function='member' level='[zipcode]' member='98040' />
              <groupfilter function='member' level='[zipcode]' member='98042' />
              <groupfilter function='member' level='[zipcode]' member='98045' />
              <groupfilter function='member' level='[zipcode]' member='98052' />
              <groupfilter function='member' level='[zipcode]' member='98053' />
              <groupfilter function='member' level='[zipcode]' member='98055' />
              <groupfilter function='member' level='[zipcode]' member='98056' />
              <groupfilter function='member' level='[zipcode]' member='98058' />
              <groupfilter function='member' level='[zipcode]' member='98059' />
              <groupfilter function='member' level='[zipcode]' member='98065' />
              <groupfilter function='member' level='[zipcode]' member='98070' />
              <groupfilter function='member' level='[zipcode]' member='98072' />
              <groupfilter function='member' level='[zipcode]' member='98074' />
              <groupfilter function='member' level='[zipcode]' member='98075' />
              <groupfilter function='member' level='[zipcode]' member='98077' />
              <groupfilter function='member' level='[zipcode]' member='98092' />
              <groupfilter function='member' level='[zipcode]' member='98102' />
              <groupfilter function='member' level='[zipcode]' member='98103' />
              <groupfilter function='member' level='[zipcode]' member='98105' />
              <groupfilter function='member' level='[zipcode]' member='98106' />
              <groupfilter function='member' level='[zipcode]' member='98107' />
              <groupfilter function='member' level='[zipcode]' member='98108' />
              <groupfilter function='member' level='[zipcode]' member='98109' />
              <groupfilter function='member' level='[zipcode]' member='98112' />
              <groupfilter function='member' level='[zipcode]' member='98115' />
              <groupfilter function='member' level='[zipcode]' member='98116' />
              <groupfilter function='member' level='[zipcode]' member='98117' />
              <groupfilter function='member' level='[zipcode]' member='98118' />
              <groupfilter function='member' level='[zipcode]' member='98119' />
              <groupfilter function='member' level='[zipcode]' member='98122' />
              <groupfilter function='member' level='[zipcode]' member='98125' />
              <groupfilter function='member' level='[zipcode]' member='98126' />
              <groupfilter function='member' level='[zipcode]' member='98133' />
              <groupfilter function='member' level='[zipcode]' member='98136' />
              <groupfilter function='member' level='[zipcode]' member='98144' />
              <groupfilter function='member' level='[zipcode]' member='98146' />
              <groupfilter function='member' level='[zipcode]' member='98148' />
              <groupfilter function='member' level='[zipcode]' member='98155' />
              <groupfilter function='member' level='[zipcode]' member='98166' />
              <groupfilter function='member' level='[zipcode]' member='98168' />
              <groupfilter function='member' level='[zipcode]' member='98177' />
              <groupfilter function='member' level='[zipcode]' member='98178' />
              <groupfilter function='member' level='[zipcode]' member='98188' />
              <groupfilter function='member' level='[zipcode]' member='98198' />
              <groupfilter function='member' level='[zipcode]' member='98199' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Zipcode)]</column>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Bathrooms (bin),Bedrooms (bin))]</column>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Price Trends by Periods of Time)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[win:med:price:qk:21]' scope='rows' value='Average Median Price' />
            <format attr='title' class='0' field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:yr_built:qk]' scope='cols' value='Year Built' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[io:Yr Renovated Set 2:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#898989' fontsize='12'>Houses built in </run>
                <run bold='true' fontcolor='#f17b79' fontsize='12'><![CDATA[<[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:yr_built:qk]>]]></run>
                <run bold='true' fontcolor='#898989' fontsize='12'> sold for a median price of $</run>
                <run bold='true' fontcolor='#f17b79' fontsize='12'><![CDATA[<[federated.0ibg9u21a1zdsg17cetup0v5alcd].[win:med:price:qk:21]>]]></run>
                <run bold='true' fontcolor='#898989' fontsize='12'>.</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[win:med:price:qk:21]</rows>
        <cols>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:yr_built:qk]</cols>
      </table>
      <simple-id uuid='{5A8010EA-274C-40B3-A9CF-58823A6DA932}' />
    </worksheet>
    <worksheet name='sales map (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sales by Zipcode&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='regression_data1 (regression_data)' name='federated.0ibg9u21a1zdsg17cetup0v5alcd' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ibg9u21a1zdsg17cetup0v5alcd'>
            <column-instance column='[lat]' derivation='Avg' name='[avg:lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[long]' derivation='Avg' name='[avg:long:qk]' pivot='key' type='quantitative' />
            <column-instance column='[id]' derivation='Count' name='[cnt:id:qk]' pivot='key' type='quantitative' />
            <column caption='Id' datatype='string' name='[id]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Long' datatype='real' name='[long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[zipcode]' derivation='None' name='[none:zipcode:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:id:qk]' />
              <lod column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:zipcode:ok]' />
              <geometry column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:lat:qk]</rows>
        <cols>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:long:qk]</cols>
      </table>
      <simple-id uuid='{78556E28-78F9-4292-B379-340622214192}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='seattle metrics float'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#203cbc' fontsize='22'>Seattle Area Housing Market Metrics</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run bold='true' fontalignment='1' fontcolor='#47c9d0'>21,598 sales in 2014 - 2015</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f5f5f5' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='background-color' value='#ffffff' />
          <format attr='border-style' value='solid' />
          <format attr='border-width' value='2' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
      </style>
      <size maxheight='700' maxwidth='1300' minheight='700' minwidth='1300' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97714' id='43' param='horz' type-v2='layout-flow' w='98770' x='615' y='1143'>
            <zone h='97714' id='41' param='horz' type-v2='layout-flow' w='98770' x='615' y='1143'>
              <zone h='97714' id='38' param='horz' type-v2='layout-flow' w='98770' x='615' y='1143'>
                <zone h='97714' id='35' param='horz' type-v2='layout-flow' w='98770' x='615' y='1143'>
                  <zone h='97714' id='32' param='horz' type-v2='layout-flow' w='98770' x='615' y='1143'>
                    <zone h='97714' id='19' param='vert' type-v2='layout-flow' w='98770' x='615' y='1143'>
                      <zone fixed-size='87' h='13572' id='20' is-fixed='true' type-v2='title' w='98770' x='615' y='1143'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='84142' id='7' param='horz' type-v2='layout-flow' w='98770' x='615' y='14715'>
                        <zone h='84142' id='5' type-v2='layout-basic' w='98770' x='615' y='14715' />
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='42286' id='3' name='price map' w='31692' x='1231' y='16000' />
        <zone h='42000' id='9' name='Sales since 2000' w='29417' x='34500' y='16143' />
        <zone h='38714' id='13' name='bed pi (2)' w='31667' x='1250' y='61714' />
        <zone h='10857' id='33' name='Sales since 2000' pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:id:qk]' type-v2='color' w='11667' x='34333' y='49143' />
        <zone h='10857' id='36' name='price map' pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:price:qk]' type-v2='color' w='11667' x='1500' y='47571' />
        <zone h='12286' id='44' name='bed pi (2)' pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]' type-v2='color' w='26667' x='4917' y='92286' />
        <zone h='11857' id='45' is-centered='0' is-scaled='1' param='C:/Users/Owner/Pictures/trevipay logo.png' type-v2='bitmap' w='9667' x='1167' y='1857' />
        <zone h='36143' id='17' name='Period pricing' w='33000' x='65833' y='16429' />
        <zone h='8143' id='39' name='Period pricing' pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:sqft_living:qk]' type-v2='color' w='33083' x='65750' y='49857' />
        <zone h='38429' id='15' name='bedbathbar' w='29308' x='35692' y='61571' />
        <zone h='41000' id='11' name='raw/reno sales' w='32250' x='66083' y='61571' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#203cbc' fontsize='22'>Seattle Area Housing Market Metrics</run>
                <run fontalignment='1'>Æ&#10;</run>
                <run bold='true' fontalignment='1' fontcolor='#47c9d0'>21,598 sales in 2014 - 2015</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='2150' minheight='2150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='69' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97714' id='68' param='vert' type-v2='layout-flow' w='98770' x='615' y='1143'>
                <zone fixed-size='87' h='13572' id='20' type-v2='title' w='98770' x='615' y='1143'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='83' h='11857' id='45' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/Owner/Pictures/trevipay logo.png' type-v2='bitmap' w='9667' x='1167' y='1857'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42286' id='3' is-fixed='true' name='price map' w='31692' x='1231' y='16000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10857' id='36' name='price map' pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:price:qk]' type-v2='color' w='11667' x='1500' y='47571'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42000' id='9' is-fixed='true' name='Sales since 2000' w='29417' x='34500' y='16143'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10857' id='33' name='Sales since 2000' pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:id:qk]' type-v2='color' w='11667' x='34333' y='49143'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='253' h='36143' id='17' is-fixed='true' name='Period pricing' w='33000' x='65833' y='16429'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8143' id='39' name='Period pricing' pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:sqft_living:qk]' type-v2='color' w='33083' x='65750' y='49857'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='269' h='38429' id='15' is-fixed='true' name='bedbathbar' w='29308' x='35692' y='61571'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41000' id='11' is-fixed='true' name='raw/reno sales' w='32250' x='66083' y='61571'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='271' h='38714' id='13' is-fixed='true' name='bed pi (2)' w='31667' x='1250' y='61714'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12286' id='44' name='bed pi (2)' pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]' type-v2='color' w='26667' x='4917' y='92286'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{33783D6A-48C3-403E-9393-91B20039F6BB}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='seattle metrics tiled'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#203cbc' fontsize='22'>Seattle Area Housing Market Metrics</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run bold='true' fontalignment='1' fontcolor='#47c9d0'>21,598 sales in 2014 - 2015</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f5f5f5' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='background-color' value='#ffffff' />
          <format attr='border-style' value='solid' />
          <format attr='border-width' value='2' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
      </style>
      <size maxheight='700' maxwidth='1200' minheight='700' minwidth='1200' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97714' id='43' param='horz' type-v2='layout-flow' w='98666' x='667' y='1143'>
            <zone h='97714' id='41' param='horz' type-v2='layout-flow' w='98666' x='667' y='1143'>
              <zone h='97714' id='38' param='horz' type-v2='layout-flow' w='98666' x='667' y='1143'>
                <zone h='97714' id='35' param='horz' type-v2='layout-flow' w='98666' x='667' y='1143'>
                  <zone h='97714' id='32' param='horz' type-v2='layout-flow' w='98666' x='667' y='1143'>
                    <zone h='97714' id='19' param='vert' type-v2='layout-flow' w='98666' x='667' y='1143'>
                      <zone fixed-size='87' h='13572' id='20' is-fixed='true' type-v2='title' w='98666' x='667' y='1143'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='84142' id='7' param='horz' type-v2='layout-flow' w='98666' x='667' y='14715'>
                        <zone h='84142' id='5' type-v2='layout-basic' w='98666' x='667' y='14715'>
                          <zone h='46714' id='3' name='price map' w='34359' x='667' y='14715'>
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                          <zone h='46714' id='9' name='Sales since 2000' w='32148' x='35026' y='14715'>
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                          <zone h='37428' id='11' name='raw/reno sales' w='37000' x='62333' y='61429'>
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                          <zone h='37428' id='13' name='bed pi (2)' w='30583' x='667' y='61429'>
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                          <zone h='37428' id='15' name='bedbathbar' w='31083' x='31250' y='61429'>
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                          <zone h='41140' id='17' name='Period pricing' w='32159' x='67174' y='14715'>
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                          <zone h='5574' id='39' name='Period pricing' pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:sqft_living:qk]' type-v2='color' w='32159' x='67174' y='55855'>
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='10857' id='33' name='Sales since 2000' pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:id:qk]' type-v2='color' w='11667' x='35917' y='50857' />
        <zone h='10857' id='36' name='price map' pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:price:qk]' type-v2='color' w='11667' x='1167' y='49571' />
        <zone h='12286' id='44' name='bed pi (2)' pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]' type-v2='color' w='26667' x='4917' y='92286' />
        <zone h='11857' id='45' is-centered='0' is-scaled='1' param='C:/Users/Owner/Pictures/trevipay logo.png' type-v2='bitmap' w='9667' x='1167' y='1857' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#203cbc' fontsize='22'>Seattle Area Housing Market Metrics</run>
                <run fontalignment='1'>Æ&#10;</run>
                <run bold='true' fontalignment='1' fontcolor='#47c9d0'>21,598 sales in 2014 - 2015</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='2100' minheight='2100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='69' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97714' id='68' param='vert' type-v2='layout-flow' w='98666' x='667' y='1143'>
                <zone fixed-size='87' h='13572' id='20' type-v2='title' w='98666' x='667' y='1143'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='83' h='11857' id='45' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/Owner/Pictures/trevipay logo.png' type-v2='bitmap' w='9667' x='1167' y='1857'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46714' id='3' is-fixed='true' name='price map' w='34359' x='667' y='14715'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10857' id='36' name='price map' pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:price:qk]' type-v2='color' w='11667' x='1167' y='49571'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46714' id='9' is-fixed='true' name='Sales since 2000' w='32148' x='35026' y='14715'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10857' id='33' name='Sales since 2000' pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:id:qk]' type-v2='color' w='11667' x='35917' y='50857'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41140' id='17' is-fixed='true' name='Period pricing' w='32159' x='67174' y='14715'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5574' id='39' name='Period pricing' pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:sqft_living:qk]' type-v2='color' w='32159' x='67174' y='55855'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='254' h='37428' id='13' is-fixed='true' name='bed pi (2)' w='30583' x='667' y='61429'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12286' id='44' name='bed pi (2)' pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]' type-v2='color' w='26667' x='4917' y='92286'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='254' h='37428' id='15' is-fixed='true' name='bedbathbar' w='31083' x='31250' y='61429'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='254' h='37428' id='11' is-fixed='true' name='raw/reno sales' w='37000' x='62333' y='61429'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D6F7B13C-7B88-42ED-A03A-1DFD0BB65069}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='seattle metrics float'>
      <viewpoints>
        <viewpoint name='Period pricing'>
          <zoom type='entire-view' />
          <highlight field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[ctd:id:qk]' type='size'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Sales since 2000'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='bed pi (2)'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='bedbathbar'>
          <zoom type='fit-height' />
        </viewpoint>
        <viewpoint name='price map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='raw/reno sales'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='15' />
      <simple-id uuid='{9B747C4F-4D4A-450A-B0FF-E31EB8D2E96D}' />
    </window>
    <window class='dashboard' name='seattle metrics tiled'>
      <viewpoints>
        <viewpoint name='Period pricing'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Calculation_1312799340667265028:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:price:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:price:qk]</field>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[ctd:id:qk]</field>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:sqft_living:qk]</field>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Calculation_1312799340667265028:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>500493.46650717704</value>
                  <value>269</value>
                  <value>1800.0</value>
                  <value>&quot;2010 - Present&quot;</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Calculation_1312799340667265028:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:price:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:price:qk]</field>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[ctd:id:qk]</field>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:sqft_living:qk]</field>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Calculation_1312799340667265028:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>501477.30698388332</value>
                  <value>772</value>
                  <value>1790.0</value>
                  <value>&quot;2000-2009&quot;</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Calculation_1312799340667265028:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:price:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:price:qk]</field>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[ctd:id:qk]</field>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:sqft_living:qk]</field>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Calculation_1312799340667265028:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>540543.61557788949</value>
                  <value>2679</value>
                  <value>1980.0</value>
                  <value>&quot;1900-1999&quot;</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
          <highlight field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[ctd:id:qk]' type='size'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Sales since 2000'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='bed pi (2)'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='bedbathbar'>
          <zoom type='fit-height' />
        </viewpoint>
        <viewpoint name='price map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='raw/reno sales'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='13' />
      <simple-id uuid='{31E37693-E333-400A-9088-97F48BD12DFA}' />
    </window>
    <window class='worksheet' name='raw/reno sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[io:Yr Renovated Set 2:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[io:Yr Renovated Set 2:nk]</field>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:yr_built:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B548D59F-816E-49A2-98F5-02CE317F463F}' />
    </window>
    <window class='worksheet' name='price map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:price:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Latitude (generated)]</field>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:price:qk]</field>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[prc10:zipcode:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{567EEA5F-8952-4372-BC68-6CACC3BFFFCC}' />
    </window>
    <window class='worksheet' name='sales map (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:id:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:id:qk]</field>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:id:ok]</field>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:zipcode:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1F77B633-3A83-4422-9699-DDA0F08B98A5}' />
    </window>
    <window class='worksheet' name='Sales since 2000'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:id:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:id:qk]</field>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:id:ok]</field>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:yr_built:ok]</field>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:zipcode:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{61BC908A-7F71-4BD9-84A0-CACE60CD90D5}' />
    </window>
    <window class='worksheet' name='bed pi (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]</field>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):qk]</field>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:zipcode:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{7D4557D3-8A04-4CF8-BD8B-C248136C179A}' />
    </window>
    <window class='worksheet' name='Bath'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bathrooms (bin):ok]' type='color' />
            <card pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:bathrooms:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[:Measure Names]</field>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bathrooms (bin):ok]</field>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bathrooms (bin):qk]</field>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]</field>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):qk]</field>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[sum:bedrooms:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D7DE3C83-C67F-446D-82F8-A14C24336899}' />
    </window>
    <window class='worksheet' name='Period pricing'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[ctd:id:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:sqft_living:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Calculation_1312799340667265028:nk]</field>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:id:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A4F1BB84-69BB-4E09-8C62-B9970561837A}' />
    </window>
    <window class='worksheet' name='bedbathbar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bathrooms (bin):ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[:Measure Names]</field>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bathrooms (bin):ok]</field>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DE8FD508-696B-4C5D-92E2-4D8E6888B977}' />
    </window>
    <window class='worksheet' name='bedbathbar (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:bathrooms:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[:Measure Names]</field>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bathrooms (bin):ok]</field>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DA14D81B-B03C-4B7F-819A-A80D52C486B2}' />
    </window>
    <window class='worksheet' name='Sheet 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Calculation_1363746311673958404:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{928D5B0D-EEB0-441B-9A95-DC72CA02174D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Bath' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Period pricing' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sales since 2000' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 10' width='164'>
      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
    </thumbnail>
    <thumbnail height='192' name='bed pi (2)' width='192'>
      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
      gJT2/1XCXpkySVfkAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='bedbathbar' width='192'>
      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
    </thumbnail>
    <thumbnail height='124' name='bedbathbar (2)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAB8CAYAAAA/1L8JAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAPDElEQVR4nO3deVSV1RrH8W+CExpeBxwCA80EUoySi6Kiaag5BYbpMm7hbGpOOA84i9o1
      0VCTQotMCxWHFIcgB0wjIs0cAAcEgaugoKCQwjl6/0AUwQA5B8/hvM9nLdeC/W42ey33j/d9
      z9nPeV948ODBA4RQqEq6noAQuiQBEIomARCKJgEQiiYBEIomARCKJgEQiiYBEIomARCKJgEQ
      iiYBEIomARCKJgEQiiYBMCiZRPp+SGcnBxyc3Zgc+BeZup5SeVJlc/loID6j3XD2CCShDENI
      AAxISvA0xkc5sCIkgohd46ixeQKfhWfpelrlJiHIizmh4Oxkw99lHEMCYDCSCfvxd9p5DOON
      OsYY1+nC6CFNCdl1BEONgKXHOjYu8MTZsmqZx5AAGIxLnD9rTasWNR61NGhsSeXzl8t0aaAU
      EgBDZv4yTa+mckPX89BjEgBDlnyFuEb1qafreegxCYDBeIXmLWL56+zjK/6UxARymzfBUoez
      0ncSAINhjsu7/+b4pgBOpqtQpR9k7YazdOnWiRol/7BivSCfCmFIMon0HcO0LdHcNrbgrWEL
      mOPZClNdT6tcJBDo4Y5fbOH2XqyImk/HUo4iARCKJpdAQtEkAELRJABC0SQAQtGMS+oQFRX1
      POYhhE7Iq0DlLCy5yOt0Bi1HVbGWk1wCCUWTAAhFkwAIRZMACEXTKACq7MscDfRhtJszHoFS
      dlHR5VwJZe2AzvS1sKHra52Z43eaOw+PqdN+ZcOjY73xCXh8TF+ps+P5Y70Pi3t2wO/w0/to
      EIAEgrzmEIozTjZlrcgU+uM4AWMisJ61haCkGPZHfU2H6Jl8HwmQRujEVVTyyj+2mjanJrN6
      rz4XWyawb/Jizlh8wCSvt/+hj6rk9wH+mSUe6zYCED637KMIfeHIyB3tMMpfESZWvN3XDr8s
      gFguZPfgvTZmVMk/NsadqF9ugN5utrak99qv8r48/PQe6kvfyj2AyGf8ePEDZJxm87aadHQE
      cKSzfQhb910nh7xLi5+/PIvN2xW51CaFg8tiNDkDCMOkIuOP9Xy2GjxWzsS6BoAxLWcHkDO7
      H72GX4E6tgxYE8iwJrqea9nd2fMZp96dLWcAUVAO8QHTWHOyHVO/Hol1rfz2TCJne3O2zyZC
      kmLYH+GLzQEv1h7V53uAYmSFszG0LYN7m0oAxGM3guaw23IW04bZUbPggcTdBOW68+HDewAj
      Eys6DHUmds8fOpqpZlK2fcWeXbP4yMpWAiDy/cGOQ28wsGsdjAofamSDzbkgQk5lkgNw7zqn
      d4aRa9Hw+U9TCxp4biQkPpqQ+GgNNsMlBOLh7kfRkswVRM0vbUWm4aswm+ESNzHJaSF/FWp+
      bd4BVg2zRH0xhFVTfTgYmcY900bYv+/NFO8u1C90F6k/m+HC8bMayf7CzR/4E+LzeH3KbtBy
      VmECoCX6E4DSkUsgoWgSAKFoEgChaBIAoWjyTrDQqg2R/9P1FJ6JnAGEokkAhKJJAISiSQCE
      okkAhKJpEAAV6ScDmdyvM04OCnkurYErriYYVKSG+jDR3p6uFvb07zaP4zp6+NiDu0mkhKwh
      Ymo/Tpwsrqea24cWEza8J8H9XQldFUx6gR3c9xP3aBKA46zxPond9CCOREVxfLMnDwIn4F8x
      d8iKYmuCQR3py1T/Wgw5EEloUhSB3wyiWXVdzDOZuLWruWHmikP/9sX2fBCznqgzbWjrtxv3
      LVtx7pTKyQ3hqAA4w9mVJzV4H+Bua7x2dqRG/giN36RVo0wi4tOgdd0yDyt0pbia4CyOb4yg
      +6Jg7BrkHa7+khU6Wf+Y84rX0rwvi/3rD1mX0nnJbQQ1qwEYUc1+BC0il3Htbkcsbl8k3bq7
      BmeAajUeL34g86+d/BRrTVsHWfwVU3E1wTHEpPWig42OplZG1erdJ37fL9zNzfv+ftZ1qJzB
      7auAWQcsM7Zq453gHM4HTcVr9UXafPotHhW5Tlrw9JrgLLLUF9k/yI3QYzHc/PtFLF0/YYqP
      Z4GySf1j3GYcb8bN49DwuWRnV6Wq1Zs0rJ1CpVsA9bCa8ImGAVDFETxxFMuvdWDxluV0aSQ7
      Kyq2HOIDZrCZQUz9ulBZJI3psHA6no1NqaLKJmn7bOavjGTdXMeiFWR6oyZmA5fTY+DjltT1
      E8loBKivcMEvSJOb4EzCF45ieeYHbPreWxa/AfjHmmBaYGOWQU4j07zPBTI2waK/Gy1ORHNN
      JzMtI/Uprp1rzr/MgLM7+Z+1hwYBSN7N+pB6fLzAk6ay9g1AMTXB1KVD9zQClh4l7R6gyiZp
      y04SXZwwf/4TLb17yWQm3eE+QO5Vrqz9jJtd38XMCLBoTpVjIRqURIbPxcErpEiz9dhgNnnK
      jUC+ClMSWUJNMGQSGzCf/64IISG3Lq9082LWKncaF/rjt+54cjlPNJIT/WdwuXCzyxLcRzjy
      d9hUDl8fTI+BtkAcFxbMIvpMKrkm9THrPp22A1/PO4sBOec2SU1weaswAdCS8g9AcW5weckX
      VB7njUUpP7FRtkIIw3HtF+60HVXqxQ9SECMMSUM37J7xo4rkDCAUTQIgFE0ugcrZC7qewHMW
      uyNC11N4JnIGEIomARCKJgEQiiYBEIomARCKpkEAUgn3HU2/zk44ODjg1Lkfk4PO5z1AQVRI
      6ux4fg9YzLxu7fE9VPhoXk3wBHt7XCzseb/bPI7pqCb4EUtndm6cyZ4B9UvsWqttX37ZPBO/
      AlWU1Ru/rkkArnLTZCBLdx0hKiqCn9f25PrKsaw5VfYRhS4lsGfiIk6bezBtStHn6qojfZni
      X4uhByIJS4ri228G8apuaiIfMsHjPzYc23eh5K7GjRn/njG7DqYVaLRh4cSmmgTgdVxHOtPM
      tApgjIntW3R6OY1bGWUfUeiSJa7+AQzpYUX1Iu8O5dcEj8GuQd7/d/WXrKivw0cE1+vUiz6X
      d7My4X4JPY2w69+FRiEh7LldsP0CM6bu0M49QE7mRUIXTuPramPxbKeNEYV+iSE6rRfO+lIT
      bPwKk97JwHfLNXJL6tvAgWmWp/E+kl3ogJpclZZugisZ16VJ21Y0jDvI0SsqbQwp9EoWWep7
      3El8+JA8VTZJW7wYNj8S9fOeimUnvhsOc2b8xG8lLLVa7fsS4BjLf5ac4Om3K5W1sxXC2KQ2
      zbp6M/YXB/yPJuPZVApiDEsLbM2OFy2JdI3mGo7PtSqsp5sTr7epxAnngq3WnHY8Rv9JR4h+
      1FYXT1db2ljYcnpgwb4zOd1mJ3YrzmHZp68GATi1C//MFvRvbUVtE2NyUkP5OaIy5u3qlXlI
      oa/ySiKnLz3K/CnO1DXKJmn7ThJdPn7uJZF7Vy1lb8GG9u7ssThK76DUQj3T+HyqD58XaLEd
      MJLRSf6MPQbwCh/bJ2kQgEa1yfafzYCZF0n/Gyq/aEX7Qf7M6a7DOyOhgXB8LUbwuMh1S97X
      Hl8StqwjNft480nKfKa9MZz4hyWRs1c119ls/4ml2xA2mR2iw1dFiiafZP4StrbOUhJZ3n5W
      WEnkhCnBOvzt/2LUwp5kLt/MplK+GinvBAvDYWnHy5F7S734QeoBhCFJOMqMhGf7ETkDCEWT
      AAhFk0sgoVW9hxfdR6TP5AwgFE0CIBRNAiAUTQIgFE0CIBRNKwFICPTAwcEBh7nh2hhO6J1U
      IpeNYqS9PS4WNvSyd8MnKO75b4V+6P7fV4jbtoLtw3uy/7fieqrJPvsDPw7vyfIubVnu/iH7
      DqWQX0Jz99QXWghA1gHWBJgzfLC1xkMJPXX3KhkWQ5kfHklYUgw7whfRbOsUgmJ0MZlETi5b
      QWKDfvQe3LH4rte2c+CHu7ScG4zXwQgmfDmJGsHLOHMTuLGbkI1VNA2AinPf+JM8bAzv1Cy5
      t6igqr1OVw8HGprmPVqiimlLnFxqcUcnT0VvTOt5K+nk/DJVSno4mdl7uC4cRFOL6lQCjOva
      08K5DveygUtnqer6oYYBSNmF34+OjJdHQyqGOvsa57cvZM1JV3o56no2JTAyemKB308NIyLa
      mmbmgFlDbgRv1SQAWYSv/RJGDMZR3k9WgHB8LWzo3rwvX8S0Z8Lnrvr9fLAn5HArbAlBG8HZ
      +31qAzT9kD7dY8seANW5b1gZ4cIw1wbam6fQYx2ZmBRD2KUDTOudxdYhC4msCJ8Aor7FhTUz
      iTIZwoBJLpg+umwyom6PBWXfCxQZ/B1X0nIZ2TaoQKsXDhfHErzJE7koMlBVTWnYqg9jh/2O
      145kHAfp83lATdI3n5Le0weXJlWe2qPMAWjn/StR3o+/Twj0wD1uJFHzS7gzFxXPiV1szmxB
      L0crapkYo86O5/D23zDrMU3XMyvezb2cuNeP3k9d/OmkXcyV3aCiFMxfour3ixg1OoLUTKha
      z4b2nyxnXE9d1H//yv4uE/nz0fc7877u7ct0Lydu7xnHxpQRjB7aEuJiOb9tMZ9ue3IE+yUR
      vNMG0ndPlprg8qa0muCw87d0+Nuv8+eMVVSduQjbF0v3E7IVQhiO5MPc7Di+1IsfpCBGGBLz
      9+n8jPfkcgYQiiYBEIomN8FCq3Zdji65kx6RM4BQNAmAUDQJgFA0CYBQNAmAUDSNAvCoFrjA
      PykLFvoiNzGM9R5v49H0Ndzs32bx2tPceXhMnf4nP45/T7N3ghPiYrEeG8wmT9n8LPTNcb4d
      F0GzBT/wkZ0ZlbLjOTJ9PMFRu/B0SOaA93pyBqzQJADJJMaDaSspBhb6yJFBW9thlL/CTazo
      9G5L/O8ANKD7Kj+MjDW6BMrgVjrUN6urhckKoW3Gjxc/QMZptu2oSft/P3lMgzPALdJvQIiX
      AyFA9TrNaOMxkzmerTAt+6BCaJmKjBMbWP0F9F8+g1cLlTBoaStEDplnvmPs8K9oMC+MT+VB
      eYqlX1shcriyYRZb+YiRQ+x48mJdRUbYf7X1MmgVTFsOYWi3XJKvPf2RxEI8b2lb57H/5RlM
      KLL4QR21Gv/L/TQIwKkf8N19hqvZKkBFdvQG1v9kSrMm8pxgoQ9OsOeIPe4udSj6+VlpHP7u
      Hj0Hv6rBPUCT1jTbu4RhK6JJuZ1L5Rdt6TpjHbM6yuWP0ANJMZzfu4ihTec90Ww9ex/LhiRz
      6adA/JoHynZooV36dQ9QMtkKIRTt/yqsGbwjO8BXAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='price map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='raw/reno sales' width='192'>
      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
      SGxEF0iQ0Px/YacVV1LF+JMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='sales map (2)' width='192'>
      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
      iKaiC3Lg7VD6Ws1iyMXrNM10pegkiKDtKN6wFopPM49WDU5ThH3ijm8T0HP6nNnQ7ZrIUYUc
      VSKQ7J/su9Y/Xu9x1qPRaKDT6aDRaLibU0mS4OjoqJhTGWZrmdhJYc90jkyfMKZ4XdW32Sy9
      sAGo+l1eT2FdhclaroPTLYkDbNSLDTrKv2s7sg571wbiQxytPQ3xXR0mmwO6ZRYE69YXYwya
      zabjQHEcY7lcqpyobAycGpeVA453Wkvv0CUYyojJ27c2DxqQJl7E3ATWOJWivfjEkWO17SOS
      TOEH1sNoFovaAvIDG2yAMqqllfWV8yFlVXt1FC/OLWTfuPzIzyEyydai1+0jiiIntsVxjMVi
      gSRJnGihiYF1F1NSLx/X0zhaFfDUqcYYjMfjNQc6kqEtNtOz6kBG/TeLebRtPQF8zjzEUoPK
      DVCmVPjKa+yHP/OJJ7Ie7W/Zpmu1WoXUP1pZl2o1e8spnovFwjkDkvgmlfJN5kIbp08sOg7I
      eaa+t9ttdDodJEmCxWLhKOLOzg7iJMZ4MkEqPFaNMbCeTWGCwPuMgzPl5t+yeoPsiUa4Aaw9
      ICJ24igTq15UrddW7wNoCL/qU3kb2sbhUPU+iSg8QpuvHS1jPXdj1hBd24B19AWNKmqbfVMd
      gM8V5fxK0xRxHLuk3/Q7bRBjDNrNFtIki8rHmzJBuI6QADL3mBKzqaH/HPYXhKFMTFcO94Qa
      kJ1/ELHbkgco7xu1YgxgVn39/yNXXTWSLiSGAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='seattle metrics float' width='192'>
      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
      5XyjyQXDYtGywnafqDYoWyZVx+Fc0+L6bIrHyjXq3kajZyKT4YU9eVSxpgHOVSv8/ewKvzQ2
      QpcshZHJ4O6ntQASMmhb3CFLkFX8xERMlbal//8G+Pz8AvsKBeK4LNkO87rOJd1kwTCYM21O
      VSrMmC6PlMrMmzZV1yOjyMiKym35DJIS59pUjJrjsmJZlBwXr8V+ZcfjhT1dzDcbzOk6qAkO
      pDSiG3L3p5MMJ5O8uLebXZqKLKu8sCvD4Ur9Cnrv8dG5FX6yt0DJMnCVGIpj8ki5ypO6za6E
      +vTDoNt4fuFcrc5yy6YeSSZxHZt523cgB7UE315e5edHhrBdm5N1nYFkknEtzpKuc8mwuTqb
      IafK6I7Nk7Umw6kUI/EYkgRN2+Z4vclQKsVIXOVkrU4mFscRgj5VoonCQEzhdK2Ogcy1mRRF
      0+CyaXNNNkNWkRHC40LTZFyLMWu57EzGOdcw2JtOAh6Pl2oErvTVuSwpPI5WG0xkMvSoT5EJ
      3sY2toIQgqYnSCs/vpn/bUN9G88YkiSR/jGPdbctANsyuXzx9A+rL9vYxnOONhNI1xu47ve3
      3W0b2/hxQpsGSCa3C3e28fzCj6/3so1tPAvY4ARL0nb8/scdnndl50Rso8MCiMViqOp2cOjH
      GYZhbFgEiqKQSGxvVV2PbRNoG89rbC+AbTyvsWEBWE2LT351EU8I5qdqfP3R8sa7hOAL31jg
      5NFVpkpbh02//e0F/uFT05xfWKvtnr5Q5uTsU9d6r8el06v82QcnMYGLZyoUdY/yUoNzc9ZT
      3rsZykWdj312mkdOtteWnDm6wplFvwS3uVzn3idqz/gZPypo1CwuTDWxnEghmRAcOVnZ8j7b
      dLgw2aBueDz5RIn6FZ4CKDyPyekG5YaLEILZ2SaVpl9WsbSks1Lx6btaNFhYfeZz+P1Aedvb
      3vbfox+YVYO//scZDt7ez6HvLHBizmB/n8LffXwaJZNAVHXe98lpTs7Z3LI7SSKX4Cv/epl7
      HqtwzYEM//zPk3z9u0XGd+fIJWU+/MVZXv+KQT706RlUy+V7x1eJJePE03HOPrHEpx5YZddg
      nPd//DJNKYa9WufvPz1Lvj/NQEHh5JNF/uFzc3QNaLzv785BLslP3FrgkfvmsQpJqpdKnK4o
      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
      sQWitDu1pYUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='seattle metrics tiled' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9d5wlV3Xg/6388uvcPT0905M0oxlJI4GSkQRYRIMT/i27GK8D7M+wi9ld
      2HVah/3Z3jWsjY1xIFiAwTa2DNhgY4MAYVkECQlphDQaTZ6ezvnlXPH+/qhX1fVev54gYwOr
      Pvq0pvu9qlv3nnvyOfeUVK/XBduwDc9RkL/dE9iGbfh2wjYDbMNzGtToH9NTp0gk00j/Ag8y
      zRaNRu1fYORt2IZnDx0MYFkmR66/GUn6l2CBbdiG7zzYNoG24TkN2wywDc9p2GaA/8vAsT0c
      dzuyfSUgPPGtYwB3G+lXDZ7r8pGPnud1bz3G2955mvmCc0X3NaoWi3nL/0MILs7VcT0f/3/3
      V+f59GPVS94vXJdf/V/H+b2PL/HP3bV7/vg0FwoeAE8/tsKffyn37Me65wyPXWxd1T2rsyVe
      95ZjfOVUHQDHtHnrfz/GPZ9bu+y9ldXKP58BhBC866NVDrxmlSdPWf/c4Z5TcOrxVZ4sKnzw
      t2/kTT80CkKAEJRLJit5CyF88mzUbRaWm1QbLsLzOPb1ZT7wt6ssrrYoly3+9++f5eJii3Ld
      7Ri/2bBZXG3heJ1kvjZXoZVKcPKJdSzXf2auaOE4HrmiDUClbLGcM/GnIMI5VBqdz5idrdGw
      RPsek4Wcf79tuSyutGhaPnNUK1b7d8F6wacTy3RZXGlSrDoIAa95zSTXT+g0GzbVpsv6+saa
      hBDkci1yJZt6Y0NQmE2HbL/G/V/NIYC5MwW8uM7CmgVCdOAOoFa1aVoe+YKJ44nOKNCzhYVV
      l+Wix1M5j8MexLYNqyuC4ZE4508scO99Oj/4khF2Dmoc+/oS7/izJQxF8LIf3MNPv6qP//YL
      T+MkFZbzDh/+7ev5y/tWOVuE0mqNu69LcGqqzjv/6Byvec1kOHZhqcp//I3TJBIK/ZP9vOdt
      e8Po3tcfzXHHXaNMPzjDU/MWt+/S+OV3nWLvoIozkOU1N2j8fx+eJ6bCna/YzVteOcD/+M0T
      1F2Z5YLDPb/7PHb1KeGzHjuWZ61P4vTZOgzqtKotfuZXTiAMlaop8d533sA/fOw8e168l5df
      r/Nz7zjLn/3uEX7+l56kqmnUUfjYO67jI39yjlf8xBFK35znPZ8vsrNPYb4o+OR7b+IfPn6e
      jz9UYTSroA2ned/PHwifP7I7S2WliuMJvvJ4iZd8Tz9P58B1HH7+V4/T0lSW8w4f/cPnc/8n
      p1hyVZ482+Q3f2bi0hrAcQQf/GQN295aUUqSxLt/Lsv0347ylb0xHm88a3p4zsHovj7+9B1H
      UBot3vyz3+SbMy0+/vdLvOEn9/GLb97LF764jCdU/t+f3MWtN/TRJ9ucL0m87ccmeNUP7Oa9
      v3KYf/NDu7j5SIb3veMoP3xHXzj2F764yK0v3snPvvkAhdM5VszgG8GDT5TJKB4jYzG+9HAe
      gFq+yZ2v3sv//A8TfPxvl/jxH9/HL77lAF/7xyVsTeWNr93NLUf7GNY8Ts93minnzld46lSF
      C4v+549+bYUbXzLJR3/nefz03Wn+/qFSz/WbtsCIKbz2+8ZQlc7v/u3r93HPb93EvrRDreXw
      mYer3Pvem/n9t++lZnbSo6QoHB1VeHrB5GxOcGTMl+uyqvKG109yyw199KsOpxd8zVORde79
      3RsYTsiX1gAf+HidX/5wlbklF09AyxK84Ead+x4yicckrt2jcs2kyuQOhT//TIN4Q3Dj2zNs
      +9ZXBqsrTbRUjDf91H4ysstT5+ooElyYriONabzu1WPMnczxsYeq/M83TLA+XcR1BRLQaLih
      ieQ6HqYtiEd2U1UkFhYbzIwovPpV48TaqZ1GrsbZNZf7718C4XF2JYf9ujFSgwluO5gEBIoC
      F2bqaKbOa39gnNWpAh/6YpFf/0+7qS5W8LzOdfz46/dydEzhoS/N8tUcxAyZSt7G9QSlqoOR
      lbEAx/Vo1h1sV4An8Wv/8waK+Rbvfu85bjja3zGmFKRj2/8IT2A5AtHqNMECuPuOAT78N7MM
      7U6H1LdwOseffrXCr71xgvxMKfST7n7BEHJ73EtS6sQOhVsPavzkDye4959a3H5U5/f/qs6B
      PSrLBZe//1qLz3+9xe//VY3hQZn7Hm6RSGwn0a4U8is13vxz3+RVb/wG952y+IEX9PFT/243
      D395iT++d5ZjF+oMDMeZOb7Gf/5fp3hm3gQJJvZlOP7lOV7/CydpeBIvOBjj37z5G/ztoxUk
      ySedV75qgup8iff/xSz/8NUiqu4/87HH8vzQv93Hu37pCO/65es4ELe5uG4jh5Qg8ROv281j
      X13mA385y2Ona2QGYqxcyPHWXzvJUzMtoqUCsgxRWpUluOXOHdTOrfH9b/wG9593ec2dWQ4f
      yvBb73yat7/rHCVLgOfw6+98hp/97TPY2SQ7MzKSDJIESBJBLlaWJCRF5TUvzPDan/4G/+OP
      Z4nmaYNn7rtugBOPrvGC2wZA8sfJDsWZP7HGf/4NH3eSBJIsdd4frQY9e/pJbnr+HaGteM8n
      63zlKZNffkOa1/5cgZN/O8J1r13jJ14apz8jM7FL4X99uIquSLzjrWl+409qPHjP4HYmeRu+
      tSAEjzyWI9VncPLxVZ6x4vzmf5j4lgx9SQ3wgpt0ZpddPvSJGnffqqMoEr/0hhSff9zkq0+a
      3HGTzo5+mV98Q4paXfCqm/UO4hfbkdFt+BZBtdjiY5+aZ7qp8t9eN/4tG/eSGqAbig78p0Ww
      hECS4IM7JX5zDb7ZhCMG7FbBBH5+GN60AO/bCQPfkjjTNmzDvwxclbc6a8PTJrxnh0TekfjF
      ZThpwl/ugvtrcCgGf1eBDxZgXIN+5fJjbsM2fDvhqhjgggm6BDUPci4YEqRlmLbAEnBn0ndI
      PlL0tcC2K/CdA0IIlhoNvpIvkbP9SIrreZyuNvC6rvtGociD+SJP15oIIThbqfJ4uYYrBEII
      TleqPFqq0vKuwMYVgvvX8vSO3XTCYqMRzq0bPCE4X63xtUKZhufPY6pW4/FyDSdIGDo2Fxob
      IVrXc/lavkRji3larnt1DHDWggMa/OwKvHUAfnXE//yTZXhFCoZV2KnCG/phTLuakbfhXxqa
      tsUjlQYjuso9s0u0PId7F1b48MJqBwM4rsk/FRtMxAwGNZXjhTyPN2xqrRqfWK/wzXyOY3UL
      yTH5s+V8eN9aq8XJagPLE5iuw8lKjWXTzwqfqtbxgKZjc7Jax2pnvKdqdaYaZugr2p6HA6y0
      WuRNi7P1ZhjqXarXOG86pCWXDy2sM10pc3+pQblZ59PrFVYadT46v8TncpVwTg+urXPfWoHC
      FgzweLF4dQywbMGP9sEX9sDPDMG4Dp/aDX80Dn8yAVMm5B14jeuwtHpldS3b8K8DcU3n/xkd
      RBUOcVVFlxR+fNcOhrrM1HLLouQ6XGi0iMsyKy2Lg6kkLxweYrpSYTweI99qcaZhsi8RA6Bm
      NfmTxXWKlsmC5XCuWqfkuvz5/CKFdo2Y7dq8f3aZnNnkz5ZyPJFf5yuVJrP1Oo02fV6oVlmy
      XL6wvMKDpRoPrKxwsh3335lM8arBLDXbZsjQebJS42VDA7xkeICLtRqj8QSv3zEYJrZKrQYL
      rsoNcX1LnNwxOHh1DPDbO+A12U7TRpI2fvbo8MB+2DuiMNKN2W34tsMXllf4atXmLbvH/Ph6
      Dxu1P5Hiv0/uYL+hcs/CKi8cGeJMMc/Hl9exkJhtNDmYSXN7NsV0owlATNGY1GWOtc2RgmVy
      vFJjzbKptRmgZraYNR3ONSym6k32JFM0zSZnmyaiqyRPlhVeNNjHdckYzXbWzRMeH51doCAZ
      /OhIFkmifZefGOxey98srZLRZGZNk1M1vzxhulrhQ3PLrLXNrKLZurpaoORlaFqXwee3beP/
      Ow3yzRoP1x1+dCzNbLPF3pjG+UaLsutyutrgUELjoXKTfbrERcsj5jnEFQXL9bg2k2a5VuX2
      gT4cp07essl4IvQBmq7DSDzJDt3keK3JSrXJnUP9FFph/QVJ3WCXoXFbX4aDjkvOdrh1oI8n
      CwVWbY+UcWnieqqQp6YY3BZTmW1ZPD+T4rNreS5oggPpFEXL5Gy9RcG2uNg0efnoKE0hWCjL
      ZNt1FnvTGd6UzoRj/vXi8tWFQbfhuxfqtsXxmi+xVVnh+qTBU1VfMkrIqJ6Jp6e4NaVzvlan
      6knckE6i4PF0pU5S0zmYMACYqtcpe3BDKokuSwghuFivU3ThxkySumUx1bIZ0GRGY3GWmk32
      JeNULYtT9RZ7kgmGVJlnKnUSus7BeAxJ8v0IXdWpWC1GY3Gqlomi6vSrMmutJheafi1PWtO5
      PhljvtGg6Elcn4qTb7W40Nr4/oZUHID5RpOhWIy4vJmmz1aq2wywDT40HJe4Ij/n9n47TbUN
      ACS6yzGfI9DBALZlMnPxzLdrLtuwDf/q0GECtZp1HHc7fLkNzx3o0ACxePLbNY9t2IZvC3Qw
      gKqqyPL2YZbvRrAsPwKyvYdXBx0MoCgKivLcdIa+2yFggO09vDrYFhXb8JyGq2cAIWi0XFpN
      Z1O7jSsBy3SxnKu/z3M9ihX7n93H5krAtlz/3Gr7uUFrj+9m8M8NX+E6hKDWuJL6ze9+UH7l
      V37l14M/cvNVfvmeRV75wkG+/IU5PvdMk9uuTXXe4bq8/xNL9Ktg9BvE1a0TJ+/6g1M8+FiB
      gq1w7W4/M7cwW6Eua2TjV8d7X/rcHF851+J5R9I88PcLxHclWTuV52RRYnL42ZWePv71FT76
      mSVmCy43HtgIAHzjwSXyeozxrEp5vsSnnza5aW/8WT3jXwts26+8zC02+MO/mOehUzVe+LyN
      LhFzp3M8NCe4dqfR836rbvJ7H7rIVx4vsP9ghtPnauwej13BkwUf+dMp/v7BNfT+BCceWeLP
      P7tCcjjB8tkc93xykZqsQrHGH/3lHItVwdH93znBls48gOmSlF1OLlss5m1cVeaLn5/joVMN
      jtw0RKxY5cSyRUvVOXe+Qnoiwcf/co5zizZvf/Mk73nfRRRZ8B/ecpjrxjRsQ+OX3riX3/7T
      WVZOrFHVFI6M6wwfjvHX917AS8W564DOZ79RZudkhmGnyRPzNj/2b/dwdNLgY38xxcWcw/XP
      H+KfHlhn100jCKBUaHHvpxYwl6rc9PJJ/viD51ipudz1kgke/uIMCIlmTKdecnj7T4zzwb9Z
      JtkX4+XX6nzi4TI/8H0TvOz5GS7O1BkZT/Ky2/s59vVlPvONCn1DCW7fIYHw+K13n8LyPCZv
      2fnt2Z1nAcuLdeSExg/fPUJhpcaHPr1EwZZ5y8uyIAQf+sh55nI23/f9u7nv01OkxjL81zfs
      xS6b5Jvw/S8fZSwLnz5RpTZf4BsrUGt5vOFFGe79cpHvvWuYYw+tULEl3vLma9jdr/BjP7qX
      U8fXuLjWYG7Z49f/ywHe/adz6LLHr/23Q7z7AxeYjsn8j7cd4kMfOk/dGSb5HZKC3SSGb7yx
      n8f/aYHMaBqAE+frfO8dQwjTYabk8cv/cR8jSQUhwGzYJAYSTKRkCi2P628c4qdeOUiu7KvP
      wmKNd/3JNC998RiyqvCmn9rPgAHNqkViJM3P/uRuTp+pcvvtQyQVweHr+hiKwXzOAtdjzVH4
      lZ/Zx8JsgztvG+JNr58Ii+1e/MJh7jqaAcehrsX41bfu5fSJMgOjSf7L68a54aZh7joY4/Gn
      ihw6OsiutMLw3jT7hzXmlv1DEz/8I5O85IYU7/+zGZ4+1+Dtbz1I2rVouUC9hTrez1tf+607
      f/qvAdffOsobXjXCJ+6dZmrF5JpDfdimn9sRjst03uHu7xmkUrF4wc0DVIomddMlPZLi59+4
      m/PHlnlkquU3qQN+7Ef3MdEnc+x4lbe/9Rpu36tRFTp3Hk2zXvLHvf/+BVZFjB95YT9CCFzX
      IyjXdD2BB8gIXFfgiu+sUskOBjASGhO7UrgtjztuybJz2OBldwzy6BNFjKTGTXsM3vNncyQy
      GkPDBoYmMTtTw1QUUjGFHUM6yYxBNuEPe9Mtw/zSz1zD7dcm2bkzQUyTyPQZjI7GGZRt3vMX
      89x55zAnnizgaQqrqy1MZEb7NVBlnr9L5/98cIY7XjDEyIhBYG0Nj8XZNRpj964EA30xDg3B
      //ngHC+9e5idYzHUmMpon8rwSIw77hhldapE2YZSzqRqCXYM+2z09YdW+MT9qxw92s9L7xzg
      A/ecJzORYWzIIDWYJNuo8Rf/WGC07ztEXF0BTJ8r8qefXmJwMk2/IfHM6TLZrE4sqTE8oHPX
      kSSPPlMhlVBYXDbJ9hvENIlqvsmHPz7PmqNyaNxg56jBwFCMuAo7R2N838uG+eCHLvDEvMuh
      UYlnZltk4jI4Do8er/HNJ3J86fEaN+3Veec907zi5Tu4+3kZ/s97z3PLHaO8+q4Bfu8D55m8
      bojEdxA6OzLBhmFsh9C+S6HR8Cs7t/fw6mA7DLoNz2nYxACVkknzEr1Av/UgWM2Zl79sG64Y
      SkUT81mEmp89fPfuYQcDeI7D33xpjaknV/jy2d592uculHjH+87zi79zjnPnSzw53dx0Tb3U
      4o8+fIEPfnq5ZzeAP/nYDHbk7/xsiYfObnfV/VaAZzt8+oF1TjyyxKMzvdvVT50u8I73necX
      fvc858+V/JaLXVDON/iDD13gI/+wQq/swYc/NkO0bHLpQvGqe/t/J0BHHmDpQgUzmyHrmHzy
      gXUeeqKE0mhR1g0e+OIiBw9nGRyMccNuneWGxJEhmYWWwhf/boYHHsmRa8f7P/HJGV78A5N8
      79E0F0/l+aN75zm3YtOPxe99bJ4LSxY3Tmq8+yMzTK27vPLFI9z3xWVuPdp3ialuw6UgyANM
      nyyijfdj1Jp86ss5HnmqjJWr4fQl+cLnFrj2cJbhkTiHxlRKrsJk0qMg6fzdJy7ywNdzVBWN
      a3bGuPcTs7zqRya580ia08fX+cAnFriYc4k1m/zhXy0wveZw7ZjM7//5LHMFj1fcNcR9D6xy
      y/XZbzMmrg46NEAuZzIw4CeVXvXqXdy8Q2L8UD//+IUFqigYMjiWw19+PsdP/OAYruVSNwVC
      U/nZ/7if6Sm/JUW9JRjMKOi6zNceK/NzbzuEWm5y38Mlfv5th7hpb4yHHl7nebcN0yybuJKE
      4373Z1u/E2Bt3WJo0I9y/dAPT3J4AK45Osjn/m6OpqKhy2C3bP76wSKvf9UItunSsARyXOcX
      /tM+zp0tA9AwBX0pFV2XeeTJKr/wXw/hrNd54PEKv/i2Q1w/ofPwIzluuW2YWrEFqoxlffdl
      jzsYYPdkkoX5Blpc4yv3z/N0XmJyRxy90eToTQMAPPLVZU7NN/m9D09T8yTiukRprc4733eB
      Q9f6EvyHXjHCH77vHO/7xCLfc3OG3/mDs5ipGC+6McXv/NE55gout986yJOP55A0BWE7aMZ2
      I6FvBezbm2R6toGR1Lj/szNMVRUmdiRwS3VuudXfwy8/sMjZhSbv/vAMtiIT0yRyizV+831T
      3HC936b8B186xHvee5Z7Pr3ErUdT/PYfnkUaSHDb4QTveu95lioet908wBOP51BjGlbDIp7c
      ugXJdyzU63UR/Di2JT7+6TlRNT0RwMpcWfzv90+JlrPxWSd44gMfvSjsLb69PHjiy/+4IM6v
      Wc96hG0QkT20xb2fmhMNa2O/FqZK4h0fnBaWu/Uevv+j08J91k/3xJe+uCBm8s+eCr5dsJ0H
      +L8EtvMAzw628wDb8JyGzmI428Zxts8Ef7dBtJXJ9h5eHXQwQLlcxrS2SGgIkGUZTwTRGmnL
      9npRkCQpbHDa+fIMQSaTIZVKbXUrAM1mk1KphBACWZYZHBxE0zQ8z8OyLCqVCrZtI0kSiqLg
      CYHSPhIo2t2Mu3/vNbeOpQqBJPs9chzH7vy8e73t50qShOv6rzHtgYTOt4W0x5AkKbxeURTc
      9u9SG7dXCpqmhXgslUs47sarRaPz8cRGG0EhBIqsXHb/ZFnGC+bVtZe6rmMYBrFYDM/z/DHb
      J9Ki45bLZYQQqKpKIpEAoFgsYppmOJYkScjy5r5Ewbi99m8rCK7zPK9n5V10nCsuSxKIjQ2S
      QAgPpKu3NaMIdBxn40VvrouqqpsQEJxvjSLIdV1KpRKe5+E4Tkj8kiShRJjycgi71PfuVXTH
      CAhEtDdrE1Ft8ZyAOIUA2lWSgs19Lq8KLrFkaaOhJpJ0ZU2wojjqXpvjODiOg67rKIqC4zjk
      83kURWFwcBBZlkNBB/4ey7KM4zi0Wn7SLNjf6Dnm6DMCpguYpHs+vVEgEMK/1xNez3XKkown
      er0pXpKQFQVJlkNJFR36khi+SpBlmWq1iud5uK6LaZrYtt2xME3TMAyDRCJBKpVCVdUQ8UHy
      x5/2hlSN/jwbEPhSuBu/wQZ0SKO2lBWed0nMdN8THVxut+2T8DWC67lXLO02QQ8NFf6K/5I4
      0f7YE96zek6AV9d1cV2Xer0eamjoNMMCwSXLMpqmIUkSpmlu0swBc0Q/62U5RPc2GLdbc8iS
      DPQQRJExRFvibNYAWyDEv2kDeqmry0G3BGk0GqFaVFU1NHdisRjZbDZcZH9/f8dGmaYZSv4o
      4fcycaISpHsuW8/TC9+22AuCcb1e5s4WIEckrkDgeSK0jKJr8CWTh4eH8iw0bM8t2XiQ/7fY
      6Mcs8Av/JUm+pNkVEGRUUmuahqZpHZpbURQ8z8O27ZDgu8cJDvAHf0fH7/VZQOTd0j/Y14AW
      Pc8LTaYN26f7+f6qfbRIPRggshnRyYRDtQlKRsL1vEv6AZfkQCFCRFmWFapR13WxLAvP80Kz
      JjpOcE83MjzP64mk6Dq2Uq1RhMKGetyKqcQGJi/7eTgXBBJt6YWEJAv/M4kOwpMkCZmrEy6X
      ujbwMyRJQmrjRwTXd/hkHqLruVHceMJD1w2cttYN9iWTySDLMpZlhTa9EGJLRzyQ9gH02rNw
      DNcFRIeZFDBYMI6maeE+RgWSqihtP0dua7qNNv7RLdrEAN09ZSRZ3nCkIhLEw5+Eh29Xypew
      KaOLitr0hmGEfWyidnzAyb3i2UKIDtMn6kMo7UVHfwIJ0U3Iwd+B9AoQ6m+2ANdBon2fFL0P
      2nJz03oVSca7hJkYSNuAGXxV3Qn/HNMN/BdKB3gOmTwiSAKhtZn56ekwSpKEqqooqoosSyED
      BA4v+CZPpVLpeK7jOD33sNls4jhOeJ2mbVQAdGtUf56de9wyTZT2fiqKEvoSveYdrE9GBolw
      L6Nr37QDPZ04fEYImSPQEhE/4ZImBSArsn995DmqqpLJZDAMg1arFarGwLntBYHd2W3r9yJy
      x3VDxx18lR1EKaK2Y5RZhPAjJaqidiBxwx7dQPAmHElSSFw98dCWpJ7n4XqXtr+vxsTsxdzd
      UZNwwyPSP9AOwvNCP6TXPFKpFKqiYOgGoi2RA5/M8zyq1SqWZXXg0bKsDkEFvunaaDQ6nNoo
      nJ+eYS2X69jfYF99jeD4mqq9LsdxcD23pykaXbsnAm27+c0umzRA4MxJW0gQgcA/2NnplW+1
      lb5kl4nHE7RaLdwIYQcS2zRNarVahxlk2zaxWGyT+VOv1zvszUDCBGZQhzMk+3Z8MMdGs9kh
      5CRJCjepezM6GAwpfIvJJkRGEL5VhCJ6/YaAuTRxJxIJJEmi0WhsRJmuwmHtmIvngRDIitKl
      nzZs4cA86zVGIPgURUFVfJ8tCGdWKpVQcAV+WXBtQLwBndTr9YiN3o0PX2B95umzxO0WL7j2
      ADuGh4nFOjtThMzlOMRixiYN3Wv+StSqCcP5bUHX80b/7k0PBt/UcfE2GCKI/27Rjk/X9bbt
      JhMzDOqOg6qqpFIpDMMI1afruiFyJEmi2WySTCY7CLxWq3VIlW5z7RtPPMUNhw8Sj8dDhzK4
      15e8bsfnvvToPffoxnhChJIz1ARR07Drnqhg6MVY3eZiL1+j0WiE8f1ms9nhOF4WIg5vMK7n
      eb5Qg1D7uZF8weWIKMBpMN/AzAkkf9Sv84R/KN6yrNDEaTabfPPUKWzTQgIUTQPXxYjFkISH
      rCjMF0qI4TFKa8s8Wm0xsPg0h3aMhVrXaWvO6XIFqdVi59BgOM9uczIVj7Fzx45N65EkqR1y
      bpvAl1p0+Hu46ZvjsEKInrZs8H3oyOInThqNBtlsNgxnlsvlcCOim6yqnVOzbbsj+hPY7NHr
      6qbLfU/OYrTyXHdgD7vGRyPf+1JXQiKXy9PXl71se4JgY5WoVqHtVHURvyT5MWdZUnwhITy6
      aL+n6u9mmAA8zwvDwpeCwEzYav5RcB0n1Oyd32+NiEAw6bre0X/Utm3K5XI4hwA0TfPnLATN
      ZjPUZKqqMme5zC2vgSST2bOf+tIMydFxGqvLpHftoVAso2VGUAeGaRbyVHdNcszzqC/MMbJv
      L0FXBCmZwfM8ZgO69CfRMe9kbq0nA4Q4Q8b1vC0SYREJEoDn+WE5SWrnCSQJL5AgbaeuFziO
      QzKZRFVVTNPs2HDTNDvst8ABFcJDcRRs2w5t4fnFJZ45N40i+apLUVWE66DpWjsSJVMlRmJk
      N8tnC1SXXFbXnqEvk0KSBEgKnido2TZrpkL/0gqGYbQRIncsVwjBrrFhspkM3RAwc2huRZxH
      /7uA0Nv/InXQ11bm01bQMwp1KVNIoiOSF/o40WQdPmFvmIdbM0BUwLRaLWRZRlXVDls+EGbB
      M7PZbBiVC0DXddLC86Wv7OPkUDrOfDvh6FgmjqSgAXIsTrMEKccGz0NYLeSIsyyECLVZFC8A
      nm0TKxbYM9C/NY5C3FwmE9yBaCE2S5DIg7dy2KIef/T3RqMRVjBGpaKhaZimGYZDAyJNJVOc
      XGmwY+cOHMsiO7iLxdPHyIxMoMXTyKpGrXmGAVkh2TeI7dosJPeyYIJSXWDXtUfDOQ201xU1
      KqLzt1tNqtW1ngwAbXUrEWYZoxowiLJE1yXR1g6yvElbep7X8ZbE7u8vxwC9nM3N+TkAACAA
      SURBVN3AxAnH78UwQnT4AluZbIlEgng8Ho4Vj8fxPC+MvgR5nGq1Go4RVKR2a7uRbIbTa3nc
      WgV7aZ5UJsHymXMUqzbufBnJtcmUT/hErAqUPZPYjfrmqXselaVFjEyGWKbrBFo+x4uvP7IR
      CIiEn7tBkZXemeCAyMNISTR643l4rhuWMURDnL0gkCCBxNd1/9BEoE6DyEw4KUUhm82G0aEA
      Bgf6oF4AfAJt5pfYN5JFj6coLc+Smz1LvG8IIQTp0V04Nf/a+uo0ycyVHbUUQtAqrpKqzTMc
      sS97QdSR7QgQIMJ6Kd+0ljbs/ojMCv2SdlRDBJ9dJrnWC8+dn3WaRF7bAd5qDcFPMOcgShUw
      bCwWCwMTjuOEdVhRPwAgmUwShDW7NTv4GmcpX8A1Wyi6QWp0DEfVSST6sRL9uB64tkO+pZFT
      h8mVTEoXzuI26liNBq1KGcc0Kc5MU1lcoFUs4NSr2G0h6to2wvNwEknyxQIt0yRfKnLqwhTF
      tqnWC3rmAaKc63mb7d021jd+ZcO+jW6GLMtkMpnQZhRCEI/H/WhQ23wKsoWBSo0iPdgk8Blj
      eHAA4bo0qkWEazGQUSguzSCrKsn+YYrLs1Tzq5i1EmosjefYeK6D53Ue1auXC1RyqwyOT6LH
      Ex3f9XtVrt2/p73EjbBeL2e223mWJdlX7+FFnRoyIPogFxB1tH0G2mAMid6a9UoiQVHiizJD
      1BQK/vbnFanJkTZi5m47ji+ECAsOu8PGALVajWQySSaTCet8XNclnU6H1/zjsaf4aq6FXG2h
      SdBaLdLA4d+/6EaePDvFA6U0orhG0/b3XY3FGbr2CAB6KkV5dgZZ00mPjSJcl4HJ3QjPIz89
      g5HJYtVrfqi0VuVkrZ9qLInQVLTsAMvzC7y8r69jTwPoaQJFnaQQmZK0SZJ0hPciYcKg2CRI
      kweZwiCT12q1OvyATCYTxvejNT5R+zOfL7CcKzIgqah6DCWWYjCrUlQNmvUa9dI6tm3Tv+8w
      kiQz/80HsT0PPZElvzhDenCEeqmA1WxQLa6TGJ5kdW6aiWsOA2CaTYx4kpIt0TJbtEyTtUKZ
      luVy7d4JDH3zcb9earX7s7AisY26aHFWeG0XEwQS1o+uXb5iMwrRcHCUWHvtXTS30W16BYIo
      gHg8HlZ9RiM/wTOFEOi6Hu5fNMFl2zYXz51hSEjUDB3JdVGsBlVgbi3HXc8/ype/dgJbgKfo
      CCGwPBnhusiqipHOYKWzDO2eQInQRO7iRTzXxbVM+if3hJ+3hCB4ut2oI0Uy1IFZFNDz5jxA
      lxreSp0GodJoeDT8V2qX3kZyCd2lDYG0F0JQrVZJpVJIkkS1WqVWqxGPx8MSX9d1+fuvP0Ny
      dJJStYwEuHGdxbLJXQfH+OrTBZqJEexiKZScRt8oybG9PkLyFkszFxGuS3bnfjKJfoxkhrLZ
      wGrWWV+aR1J1cG1oFHnYAhHPohg7EDHB9MIy1+6bDHHQbbNfikADiR8Qdwf0ECrRffDxvDnA
      cElHOPL5pcwf2g6776Rvnr8syxiG0bF/gXQPBFh3NMm27dCvC+YJMDU3T2VghPjyLE1PwdAU
      do/0Maip3H3bzeRyOZRmFRkXuTRLrW8PqlWjnlsnNTqGJEkkRndQnJtjcO/ecNyhAwcoLywQ
      HxzahJ/q6iqVQpGmYjBgm5uJvw2dDCBtVvtiCydK7tjQzaE9RZKIRyRIIOWDys+OOHub4QKf
      I9AWAayurTNz7iRaZhgtNUh5+SK243IOhxfedJD940M8WVDRYsmQMeWI+REbGKdVXGTHgesA
      UFQNz3WxaiWmn1lm/MhtyBHJEsbOHZt6YRUv5ZtQnvA6pMdW8XNP+L7Apni/j5yNC7vwGkjq
      TsLqbX5d6u+uLzeeE4zreSHx9wqhSpJEOp1G13Vs26bVaoUxf8dx/AyqopBKpcIaIMuyQj8A
      NpxvSZLYO7GTgQvTNEZGkVeXSUgu5WKJGw5ew9TFizzw5JOM2HX6dw1wLr+K1lymrsY4cX6d
      8VyFdCbJ4O4JWs0WnuuGWkCSJCzTJG10tnxfn56hJukoI7vRJQlKa5FzLJ247wo5sEmCbClp
      AgkibT68IYRf5hDY8UEBm2ma/qEb0wzNoWAhkuQnv6K2ZgBPnp1DG95Ps5TDaVZxHQ8Vj1fc
      doTRkWHKxRx2vUL+4jPUVudwWg1a5XXMqu8IS7KMqxjUS+vhmLKiMDB5mET/SAfxA3iuw/rU
      M1RX54glkmG40PM2MuDBvAOn0XHdDYe2/eN67oYt37O8fAu8tq8N/Iyosxp99qUIPzRv2s+O
      BjJkudO/ioKqqvT396PrelidW6vVwhoe2KjrD6pBg6RaUMMVjBNG9gyDn7r7hdy1Z5LBTIZy
      pYLtCaS2yesaBiMHDpAZHmJ0KM01zzvC5ICKoyWYqeucmVqjVSqh6Voob4QQlBYWiKU7o0C1
      9XVqagI1OxDiu6LFKZXKG1o18mKXS/oAwYZskiBCILW5u1cSTNM0stlsKM2r1SoApmWFlYmB
      gxxkgZvNJoZh0Gg0kCS/RCEIv918eA+nZpbwBndh5mcxmxYNZ5QdQ1k+9vFP8Y3zeWTJJdW3
      g+raHM1yjszwTlRFwswvIOkJjMwg5ZUZkn3D4TzNepVYpjNebDXr1NYXGDtwBFlR8TwXt15t
      2+6E4UNf07T/17YiPE8gyyAidn5g81+J8ypFcd3+1/Fc1KvxAzYoJBjUZ9SI1JckCaSNwsHw
      2fjRnKDCstFodFRuBhDUO9m2He5ZMIamaeHZjqhG0DSNo4cPc/TwYb78yKN8bW6ZZMxg7549
      HFpf51zLBC1OLJUinu2jlkiSWM0j2gGD9bOnyaTiFM+extN0FFlC9Rziew91zK1eKqEMTnSi
      JJ7kobkVXnJAa5dwbOQ+tswDRBETpP2D24Ka9V7Jr1gsFnr/QZ1ItJYlqIUPakVUVSXI6ob+
      RFu6BDA2OsJb/90reeLpkxx7pkLTXEW0KiTiMSzHw1IS6JKDGk+hiBbZsT3U1ucY2H0IIQRr
      F04gazE0wwjVsmOZlFdm2HHopo75V9fmGd13eGOzZYWS2VkaETBx26bx8eRTfsd1obYInNCt
      iDgSk1faZpOQ/crNyxH+Jk0Q1eKSz5nhkcYe5lSwj5LkV+MGZk8v4u+OaAWmahDZkyQpLJlo
      tVodJeqPPHmcJ06d5kdf+TIMVWFsz24y6TSfeehhPMemsrCIunsn9VKJpOtiJBM8/3uP4Fom
      jdw6ZrWKIiwO3nITlmlixOOsz87RXTLpOW7HGkV7b9a1BPliiWQi2d4Hf6+2LoXolvrQIUGU
      iASJIiadTiPLcmg7btowJCSZ0BeIx+Oh2SPLcrgBpml2FMPJssT33Hwjt9x4HR//7APkKn6a
      /RUvfgGNB49xYaWKhIQWS5DoG6Qwf47VC08DElajSrNRJZlKM3/8YfRkBlnVUGNJFLUrwxjZ
      4ACc1Agnpha4Yf8E3UZ/B8H3gND5Da4Lxu4KI0uCTfVGnX4WbTzIHZL7chB9lgcdZR2S5JcE
      BL8HBW7VajUMW2+1NiFE6Bt4nkd/fz+O41Cv1+nr6wstAPCd4+OrOZaKRR587DFSiTjNpUW+
      0axz055JvrqwSNJI8uiSA+m9rB0/g2pWGWk0WJ1fpDm6D8n2ePGRCVzXxYhvvK6qe36armJH
      aTL4wnWpmW4Yfg7xucXq/Jsj2UTEZgkSTeYAYdSg0WiEdSJRCO1YpLDi03VdDMMI8w+6rocR
      oWCilWqVTz14jE/87WexbRtVj5HqG8I0Te75h0fxrAaKVcFuVjCrZaprC6TG9hMf3otkJNEz
      gwizgZEZYPTIbfTtPkTfroM9NzeIk0sRxtdiCSp2ELna7PB3LRIkv1yk44D4JZzfwMfwTavO
      rG63+eN1ze9S0MEo0ua8RTBOQPy6rncUHF7qyGTg10mSFJ7YC45GBsIsuFfXda7rT4PZIieg
      4JgMjw0zIxs89sQ3sWt1HK0dMNHj1GNZ3MwQq56OOTCOSPchVJ1j51c5cewEnuuyPDUNkkRt
      cb5jvcgKwu08UipJElIszjMl38cMNLMvAK4AgUIEW9OJDFmW/XSy5Du0yWQylAKue+lzrUFp
      c8AoqVSKRqMR2v6ZTCbc5GarxVLZ4uLSGifPTVFvmRTXFjh+dorbD47RVDPsOXCA5I5rkAf3
      sDZ3Ebu6TnX+JI3FM+zYs5/04DCaEfeJWNm6AkTqOsARaARJNcjlixuOVK/IWMRhDZz87nMH
      7R3Z5Jj6llL7XLHUWc7Qa18u5wQHcw+F2WW0VFDPE9XaWxU5BhCLxUKmiRY1Bto9Gk4fHhpE
      MQyUZBIrwKHjcPjQIZKaihTTGLPW2aHUSS6eQR4cRR4cQ08l0UsraDh4IxPkjEHOHz9JqdKg
      jo7WzvK7lsXSuQuUhb5pDwO819L9fPbkFDMLSxtrvNQCg8xhEL7bCiGSJIUx+0qlEi78Uoc+
      goRKJpMhHo+H4bTAboxGoEaGhhjRTRRF5ZnZNfomryU9NMYzi2UKxRKyZ1OrN7FreWTVQDbi
      pMf3khoeZ+d1t6FoOpKsYrUalJdnaJbzlObPYbYatKqlcE6uZYZ+Sve85ewIy6X6JrOvjYAQ
      X7lCkQsz82E9U0fHiK6uEZtw04NIo50vugsHg9qqTaf42v91zP8SBW8BswbZ+I3pbI46RRna
      cRxqtVrHYRjP8yiXy6EwKxaLAMR0HWG2qKwsszY9S7NWp7G8QLFW5aXXX4eZSKNmsqRGRkgM
      DSHNn/MP6mQH0XbsRhv1zU8nlmSaLJYrQJJxLIv1Cxe4eOYCzuA4Wt/ApvUFgluSJMqpfh4s
      tnj05Bmgqz16GOeNIEC0/1XkrQ9oK4pCPB7fVLceRV6vzxKJBJ7nhfcFyTFd18PfA8QvrRVY
      WVtneM9BXMel1awzmEkyOtCH7Fkkx3ahOA1ku4prm2RGJ9ETaaq5JeqlPHpmiHjfMFa9Qm19
      nqGde0hmBzCSGQSCyuoCTqvGwM49YZgwCpIkYSpJFhcWSGkSsZjR4ewCnJyaZ7YVp1hrsCMb
      Q2s7+L0ysT0eEDG7NpJf1WqVlZWVUJsEEbVGo4FlWdTr9TByE+xhQMSKqhCPJ3wtLcsdDBSF
      oGS52dz8rofo+qOM65u/oueZ8IDJz8/McGJ2lkOTk2TSaeSYgbpzHF1TGL/mAI31NfTJSUqr
      q8iWSaHeJDY0QmxggFqlDunNNVySJCFUjdrpk4wfPsji6TM42RH04R2bBEhHnio6hqZTNG0G
      XKtTA7RPurYJr018W6JkA4KwWbfT2y1BAoIOJFar1QolZTSbWCgUsCyL1fVcuOGqZ6KqKuvz
      UxQXzmOWc6ytrtKXMji0b4J4ZhA9nqRvaJS+gSHKC+cRQHrHPtI79hFL++HO1Ohu9PQgsqJS
      y69Qyy2zdv5pktl+Bnbu6XCKN3Dig6LpSMN7eXLNYmXVzykIIajX6hw/N0tBHURqFHnhteMk
      4vENqR/NrEsSMhuHYoLRu30rV3h4+HZ1/8AAhUIhjLwEPwB9fX3U65srJiVJ8s8Ht2v5g7KG
      bq0TtJxptVqXNFm7id9p11h5ETM5GjnUdZ3ZfA5b12g0GiiKwu2HDzP9xFNYzSae67Jj3yTF
      M2cYTaWI2Ratag2nWgHXZWC4H7mwgrA2ss5BRM0rrLNShMVT50j0ZZFTvat2pchPN7jJDF8q
      WZ1RIImNxItA+LU8morwNjo49EJMLBbrkDyXg2i9SvfnQJhQeej4efaN9nHzjdfxojtuxzGy
      lCyJTMY/Kba+usoqWQZby5jlBkJ49I3t8s8rmD3mIrXXqGrU1hdIDe2kOH+O3Ue/p/c8w/qm
      TiTG+0e5mJtFlnNomsbpvI2c3YNkmewbSfoarIe0DfyAzsKzbs+KDiGRSqfJZDMYuh7a6kGk
      LJFIoChKR8i4GwJmURQFI2ZgtjY6/xmGQSaTCaNuW8Fmye+FNUqBAx+FWCzGmZlp3JFhZFnm
      9NQUtxw9ytLKKon911I5+QQUy8R3DKN4DrlSiblmk3J2B5XVMrg2smWirC5ixTPErzsa4k4C
      arPLWCQ4dXyWo7fu24TfKwXZiHVqgG6J7TgOnuuhqEr7POnmwYPDLludzu+eXBDzdz0vPNDc
      XX+k6zr5QomCrTJbaOA4DjHDYDSlsjB1lkp+3T9oLxxa88+QSSdp5hZolQtU1peRZQXNbVBZ
      vIDnbvQPkpD8v+06Izt24FpNkv3DW8+5pzXdJtDhPZxpJjhRUpAzI5ilVbKtZcZHhiId33qE
      K7skvSzJoTaI2tnBPiSSCRzbIR6Po2lamKXN9mURgOM6WzrLUfA8Dy2i3QIpDX4155Y4kKSw
      LH0jPCt30Ek3CCFYrlTCkgUjKF2QZbRGDSNmMLZjjF2HriGWTbNaKCDHEyDJEE/i9Y/iZofI
      lWUauRr106fxav7LV0JsShKmnGbq6WmcannL0PDl2OGymLMsi0a9ges4GPpGzUXg+CYSCZrN
      Zs+MYfTaqJOE5B9UDvyKXmr5oVNzyMlBVhsSpZIfKVorN0kMjlFfnWX+zNNIsoqmyJxdzKNn
      h7jm+XeQSCbQdRWztIYhGtTXFzaQIQROq8H4rgkGd0yA3QgJ8kqiKpEFIQFGIo2WSKOXZnne
      WIyjB/d0SMteY/b6W5aljg0M8LRhWnhtk8PrIEKCNitXIPUCwRN9bpDF3aoDh6qqZLPZsCR6
      Mxp640uSpI1nSRKFpp8pPrB3D/sTBraAC/PzXHjyaYz+fkqeQ25lHa20inX+DHJuCaFqxAdi
      NEhRWHconLhA6+IF3GIeq9JmWEnGknRkI4ZTKfWeyyVwkqkVr7w9elDfE11kcE40WgHYDaqq
      dpTVSpK0SeJ1Q7PZpOYEOQgXVfUZZaw/iVMrkc5kSfcNkh0Zp9JyqJs2nuv6IXghyAyO0j82
      wf6jt5JQbBpLZ3GdjX42AVrGdu3BLG/Y8lesPiPXNQsrHNo5QDaT3vhekpDb4eHuyJkkopdt
      aKaNoTfb1FvBVgJkKwhqsIBQqvdyfDVNI51O09fXh23bNJvNnj2auiNEwe+KomC1z0WY5TLl
      XJ5cPo/rujz/2kMYAyMkDh0llkqTHR6igYq3+yCKJGEOTGIvziNdPEW97BJY8Q1LY32+ydqJ
      OZqkAmQRi8mYuTU8IWjMT2OuLHbQ1lZM6rUa3LVr5OreDxCVIEGxW5D86IWcoKQ52gS3FwJ7
      fR5KOj1OoeSrv5uuuxbVqlCom+TWlimvzLHzulsorK8iS4K5k8fIz1+gsr6Moumszl7g4PNu
      58jzb0E389iFeRq5edL9/mmvWCJJIjtELb9Co5Tj8gpzA6x6hWR5hptGDdJJf0MCovWd3IhJ
      c4mmAYG/E5wX6yZ8RfZbkfQ6F3BVWouICdMuNeneF1mWSafTZLNZYrEYzWYzDI3GYrFNplY0
      0RVlkFq9jq1qWPU6tQsXqQqPz518hn/6+tcZGhxg/8gQdrnAwPgYrm2ztrCMPX8Rt1z0TZvh
      /dj1JrYUaydIPFQchuMOd183RlazmUgLDo5KjN9+M7HxXWjZfuK79iInU5irS3h27y4aAb6U
      ahnXtq+8O3R3CXPg+HY7xkEdeVATUi6XN3UV6Iawk0AbmWv5IpKR9hvFFuaZmauhqQoTO8d5
      2Z23cqaqUivlGB6fQHgeOw8cZmjnJHNnn2FszzU8+eX7GBidYPyAX9MjKyqTB/3fbbOFZvga
      qVbMIbsthgfGAUFh5SKeliQ11NlNoJt5hRDI9RzPO7o/dAq7a3CiTCxJ0hX1+VRkBYUN8ylq
      EnVHiZ4NROcTVHEmk8mwA0UgrEqlUkdkLhr/h40DO0HtUDKZ7Eh+ZrNZdMsi5XpkJyYoCo+b
      R8c4tG+fLxgVBd2z0OMxXNtBGxyB0V3YdruOR9VxhiaJzc9hShleemSQ249eQ63R4uC+3bz8
      jiaJhB92/+zJ85TUwRA/ajqLSKYw11YQjo3eP4SaSm/CRVLX0HXjyhmgeyM0Tdvk+Oq6HkYm
      gq7BQbLGMIwtcwSxWKzjjHHDtJAUFbm6TFZucbokc+rRs7z8xhbXHNjPqYeP4zTr6EaM5Ytn
      adSrNKplHMtC0w1uetH3cfHkNzESSQAaxXUUPUZz/gzpTIayI6HJYJoW+4/esoGU7ABr8zMU
      Fy+SGZlA0XqfAvNcl0a5gOft9ZNIkoLjOh319cEx0KuB7jh9lACjfwefPRtGiJYqBFGlIJIU
      5GMC4o76BkII0uk0lUolfH4qlULXder1ehhFUlXVN3eSCeorq5QVhdfcehuDAwPhOprVKrMX
      ZihV6kiKipRfxfLAq9cQiT4kWcYzkqjpJHbN5dzcMt9zwz72T+5sd6pLIoR/vPZVh/fzyVPT
      eNmNBJgkKxhjO/3Q/NIcVjGHmkiiDQyHcxg1VIYG+q+eAWDjIHsikQhVaavVCiVBd/NaIKz8
      jLbP0DQtjG4EG+p5HiP9fTgz8xzISky5fezOSLzoebeQzfr9YKxKgezQGI5loscTDOyYwEgk
      mTvzjO/cxRMMj++msDyPkUiyL25jOyYDN1yL0T62pygKuUKR2dUF0qMT4ZxGd+9l0LZYm5+l
      UCoxuPfwptIJt1VjfLAvXEN3FCtY77OFYLxou/Be11wpE3QzkBCCSqUStjeJBimCBGW3b6Cq
      alj/L4Sgr68vFGrBfhuGgWEYvrY/fZJDE7sYGhhgcGAAIQTzi0vcd+wkZ5cWcVNDZHddg+e5
      pBt1lrQYYmAYJZfH0xMIPYaUzvCS6w36Roe42KpxYarIDaPjDPQPhGtJJhJork2vIK4kScR3
      TuK5Ll6zjrm2TGx03E/SeRr6U8evjgEC5HXH64M4dGDuBEiKShClfYIoaKIaRBgClRsg3zAM
      Tk3NI6kGa8V1+pJZXv3CW0Ib07Is8mvLOOvrpAcGsU2T5elz9I+O06iW8VwXWVEY3LGL6ZPf
      RJJlHnrmBC+69aawjDkowR4a6KdYvIgndnaYGKqmM77vGoYtk8ULZ7CFjJbMkBoY9S+QFbJp
      v3IyeEFE9P5efT2vhFiD713PRWqXnF+qHudKib/XXLq7OQcQSP5o0Z2u6+EeB2UZwZqDgkYg
      zE1Issy/f8nLwkJAy7K459Of51jewtLi9GsxDLV9QMgTxFIppJYDlomuehhZhWZuHcOps2P/
      HSQyfnl9q1bn8488xoGJCW69/kg4v7t2j/FArgGxOL1AVhSkZBqv1aS5MOuvzXPp37fzyhig
      W4IEHd2AsNlVmH6PqNPo/QEBB7Zkf39/WDYdMFWgUifHR7i4fJrvu/vOsLVisVTi3Mw8Z2cW
      mLj+VhrVEjv3X8vS1FmqpTxje6+lWX+CVqNGtZhjeOcebNNEUjR23ngXZ6stnIVF7jiyp8Nh
      S6dSrDVqxJKb7URNN9hz5EY8z2NtYQa71UA14siqzvHZHH2pJP39feGaA5On+xVBUULqlXAS
      orP+yL9XgAjOHDx76MV4UWkf/Qw23voSrMMwjDDXE6wv8B+EEKGTrKpq2C9IkmUcxybdtr0d
      x+FFNxzk1MOnsB0LOWmgibY5LIEej9NnNSiM7ybWZvi4pkMqw8WLC9zwPL/PTz5fojq+n7VK
      nuPnL7DWMDk8Msjk2Ch7cmeYFrFNeI/iQRscAc9DUvyK0fVa+fIM0B3iCpAV3cjuSEJHPUq7
      SlSW5dDOD4qvXNftaP4a9A0aHurnjT/y8vB5KysrfP3MHH0795Ic8lBUDTds0+0RT6ZxHZ+R
      yrk1YskUF08c85mqb9Cv7UmkmFtZ4GvHz7J/tI+Jcd/RHR0ZpjS7iGvEOzoOREGWZUYmJpk7
      d4am5xFPxImpgkw79Bl0TIviIxaLdZQXBFK0mwGCQ/YhQQYb+Cwd3ShE9627VCGYZ3R/o0wR
      EH9A6AFxe57XUVaRTqfDdQYmbjqdplqt0lJbxGIx4vE4+yd38SbH4Z6HT4JQsdoCUrgetmX5
      XQ8leaOrSKYfqVlncXaG4swMo3t2k48NIsViLFopltwYUjzB9HqN0eUcuw2Zac+FS1X6ShIE
      x3AVhSmhX5oBAuR0S4xuREY/i3ZbDl6iFo/HO3r3BwddgjMBwbW2bfs/7QPYRvsEVzweZ+9A
      nNVGDavVRNUN9HjCf6YkMTy+m9LaMvuO3hrORzX8Z+QWphkc34PnOmT6B4jF46zn51mtOyh4
      jKZj7N0xzNOLC2TH92yJC1lWmDx0JFxzozzI4tIyw0OD4RwDCFqDxOPxMEfSLXGjtfZR4pck
      qXcfpquEbtPnUpnb4POgYC74vdlsIhBhxK9er3dEg4LWKcH1wZ4FPU1rtZpfy9Tfj+d57N+z
      mzcLwedPnKGpqziFHEew+NpqCSs7DI0qkqohND9HoVTypI/egiTJFGR5o0t5pNGZHEuwJuKs
      2zbSJYi/F7iJ1OUZIPpvVGJEmaLX98HhmMA+dBwndLiCFLyiKPT19YUSNBhTkeWwDbqmaWQy
      Gfbu3oU7Pctas44xupNKfg3bMjEbdSqFdSRFC+cAkEhnWbl4lotPP8ba7Hl27j/MyK49fkIs
      04fajvCs16uszS8juZcnuijxxDN9rBcdVlbreI5DRlrjcLt1CvgJpnQ6HVbYBgfJVVX1cRK+
      bDPIFUhhYZkf+352GuBSCaBuPwU28BUQeRhObJs8kiR1vK8hOMehqmpH179WqxVGANfW1hBC
      hOMFjKBpGmPDg/z0y19Es9mk2m6oNWWeQJRz/MiL7+TM/BJfKFlQXCOViCPrxpZMGwWhac/K
      Wux4U3z0NNDVJlmC6wNzRtd1Wq0Wmq4x0D9Ao9EIEZfNZsPIT/BCtSAikUgkwsrHgJGi0Yap
      i9PkTFhbW8MwdBKeiZkZRwi/J2eyfxgjkaRZq1BYmmXngSPIytZdECBgXPjnGNzl+fPccmDD
      mRaAoesdxBOPxzEMwz9y6NidDay6cBlogcv1HYLO16TWarVLlqVEnxEITdZczAAAIABJREFU
      siAXEM3oJ5PJ8FxwUA4RvO40CIEqihIyQaPRCI+3lkql8BkBRE2wIBEX9TtUTWOgv59ms8l7
      /+Yz1AfH/v/2zj04ruu+75977+7efQELLBZYPAmC4JsiLVGmrMiWZVm2bMtOE+fRupPpZDpJ
      2pn+0z8y03/yRzLTtDNtJ9NMZ9w2mXQST9wmrRM7ruPYjmNZtFxJlEmRepDiGwTxfi8W2Pe9
      5/SPu+fu3cUusAuCJCjhOwPs6z7OOff8fuf3Or8f/pqMD41Qax5uBdXRoHXk/Ubwcn0l03vt
      3m7KE7SqSFLLskin03R0dLhbBtXeUiVPeq1HKv5FKdVDgwOM+HxYowOuDnFpbJZ9nWEODA9y
      6fodUusRlqbvMnrqTEO5XqEihlTFqbWEfGaNqF6ZdFI6aQUVB1QTTaUMFMKJpjR0o+Jw8hyn
      NiApJ5tGY29yM32rfe99tkqeV9nclJVHbXbPZDLk83lisZgr0qkMcZlMxnWEqW2sagNMvbYo
      Bqn+VDuUWV0lTzt96ACv5+rvM6iHVie9FxtmR8sU5PMRiUSqnGJKdFFWHrXvVznCVNoMtSk+
      GAy61oTazGJq8nvt7Ko4mt/vJxgM8lws5hLUkX15/uHNdzj85CdaHoztIr0ww4lkhVs5k75a
      7levpVKpnCrFqcqojAE4WcnKfcaJJ9Iq+UI3S0HfCLV6R73fVTYHBWUiViKSWqnVaqwyQXgT
      Fqj0l94APm+fvdf2MkKgSixUz/nE/n1Mv3OF8ZKJVpO7dafR9J5gL+Wq3zSt2ovr9SoKIdws
      A0o5UibNcDhMoVBw5MC1NTTNySahCKOe2Q4qA1rbFm+xtPa2NgZ7e9zjtxLlmjlmK3QPH2Ks
      YHJ5bNLzbXUMvfdehm7glmLVHL+Ez3BWBEPTnUjZciCdTzfwG766voWtsJUeoNrnHU8hBKZp
      Vnnwg8Ggo5uVd/6piZzP590YIcWoGkkQSkrwVvypfc5q74Lf7+elJz/CZ7qjhFMLRFcXEfnG
      u9XuBVvWB6g3iN7lTO1GqudiVx5XZRcPhUKsr6/j9/tdq49a/rz6Qz2oa3rrUUGlTpiKWrRt
      myODPVy5e41A9z78DZwjOwlN04h2xEmtp1wPbm0GhnriiFcHUNdRv9dODg2t7n6MesfWjmM9
      w0Xts1VxPWryW5blWrYsy3L9PaGQk1hgbW3NdZgp/aF2LtSKOcoAopicena1ZnTVzoNDAxwY
      cMzVV26N8dbSEtn2+D0xq1pUb4mUcstlrJZbeo9VS6cKfPP5fG6og/IQK5+Aki2Vh1FN4EYc
      Wa0uXg6iBkxBDWwkEuHMsQOE1mfJTV5jdfwapWLjHU87BT/Wpg+ndrK6403FeiZkuUwr1c8D
      qoPSvH9eyaienFzvvupPcXklVipTdDgcdje95wt5d+82VBx96ll6c0CFQiGXSGozg3hXbahM
      dm8WiXrzTxFD0hC0ErHbDDYowWqAvI2u5SC15k+1vJmmid/v7AENBALuKqBkO1VtxOttBEem
      VykSlcNMtcO7ogBV3lRFPF5O4938fXj/oGOOK5UYn5ogRZhod/+ODqAXMhInnU4Ti21tvaja
      AyAkQlPZ2zzHNMHpHBNq6wpy7TMNhUJuAGMsFnPrr6m5oHw2ytoTiUTc31ZXV12iUc/frbns
      yQ6n+qM2+EN1fFI9iUM9y5WVFLeN8Lb6uhma8hw04ipK2VUUrGy+SkHN5/NkMhm3rI6XMNRG
      bdu2XcuPYRi0t7ezurpalVLRKx55Ob96gN7j1HfqWMfiohMyA6zkd5Z7AGSWZjELq+SEjhQS
      f6xxZRlv27yoJ8Z4E0s1a5FrFUoMUZxfrciaVvHfqLFXbVHBjpGIE2mrLFvqOapVXJk5VQHz
      Rj6IeqJh3f6Uo0N2GlUE0MjMVA+qkUpWVPuCVWUQNaEVB9Y1JyhqfX2dcDjsDmCpVHIzPyhr
      knejhvdVTXD1kLzwpliv15+l1QxtQ8fYSRRyWXr0HAMH9m1pcYH6K6y3rcrSI5FosuJPkKK6
      4FytCLoV6hGeyzg0x3egxCufz0cmk3FNnapfqmAhOM9sacXx1Sg/hXfCe6UDZSHyEnRtG9S9
      N1sNtDoU0Mi02wzUuS1Hg9ZeRClNyuOpZEevLG9bFkbZ+6v2oAZDQZC45k8hhBspqri7mtTe
      4CtvZ+uJY+r7DQOyc3qTC8PnZ20943K5rbCZkg/loiJ4I0KrN8nX62szqCU8d1+2YeDdU6x2
      gWmak9y2rW1jgKB7LSHLSQYq/o96xgxFFOrcejpl7cT3nls5cPM+Nrta1l63RqCy+fHLZ8mv
      zvPaxSuVE4oZbo2Pk0pX4lps4eQEPf/6T/nJT18nXyyh2XlSmYIbM+LlBt4EuIVigeWVFVZS
      Ky5nUfK8V/HTynbyRhysVvyp/b6KQzQYCO9fK5BSYvh8rIW6SW1ShK0ZOPlVN0ZnClH53ksI
      sLWnfjPzrjLF1t5PpTuHSnpDbya4Ks6uGxvG1PvcvGikhG92TC0abce8V9SsAJLc0iQXbsSx
      cst88y//nM7efejCgmCI7Gqe7158ndHRw6yXCpz66MdZXFikpBn89JUfMzrYxXzRpJQvUExN
      kg308MXnn65qsPMgy5YcsVF+r10qvbb+egNb7/V+w3ufcHsnqZU7xDs7W+LMqnhGxcElQRUa
      qJkslrDxG74N3FJhM3t/vVXHq/x6ofIHKaysrLgTWoky9cah1oxb7zevMtzsc9rA+Gr0wO1g
      g65Ve0DfyCGsXIaOaJjO7gEGkx0I3Uc46GdlYZ6uZB+losX+4X1YlqCzu49Pf/rTdHTE6e4o
      53YB/KE2jhwYrhoId6Bgg1ez1vTlRa15rJ7os5V44b1kvdyf9QanHmqPKawt0xlr21iCZws4
      NRbKIonn3HqTWa24tZY3r1nUvW7ZIlfMZZhbWEaWRZxsnXq7wioyOzePKphSu3J6V99G2zVV
      mxs56ryMzfsc1TWancy6rjcVILjV9TaY16n5+MRHn9pgIjt8vPFupv5OpwD1qced7F1P9lS4
      uLIpAxt2TdU2qPaetb/XU5A2G8AN3EOd7/6rf06r8OdSxPoGy5PUUxKpCRHFdZaVDxO1DfP0
      XYVPVymGWn3noaZpvPnGG/TtP4SdXyUnTeanxhjoSeBvT7A8M8m+Q8e4+tab9Ow/xPz0BDnp
      J94WQtd11lcWKeDjvUsX+MwXv0xb0L/h+l6IOkp6vf57GVwrIo/SNQfsLNZaiYjf2XxTkpKS
      Xa1vLBomMlI/VWJt22UhXy8YDmYW5xGaDyHKThkpEdIrM6uH4rxHSufh1fRHOTekpJIKXJ3n
      4Qaul1M61WMkFY7j0+GjJw7j8weqZMx6hFI7oN7v3G7XrB71lK6tJq46rpDLEgv6qs5xMxE3
      oXVvuE+9VawO4XtXPeVwrD5F8tipx3j93AUikRCzK1mGeoKcO3eR0aOjLM4t0ZYcpmAJuuId
      XDh/Hp+ULIWjaNLGLgl0XSPZ30/UrHhq68nt3vdeZuUVZ7ejY9WOUSgY5AtnTqNRMRDUwrIs
      /vKt9ylGGl9PtU3kczwTruMIk0KwpLVjmZ2ULEHRlliWTUkISpZNyXJeLfe1/Gc7r7atvnOy
      mdmWKDu+Kr+5r+U4eWGX31s2tm1hCwvbsrBsm5gp+eOjB6qS1jZSiusNnPotHosyP3EFTdcx
      dccyUcQohx07Mnh6fZ3uY09t+rDUdW3LIj9/l8MjvRva0UwIs+LqmlZJXO5wdKcIR1WfNA3k
      xtCJetxfTTarVOTQ8Y8Q0goMjpjEIiYDvUtgtuEzAnS2h0ieOc2N2+McHR0mJ0y0YhrMNmKR
      EBqQX19hLW8RNTcm4KqypHiU5K30sXrPrhloWv08pNtFeyHD4WNHN/oBxA7doB7UpVu9RasW
      Ay/UZOlJJOhJJJxzG8hAt2+PsZUkrzhIdnaMjxzo28B9yzetmgj1MkSIcjEMIWzXuymR5TJJ
      5cqbulNjAffXmqRZZRm9VlwQQpDoHaKnbIlzvrNpb3dEg74eVVc3yJHDB9xxkrITtEqC5Lb2
      KFIKLGuTXKeAlOWKn1KrUrZquX8zVquWVwuvSNhCJo5i2QCzkQB2YDveBuwgTTXiILW6Qqu/
      twJh28T8sv7kB2TZrOm9b6P2uDk+0SoF8lxO4RS2qBCLxBYlNJw6vbWTv6qNNSEsdxYmSAf8
      FCxB3hIULEnREhRsScESzvvya94SFGxBoSTKK7WNVRJIywLLhpKNtJw/UbLBstzPv/frz9Gb
      7C+PQ/ME4D1+M19BvXH0JuxqBlJKOg3HC16/TGp2GV+pgCYkuhDYtiQgBLaQ2GXKsRHYmsA2
      nDgWYUhsw3YtFsJ2lEIpJLZdCbW1hUTYIISOEAZS6EhhIIQPKYVzrLQRtkAIm5Afd+lrVjZv
      Wpn1WKXQqrnXZtANg3ypegMMWk0RBs2J0bFFfdu4snp6zaBCOma5Wlnap/vcWmzOb9WWsEaT
      Y2ZijHevXOfp515AD5jobVEo2YiSxCoJiiVBviTI64KcZpPHJidtskKQtZ33lrApWRZWyUaW
      NChpyKJEFgWyCKIokSWJLAlkyUZKSC3NMrmQoSuicemd6/QPJUmnsnz0488Q1Ou31UsotYSw
      2fNUVi8pHYY0HDTI5SqlrIrFItPLq/gTSYSU+EyTx4Pw+BMnHc937QV9Pj/HB50QVLVLpymu
      qTkN95Xt1Sr1ubeyzGYU3ki23cz8VotGStlmk8TrpnePc9u3UbHXgPXFGQY62tzqj6hXTx+k
      lAiEEt83qMTSk/bEaZsSfypjUtVOTUfKaovHViJDT98A+/OCaEBnoe4RNR2r+bgd57mUkli8
      m9RakWRfL6N50EprrOtlHV/feHxtf2p/a9jk8uT3mlpfOPNE1d6GxcVFrgcDHBlM8sObE/Tp
      BqcPH3UZSp0VQHL7+vus23704irRxBD55SkiiX0M9SW4dP4N4v0jLE3dJtG/n6XZCWLJYUYG
      k+WHVOZOZVe5lJKF2XGydoR9/V3cvX2N5RxE9SIy1ImWW6FoRDl57CCX3z4PoS7ILiKDHchc
      Ci0c5+jo8JaD3srAuQNIpaK5EILe3iSTczfKJkdASiamZ/G1dRHQbOL7j2HN3+HoYA/hcNjh
      7mydt7PeRNI1h/BEefLDxozGmqZh2Ta6Xq5ToDnhEhLQtHKfpVNMux4K2Qy9g0OuAvmgsDg7
      xfT0LJ2dbfT295NZnma9qOPX61vatlKcGxk46ol/Xp+ElJJEVxeJLidAMeafRrctiqWK5axO
      OLRGvKuLQFEjNZeiUMiwuLCKMNegLwEI8oUCEsn6aprE4H6K5QwO3k7puu6sAlLS3dvLnTvL
      TiPa25hfSyEDUMgXCIeihIQESpjhboQsokU7oJiDjl5kqXHqdTU4tfblRgNXC93j9dR13a1v
      6+UgsbCJ3+9s2buzOMvxZCdm0MSyKykevferDerSG1R5V22tVwvYez1NqyjC3quoDBKaWmLq
      wIy0EypPhjA6rK0TFRJbgC0lNmAbEluX2H6JbYItdITUsYSBLVRYiUTYAikkCBtpOyZrhPMn
      hXA/RyMR2tpiJHqH3D5E+odJDjiimy1sRe5o2taVKBtiC3EYyhG1ylciJSeTcb53Z559c/MM
      Dzh6ysZoUGlz68YtIt19BM0wljTo7U9QRDAzO03QjCKFTcgMY5gBlqfv0p7chy0EvpqAMCX+
      TN25ydTMGr4AFNZSGIaOaRrk8gJRyFHSo0xPL1DILqCHE8jMEoQ6EavzGJHq8GJlxanH01pR
      cDVPjEvt4LnhukLQ19cL0qnVJZaXmV/KE41G6k5qJ55Jw7IqyQG24rz1lHOXgHD8LK6OUnO9
      ZnQdpQz3JiqKqTrXe76QohzU58PQNxbUayQK15PTGzEh571W9gWVN7eUp4wUnms3IIyqNjXx
      rGslA78/gC8U4u25Ffb19zlj0CgtikIlMtOiWBQEAtWOn9qOarqz2XujkibJ5wtuTiB1DfV7
      oVBwdxLV67S7oqhBKC/rzv7a5ie+uwOrZo9qvePcurfl1wvvXUNG4nxksKOqLpfaJK5rOpls
      puahU1UroBZeC4byDdRyN5UzyOn2xmsE/AHaymlR1FZFL+rdW923yvxY1nm8O7e8kbnN+Eec
      Ple3tb7ptJwDyjCwbBspRdXxtcF6QgpHHPQQnCpG7j1O9UU9v9okY6lUimKxRHd3wjEwNOyR
      unHZza3rPoLBirJSO6BCOstboMFGDiFk1eT3DoKmae7G60YDJkQlPYjjKZYuO3REhMo5ygJT
      ey9L2BhaxSPdCF7znbctiXgn80Wdiek5DgwPVo4X5ewKeJRodwxw6weodtVlHh69222bOyGU
      I0jzWIKaQz1FWU1o9d79o2K8qJ28XkJR4dRVu9o2IdBaqG2YypMNdUI8pHD2RGwiJomamhXe
      eVlv8oNTVVO1V0rZXG5Q7wm1v7l/UrpLp5dbeDnNZkqOtyP1Br3qnmhohjNnKrJwzfWoHpiS
      bYGU2Ah3hfI+6FqLkdtfz72H+3tI5vP4A51V7RVSoEsV11OT6MrLMOp0v0L0Tl+8xKMsS5JK
      1RlZFiEkzU22RgpkvbHfypTsFc00Ty2EDc/Hc51Gz1xZGH0+H2iO2FhrIXRXJITD8NhoUZOi
      JoJK3b9Jn8CWBNBo4tcOnJc71E7m2hVDpf/WteoJ3yxM03QzQTj7DDYeo7iuW48MkFq15iAU
      l/C0z+1Hg+xq3pXKOx4aGrYUG67j9A+kp7SoF1XXUgTgJQIUR3Q2yxiajqaXCXoH0WhlV/f3
      Hud6rrc4p5FjSkhBKr1K0AyClJiBAIZRnSnc1ReomImb8Qd5GtBwlffO3ZZ3hG3FQdQx9eQy
      1Xko25lrrlWPC9eDEOXSrWXZu1iqFGnYcD+EY8FAiRrVRKC4vLqTVmfrXjNQwXwVscW7emyd
      oMoJd/a0vc7EckIlPHE3myTLarTievWyegqxN4mxWiGVdct7De9rIwW4ESzLRiLJ5XP4dMPd
      Qagy5QnPuIHaH13LVDb6DWoliA0rSvk5e8/dVoGM2k57sdX3Orobi7MZB9ns/oVikWw+hxkw
      kcJJ5KShVVJryIp8697f+aJqkjbCZuIa4A5iPa+tS0w1528WIKdSm9S9o8QdL68s7CtPVLsB
      l20krqrfqhX1jXJ0bY2wRiJNPY682dgp34n3uKrzNafTtW2VUlnFatrUkOm4jam89YyF+lxF
      AGrvbW2na9GI8hrt9t9AhQ1+q0Wj+yulV9M09HLqDpWJwvY6hRTXoKIv6Fr9BFPl1ri04dy6
      djCpOldzNMGmoLE5oYsaPUbB0I2KBUhdy32AZUuKx9uuEo1tuH8TXNprFlYy+ma6QO11t7q+
      arMjz1eIuh5x1j6jus+jIcrPpYlzqsyge9jDhw07m2VoD3t4xFAlAtUWPN7Dw4Ft224OVG/l
      mT3sPBrWB9jDw0OtBW0P9w97ItAePtR4IAQgLMH0XI6ZhQK22Khzy0KJ98bL+d+lZGmpwMpa
      c44eq2STLXj2D9iC+aViIx8IAOffTZFLF7g9U50x+vL1tPv+0rspcrkS1+7muPJeiqwtSGd2
      1vnUDNLpIlOzeVbXq+8tbcFaztk4dOXmWvVJUjK/WMDeZAyuXU2xXrS5fG296vub19Ju0emx
      W6ssZQWXr60xOZ5mJm2TXi9tvBjwnmfsarG25vQhtW7VtcncuLFGodxYq2gzM5+naDVnm1lb
      L93ThkPjd37nd35PfaiX/GgnsDq1yr/92hRLk2vcWtfZ167x1rV1+pMmK4s5Lr61xGvjFh87
      GuEnP5rib3+2SjonOdQX4PWLK7R3mszP54lGfYxP5ihmSkzM5ljKCG69PcdfnE1zZDRCNKhz
      450FfvdPJvj0c91MTmXpjPm5M5GjkCly/v11enuCzC7kCZWKvD5m0x20+dmVdXq6Tb753Sl0
      CZFYgKXlIh0Byd9fXKc/5gO7xL/7o3H29Zmkc5JYEMbnSnS23VN2ybqQspJO8E+/Ps7EQolv
      fX+Wp56K8/alFbJCJ3VnmT/81jyH9oX5/suzCKnR3R3Ep2usL2f53f90le4jXYh0nlCbn6nJ
      LCA5dylFNGaSSRWIdfv41ncXOT5i8vqlFG0dJq98f4ZsoFzNJVMkFAvwne/NcmQ4SAmN//DV
      G3R0BcnnLDrbfYxN5uiM+fmLb08S0CAQ9TM9kyce83Hrbo54h58//1+3uDpZ4JvfneHZTya4
      fiVFVurEIgbvvZfir783yxNn4phS8AdfvcHUYpG2rhDFdJ5rUwV6u/yMT+UJIFjKwex0hutj
      GdrCBv/+D6/j7zTZnwxua6x3/uk1wOpqkVtFja98Osh/+9odTh0N840li6tvL/HCE9HyUZI3
      b+b57X85iq5p/OnXbtI/GuOrX79LTwR+7Vf38d1/mGd/RLDcEeHm1Tn+0RMhAgENo5xJ4Y33
      M/z2ryR4+dI6uVsLhEK9/MPP0hzvgUtvp7idkqxNrzL8rBMUdXtsnXfeTnFt3ia7VmQ9V+JP
      /moaU5Y49Hmn0sxbl1Z47oUEfp+GGfLxf/92kmdPhFnv7mTkfg+ckEzNZvFFArBe5PKtdV7/
      m1n+zVd68Ad0fD6NyeksCVOyHjD57GNh3nprhd/4rVFefW2BxxOSeWlw7uwCLzzZzvVba7x8
      aY0T7ZKug07+kKmpLNdvpnnl7QwHfDaptM0f/fguTw9qHOxx8oPeuZHCP5rE79MJmgYv/3gG
      8XNxzk9KDgyFsXMlVnM2f/y/J+k2LHg2wWs3LUaHw0ghmZ7LYbQFGDs/xyvjgqXpRb7wZJQL
      cxKrzO3T02naDyf4jZcSlNZz/P7/mOV4v858xmLs8hpfOh3k7WKYN74/xjOPd/A3czZ+n07I
      3L7h5oHpAB/7WA+/9Su9vP7mCkvLRVYtnURIogf9DCQqUaJxU/LmtQwTs84yuH8ojIFEtwXj
      U1lWMjZg8MlnEnS3G/T3huiIBYiYGnahyFuX03z7/61y/vwiz56O8cdfu8tTT3fyxjtrnD4a
      pVj0ek4Fr19Kc/pYlJIlMEM+RgZCGHX0zo64SbzNT1fMz5mDQf7s1TWeObw9rtMSQn5+458M
      060X+en5JcLdUbpCOsneIG1RP+0hnZGRds4ci5bFS8lrb6f4zvfnuHw9zYkn4rz6nTv0HY7z
      05+t8NjxGEZNFruf/GyZjzwWwxACXdM5MBwmUIc1BkI+knE/vYkAnz3TwX/82hSf+lgnALrp
      Y3QghE+HL30yzu//97vub76Qn3/2K8MMaCVuL1vMLxZIdpmk1iyG9zkrN0A4HmTqRoqJmRxL
      qRLBaIB9vUHyeUEmU+LWpLM5qm8gyrOnY0hNZ6DbT7IrsLGxTeKBiECarnH1WpqplOSXP9/L
      qYMhbk4WePyJLkZikpuLNiePtNEXD3DiWDsXLyyxJnS+8Eycl19f4nOf6ePYoMnP3s9w8lg7
      o/vCxLtM2oI6Bw/GmLy1SrQrTBDBoccS/NKLSToCcOBwjGxR8vGT7filzYqlc+JQlKEek4Fk
      iFDUT19MZyGvcfJQlAM9Ps69n+EXP99HPOqjPxkkGPIx0GPSkwwTEhazGTg2ZDKT1XnmxMbs
      yTsBrwgUMXTOvrXKoZMJnv1IO+9fW+PE8RhHjrSTnVtHhoMMdgfoSwZpaw/QEYRQPMJXvtjH
      aI+fjmSEUtbm2afjJNt0rk4WOX28jf2DIbq7g0QCBseGg1ydLvHEsTaOHApz/kKKz77QR7LT
      T7wrRHvQYKA/REenyYGEjws383z0ZBvvjxd46Zk4AG0BeP3dNX7h830kE0GujmV56RNdaBro
      ts1rF1McONnF555JkF/JYcaCfPbZBJffWaZnMMrRkQhm0Mdoj4+X31xh/+FO+oM242s6X3o2
      gZXJUwoEODoaJdnpoy8ZIhT28dhIkDevZjlxYJNsWJugyhOsoiz3sDn++tt3ee4zAyQi92es
      VLFAwC00uNvwox9NM/xYgoPJjdz37I9n6D0S50i/+RBa1hr2CGAX4lEggA8K9vwAe/hQY48A
      PqC4Lxn+PoDYI4APKLazqefDiAfmB9jDhxdrBZtSnQiARjB9GhH/g9FF9whgD/cdP7m1wvRq
      84XKjyUjfOJAx31sUQV7BPCIY3l+mqmFNH29SQxZJNzZg1nPk/cw0aI49iDFtz0CeMSRzWbJ
      5/MsLcxQFH4e6+pxC1fvFj2g1WZIKTck97pf2COARxxSSgwp8Uc7aBMFcpYkXJafd4tPp9Ut
      DZqmNay9sNPYI4BHHEMjhxi67xF5H1zsmUH38KHGHgHs4UONPQLYw4cau5YAhF3k4sWL2BLs
      Uo6fvvIyY3cnOPvKK8zPz3P2lZ+QzhYfdjP38Ihj1yrBmu4jEDAQAnyGnwOjI0xNjpFaXefs
      q2cJ+w3evj7Os48favqaU7evcfn2JJ/81AvM3bnMtbFFhgdiTC0VGIj7mV6xef4TZ+5jr/aw
      27B7VwArx8Vz57h68xazU2N85/tnae8eoM2EI8dO4jd8JBOdLV2zt3+ARFcCTYOueBeZbJZ0
      SWcoYbKYMeho8299kYeIYi6HJWyyuea9qnvYHLt2BdB9YX7tn/8mufQyJV+Uf/GbBwE4POoU
      dj557AjexJwlS5AplLCFIBw08RsahqZV2aDPn3uNlG0yMTGBll3C9AlEPsPN+QK9MT8zCzZP
      PMhOtgTB2W9/k/WOOAdHTnLyyODWp+xhS+xaAlAJocKxrrq/20IytbzOe5Mpbs2vsbiaZ3l1
      ndnJSf7pr74IUhI1DbojfoZiJvGwj4899yLglMnp2D/E6PHHq665eyc/gM7pp89wfmyGWPte
      tridwq4lgEaQUvL+9Co/ujzDxFKlgqQQ5WrnxRIlWyAkFLIWS1mLqws54iEfJ5JhBtoDbpmc
      Rw26LrFqkv0szU4yly4Qj7VBKU9n39DuiwXaxXikCGAtX+Lv3pk3sSJaAAANOklEQVTlwq35
      Db9V0jrWT36+nLN49U6a/vYAZwaihAO7I0ygFQRjCeLBaVLpLPv6nJVxeWUFuwjLVh5L+kkO
      sBcL1AIeCQKQUjKXLvCN85OksiUCfh/F0sYBcmtzbTLg0+kiP8yleHZ/O50h3yOXe1OWa4Up
      JHuSjE8v0JFIEtKsvVigFvFIEMBcusD/PDdBrmijaRoBM0DJ2sjhNF0rF7HYHNmS4Me3V3n+
      QIx4eHdbfrworK2QzheJevrd3tXDya6eh9iqRxu7ngDSuRJ/dWGKXLFS+UXXNIJmgFy+Yg7U
      tHIVxSaWWykla3mL715e4Muneoiau34YkFKg+fwYEvzm9hNBPYqYXi3wyu1US+f86qlu/MbW
      Vv5d/eSllPz95TlS2Y0JWX0+A1+5yLKCrmtbcn8pJfmiRa7giFBnb67w0vHErheFipklxhYs
      Pv2JJ7lwdRn2Jx92kx4YLCHJ5O+PTrBrHWEAN+YzXJ1dr/ubpmmYwUDNdzqbCUBSSrL5kjv5
      Ae4s5xhbzu1Ie+8nAuE4IjvLq+fe5eDBoYfdnA8Mdi0BCCF57ebSpsfomoYZqMjwut5YBBJC
      spYtUihtrP974W7aU5pzd0LTDU6efIz29naKhT1P8E5h1xLA3FqByZXNObOmaQQCNZUt66wA
      ti1Yyxaw7Pq5cubXi8yv7f7AutTUGLdmFskV6ufo30PreOA6QGllkr959T2e/9RzhPOL/ODN
      9zh98hjvv/cu3X2DLM3NcebTL/L+dOOCC15oZYU4m8uj6xrIalm+ZNms5zYvmAFweylLb/vu
      zmVpFUtE29oJ1kvdvIdt4YGvAPmCIGjY5AtFCraNH4k/2oZWKKHpOlppkZuTa4x7vLxbwTB0
      /H4feOr2SikplCzWsltPfnAsDbtbCIKu4QNYqXlKcncr7I8SHjgr0YJBQj6D9OxdCh2dmH6D
      xZkZ9JBJKBKhaCQ4NBjl1Tre3obX1DRMM4BlWWhyo6WnGazmLWxb4GvCdPawkJqeINgRY3Ji
      jn09sYfdnAcGIQT5FsW+ZpnZAyeAaEcPn/nc58lms4TDYUaHylGNjz0GwLFDB1nLO/E8rcDx
      DZhIHEtPPWV3M1i2pGDtbgLo6B8if/UuR49VgviksLh08T0G9g2ClSfWM/CBiwUqlmwWV+pb
      Axuh2TCQhyZMbpb2W0jnr1X4fAaDQ/0tT35wBmw793yQSM/NEoy1MTuzxFC3swJMj49hS0gt
      L5C3Dbp7d18s0OLKOtMtiLS9QbCsSvER2279edqWTf2SfNXYldqUoTux/HaLUrmh65w6dXRb
      99Q0zVGidzECkTaGhjs4ONTnfheJdWCms4RjCeIUd2UskJSOGboVeGOBttMPw2fg82193q4k
      ANOn4zc0ii0SfiQc2PYk9hsapm/3ij8Auk/n3Ct/T/GZz3DqsOMM64h30xHvfsgte3SxK5+4
      39DpjLQW7xIK+pui+EZoD/rw7eIVQAiLqZu3GD75Ufq7H839DLsRu5IAAIa7mi8NFPAbmPdo
      G++P7W4fAMLGMttJhDTy+d3vtHtUsGsJ4EhvdOuDcPSFUChwz8Fso4ndXYtL9/mZvnaFG3fv
      spJuXqHcw+bYtQTQ2x5koGPzOrwaEAmbVRtEtoNkW4DuFkWuBw+dU6dPsTQzR/EB7Zb6MGDX
      EoCua3ziUGLTY8KhAMYO2O2fHGrf9RYggGhXN8ePHiIa3tsUv1PYlVYghYM9EQ4no1yf2+gE
      MQM+/DtQRmd/PMT++O6fUIXMIj/40StY0sAI9j7s5nxgsGtXAHBs81842UssVE2nPkMnFPTf
      s9wfNQ2eO9i56zfDAKCB32+iaTr+XW6ufZSwq1cAgLagj3/80UG+7u4Jduz99zppgz6dl453
      PxLbIQHMcIKf//KXH/h903mLc3ebi8xVeGZ/jMgjknXjkXj6Pe0mv/axIf7qwhQWuhv/v11E
      TYOXjneTiDw6G+IbYXVpjuu3p+hK9uC3C/TsO7CjsUBFW3BnqbUdc08Nte/Y/e83HgkC0DSN
      3liQX39mmJ/cWuHOPWxh3B8P8dzBTqKmj/WVGc6+eoGREx/h+IFB3vi7r9Nx7HnefucSz5w6
      zFtX7/Lcpz5JR3j3WogCZpDegX5KmRWWizqD+s7GAm0rDse28Bqq6mdqagxRkxfoQxcL1Aht
      QR8vHU8wtpzjwt008+vNO4R62gI8OdTOSDxUEZ+koCQsSpbN4sT73JxaoKdrjbYAXL5yi2BQ
      Y35hlY7h3RtqkEots5Yu0t3XR49mk7ckoR2MBTKM1ivOG4avKpZHo7UVSa/JC/ShiwXaDJqm
      caArzP7OEAvrRW4tZZleLbCat7BsiZQSTdPwGxrtQR/9MZPRRJjuyMY4IZ/PJBwOo+VWWI8N
      8cLzz7Psa2c2HeDgkcNcv36dUGh3e4j7Bkfo2/qwPTTAI0cACrqukWw3SbabSAm2EBQsJyeo
      rmuYhrZlbH+wPcGLL75IqVjA8AXQexP0ASdGBgAYHt5//zuyh4eKR5YAvNA0xzS63c0s/sDu
      5vJ7uHecvblCpk548QeCAPawh60wvphhuU5JrT0C2MOHAqtrOVbWN+ZTumcCKOUzTEzP0z84
      5KbrsIo5LC1AcAdCFfawh1LJYiW11tpJTVpe75kA5q+f48ZKkMnFHDFfjqGRA7z16g9oGz1D
      EJtTJw63aATbQytILc5yd36V/t4eDLtAOJ78wG2KF1JQLO7irBBCN1i9+y638jrXb9zi8MF9
      TM7NoZcKHDt2mMBe6Mp9QzpTYKAjyvTMJGhBTnbvBcrVQzaXZ319owP1ngkgvv8Uscu3OPri
      F5m8eZXk4D6mp6Z4/Eg3i6ks/g8WM9p1MA3Jnfklkj09GHaebEkQ9lc4TsESWC1sSDd0jaAn
      2M62RMspSWxR7ThcWV1jbr759Obprp23yuVyeTLZ/Ibv75kAgm1dPPUxp1zP8cefRAOSPU7B
      hoGBe716c5BSUvLUztI0msoNv5MQUlK0Kl5TQ9ceSBuSg/tJllMr2eU6abmiwLZtTD+cn1hj
      bGnjg2+EgQ6T5w92ug5FCYgWQhEsW5DNFwmWxTC/Tydg6Jgt6IO+8rluG2xBKd98H4qWTSZX
      wLace5oBH1axWPcaWiaTcWeOaZotu52llPxwrKKgRPw6Hx+Kksuuk84USHbXr/K4k8gULP7s
      zWn382CHyS+cTDI3N0cmV2BkeOi+hzxPLmf4Lz+46n4+vT/OV35uhNvXr5DH5Pjh0aavZds2
      hXIG6M3yJ9Xiws05/uBbb7mfv/TUCF959jDXrl0jFAqxf//+ltqwnRCEv33tGv/5G6+5n//V
      Lz7FLz93gjt37pBMJgmFmt97sd02fPUbZ/mvf/2q+/kP/vUv8bmnj7GwsEAikWBhYYFk0qmv
      cN9YVGp1lStX3rtfl28KK9N3+MEPvvdQ2zA9t0h6ZfM07/cTmqYxPDzM6uqq+50Uglxuc466
      VcRtZi1NrtBcLFYul2N8fJx33nnH/a5UyLOSSm+at3WrNtil+unu60FKycTEBIVCgfHxcQCK
      +dz9I4Du7h6keLjZyW7evsXq8mJLMvBOI2hIpuaXH9r9NU1jdnaWgwcPut8VchnuTs1sed5m
      WEunGB+faKoNwWCQoaEhhKiIiMVCjrt3bpLdJPnTZm2QUjJx9wp3x5tjLpqm0dbWhpSSSCSC
      ZVlMTt7dGStQu1mho1BZgZqbm6ajI06xZFUVsbgf0HWNnmglZLkj5Nzviaef49jpjz+QfD8B
      Q2coXhFX4lFHkesbPsDQ6IMJp44E/Yz2VpLmdrU54kZPT0+VKBWMtBEJtrbJpRalks3w/uEN
      33dEgxzZV9nL3Vlug2VZnD592v1e13UMn3/bDLKUSzGzkMbwR4DqIoE98TYeG+13P8eiIYQQ
      ZLNZFhYWKJVKLCwsEA2H710H2MPOY7s6QLPIrC4xNjHL8Ogh2kLbIU7BjfevYMZ62Ne/vQqV
      6ZUF5pYzHBgZxtg2gyqxvi6IRrdnNVpbWagmAL/fv63dVpdmK/bVoE/jaGLzdCY7jYIlePVm
      RcyIh/2c3vdg04evrBd4+b2KIr4vEeXMwe3tIxBCUCo5jh/TbP7h3p1P88OL4+7nUyPdnDn8
      YP0C796e5eULN93Pn3z8AE8c6t/kjIeLKhFIDXorkFJyfbFCANGAxkibxo3rl7k5Nsmnnn+B
      0H2uaLJesPjZ2Ir7eV+nyYlkkMsXz3FtYokv//xLLRdrbhVL6UwVATw5EufUUDuvnf0B0t/O
      x5/5uW1dt9BCPbDJ+RTfeaMy+TQpeGwoxoULFwiHw5w4cWJbbWgF1+7M8n9+9Lb7ubs9xLGh
      OBcvXuTo0aNcvHiR/v5+RkZG7ntbmsF9m5nJnj7ml9MP3B7vxa1bd0jlhGtPfhgYn12mLfJw
      a3rl8/mHmvlC0zT6+vrI5/Pu627BfZudl6+8g98XwBatb6nbKXT3dGMYRst7UncS+/u6MFuw
      fd8PmKZJIPDw9jULIbh9+zbz8/PMzMy05Au43/j/g4+681wK418AAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
